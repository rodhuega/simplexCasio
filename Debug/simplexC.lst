SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE    1

************ OBJECT LISTING ************

FILE NAME: C:\casioPr\simplexCasio\simplexC.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c     1    #include "fxlib.h"
      simplexC.c     2    #include "revolution.h"
      simplexC.c     3    #include "limits.h"
      simplexC.c     4    #include <stdlib.h>
      simplexC.c     5    #include "stdio.h"
      simplexC.c     6    #include "SH4_compatibility.h"
      simplexC.c     7    
      simplexC.c     8    #define NO_EVAL_VALUE INT_MAX
      simplexC.c     9    
      simplexC.c    10    #define TYPE_LP 1
      simplexC.c    11    #define TYPE_ILP 2
      simplexC.c    12    #define TYPE_CUT 3
      simplexC.c    13    
      simplexC.c    14    #define TYPE_INPUT 1
      simplexC.c    15    #define TYPE_SOLVE 2
      simplexC.c    16    
      simplexC.c    17    #define INITIALIZE_VALUE_OPT -1
      simplexC.c    18    #define INITIALIZE_VALUE_OPT_ITS_MENU -2
      simplexC.c    19    #define EXIT_OPT 0
      simplexC.c    20    #define EXIT_OPT_ITS_MENU -1
      simplexC.c    21    
      simplexC.c    22    #define INE_EQUAL 0
      simplexC.c    23    #define INE_LESS_OR_EQUAL_THAN 1
      simplexC.c    24    #define INE_GREATER_OR_EQUAL_THAN 2
      simplexC.c    25    
      simplexC.c    26    
      simplexC.c    27    #define FUNC_MINIMIZE 0
      simplexC.c    28    #define FUNC_MAXIMIZE 1
      simplexC.c    29    
      simplexC.c    30    
      simplexC.c    31    #define MODE_FULL_EXECUTION 0
      simplexC.c    32    #define MODE_INPUT_TABLE 1
      simplexC.c    33    
      simplexC.c    34    
      simplexC.c    35    struct iteration
      simplexC.c    36    {
      simplexC.c    37        int numIteration;
      simplexC.c    38        int is2FasesActive; //1 si esta activado. 0 en caso contrario
      simplexC.c    39        int* idBasicVariables;//1 si esa variable es Basica. 0 sera NoBasica
      simplexC.c    40        int *idByRowOfBasicVarsInBInv;//ejemplo [0]->2. la row 0 tiene asociala la variable 3
      simplexC.c    41        int isUnbounded;//1 en caso de si, 0 en caso de no
      simplexC.c    42    
      simplexC.c    43        int idVarIn;
      simplexC.c    44        int idVarOut;
      simplexC.c    45        int indexVarOutInBInvMatrix;
      simplexC.c    46    
      simplexC.c    47        float **Binv;
      simplexC.c    48        int BinvSize;
      simplexC.c    49    
      simplexC.c    50        float *ct;
      simplexC.c    51        float *xb;
      simplexC.c    52        float *ctBinv;
      simplexC.c    53        float *zj;
      simplexC.c    54        float *cjMinusZj;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c    55        float **yj;
      simplexC.c    56        float *xbDivYj;
      simplexC.c    57    
      simplexC.c    58        float zSol ;
      simplexC.c    59    };
      simplexC.c    60    
      simplexC.c    61    struct problemStatement
      simplexC.c    62    {
      simplexC.c    63        int problemType;
      simplexC.c    64        int modelType;
      simplexC.c    65        int is2fasesNeeded;//1 en caso de si. 0 en caso que no
      simplexC.c    66        int is2fasesActive;//1 en caso de si. 0 en caso que no
      simplexC.c    67        
      simplexC.c    68        //1 array de variables por cada constraint
      simplexC.c    69        //Cada constraint tiene primero todas las variables input, luego todas las slope y finalmente las 2fas
                         +es
      simplexC.c    70        float **constraints;
      simplexC.c    71        float *rightValues;
      simplexC.c    72        int *inequalitySigns;
      simplexC.c    73        int nVariables;
      simplexC.c    74        int nVariablesSlope;
      simplexC.c    75        int nVariables2fases;
      simplexC.c    76        int nVariablesInteger;
      simplexC.c    77        int nConstraints;
      simplexC.c    78        int *idIntegerVariables;//1 en caso de que sea. 0 en caso que no
      simplexC.c    79        int *idSlopeVariables;//1 en caso de que sea. 0 en caso que no
      simplexC.c    80        int *id2fasesVariables;//1 en caso de que sea. 0 en caso que no
      simplexC.c    81        int *idConstraintToSlopeVar;//Guarda la id de la variable que es slope perteneciante a esa contraint. 
                         +-1 en caso de no tener
      simplexC.c    82        int *idConstraintTo2fasesVar;//Guarda la id de la variable que es 2fases perteneciante a esa contraint
                         +. -1 en caso de no tener
      simplexC.c    83    
      simplexC.c    84        int funcObjectivePurpose;
      simplexC.c    85        float *funcObjtValues;//Ultima posicion, termino independiente sin variables
      simplexC.c    86        float *funcObjtValues2Fases;
      simplexC.c    87    
      simplexC.c    88        float** ajVector; // guarda un vector por cada variable y contiene su valor en todas las constraints.
      simplexC.c    89        
      simplexC.c    90    };
      simplexC.c    91    
      simplexC.c    92    struct node
      simplexC.c    93    {
      simplexC.c    94        int id;
      simplexC.c    95        int nIterations;
      simplexC.c    96        struct iteration **its;
      simplexC.c    97    };
      simplexC.c    98    
      simplexC.c    99    struct execution
      simplexC.c   100    {
      simplexC.c   101        int mode;
      simplexC.c   102        struct problemStatement *initialProblemStatement;
      simplexC.c   103        struct problemStatement *canonicalStatement;
      simplexC.c   104        struct node nodes;
      simplexC.c   105        float *bVectorValues;//Right values;
      simplexC.c   106        float *inputCvectorValues;//Values of cost variable
      simplexC.c   107        float *fases2CvectorValues;
      simplexC.c   108        int nNodes;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   109        int currentFuncObjectivePurpose;
      simplexC.c   110        int nVariables;
      simplexC.c   111        int nConstraints;
      simplexC.c   112    
      simplexC.c   113        float** ajVector; // guarda un vector por cada variable y contiene su valor en todas las constraints.
      simplexC.c   114    };
      simplexC.c   115    
      simplexC.c   116    struct execution ex;
      simplexC.c   117    
      simplexC.c   118    float InputD(int, int);
      simplexC.c   119    
      simplexC.c   120    int InputI(int, int);
      simplexC.c   121    
      simplexC.c   122    float InputD(int x, int y)
P   00000000              _InputD:                         ; function: InputD
                                                           ; frame size=532
                                                           ; used runtime library name:
                                                           ; __dtos
    00000000 4F22                   STS.L       PR,@-R15
    00000002 908F                   MOV.W       L1469,R0   ; H'FDFC
      simplexC.c   123    {
      simplexC.c   124        char *string[128], *stopstring;
      simplexC.c   125        string_input(x, y, string);
    00000004 D349                   MOV.L       L1469+8,R3 ; _string_input
    00000006 3F0C                   ADD         R0,R15
    00000008 66F3                   MOV         R15,R6
    0000000A 430B                   JSR         @R3
    0000000C 7604                   ADD         #4,R6
      simplexC.c   126        return strtod(string, &stopstring);
    0000000E 7FF8                   ADD         #-8,R15
    00000010 D247                   MOV.L       L1469+12,R2; _strtod
    00000012 65F3                   MOV         R15,R5
    00000014 7508                   ADD         #8,R5
    00000016 64F3                   MOV         R15,R4
    00000018 740C                   ADD         #12,R4
    0000001A 420B                   JSR         @R2
    0000001C 2FF6                   MOV.L       R15,@-R15
    0000001E D345                   MOV.L       L1469+16,R3; __dtos
    00000020 430B                   JSR         @R3
    00000022 7F04                   ADD         #4,R15
      simplexC.c   127    }
    00000024 917F                   MOV.W       L1469+2,R1 ; H'0204
    00000026 3F1C                   ADD         R1,R15
    00000028 4F26                   LDS.L       @R15+,PR
    0000002A 000B                   RTS
    0000002C 0009                   NOP
      simplexC.c   128    
      simplexC.c   129    int InputI(int x, int y)
    0000002E              _InputI:                         ; function: InputI
                                                           ; frame size=516
    0000002E 4F22                   STS.L       PR,@-R15
    00000030 907A                   MOV.W       L1469+4,R0 ; H'FE00
    00000032 3F0C                   ADD         R0,R15
      simplexC.c   130    {
      simplexC.c   131        char *string[128], *stopstring;
      simplexC.c   132        string_input(x, y, string);
    00000034 D33D                   MOV.L       L1469+8,R3 ; _string_input




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000036 430B                   JSR         @R3
    00000038 66F3                   MOV         R15,R6
      simplexC.c   133        return atoi(&string);
    0000003A D23F                   MOV.L       L1469+20,R2; _atoi
    0000003C 420B                   JSR         @R2
    0000003E 64F3                   MOV         R15,R4
      simplexC.c   134    }
    00000040 9173                   MOV.W       L1469+6,R1 ; H'0200
    00000042 3F1C                   ADD         R1,R15
    00000044 4F26                   LDS.L       @R15+,PR
    00000046 000B                   RTS
    00000048 0009                   NOP
      simplexC.c   135    
      simplexC.c   136    int freeMemoryStatement(struct problemStatement *pS)
    0000004A              _freeMemoryStatement:            ; function: freeMemoryStatement
                                                           ; frame size=16
    0000004A 2FE6                   MOV.L       R14,@-R15
    0000004C 2FD6                   MOV.L       R13,@-R15
    0000004E 6E43                   MOV         R4,R14
    00000050 2FC6                   MOV.L       R12,@-R15
    00000052 4F22                   STS.L       PR,@-R15
      simplexC.c   137    {
      simplexC.c   138        int i;
      simplexC.c   139        for(i=0;i<pS->nConstraints;i++)
    00000054 DD39                   MOV.L       L1469+24,R13; _free
    00000056 A006                   BRA         L1158
    00000058 EC00                   MOV         #0,R12
    0000005A              L1159:                            
      simplexC.c   140        {
      simplexC.c   141            free(pS->constraints[i]);
    0000005A 64C3                   MOV         R12,R4
    0000005C 50E4                   MOV.L       @(16,R14),R0
    0000005E 4408                   SHLL2       R4
    00000060 4D0B                   JSR         @R13
    00000062 044E                   MOV.L       @(R0,R4),R4
    00000064 7C01                   ADD         #1,R12
    00000066              L1158:                            
    00000066 53EB                   MOV.L       @(44,R14),R3
    00000068 3C33                   CMP/GE      R3,R12
    0000006A 8BF6                   BF          L1159
      simplexC.c   142        }
      simplexC.c   143        free(pS->constraints);
    0000006C 4D0B                   JSR         @R13
    0000006E 54E4                   MOV.L       @(16,R14),R4
      simplexC.c   144        free(pS->rightValues);
    00000070 4D0B                   JSR         @R13
    00000072 54E5                   MOV.L       @(20,R14),R4
      simplexC.c   145        free(pS->inequalitySigns);
    00000074 4D0B                   JSR         @R13
    00000076 54E6                   MOV.L       @(24,R14),R4
      simplexC.c   146        free(pS->idIntegerVariables);
    00000078 4D0B                   JSR         @R13
    0000007A 54EC                   MOV.L       @(48,R14),R4
      simplexC.c   147        free(pS->idSlopeVariables);
    0000007C 4D0B                   JSR         @R13
    0000007E 54ED                   MOV.L       @(52,R14),R4
      simplexC.c   148        free(pS->id2fasesVariables);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000080 4D0B                   JSR         @R13
    00000082 54EE                   MOV.L       @(56,R14),R4
      simplexC.c   149        free(pS->funcObjtValues);
    00000084 E048                   MOV         #72,R0
    00000086 4D0B                   JSR         @R13
    00000088 04EE                   MOV.L       @(R0,R14),R4
      simplexC.c   150        if(pS->modelType==TYPE_SOLVE)
    0000008A 50E1                   MOV.L       @(4,R14),R0
    0000008C 8802                   CMP/EQ      #2,R0
    0000008E 8B04                   BF          L1160
      simplexC.c   151        {
      simplexC.c   152            free(pS->idConstraintTo2fasesVar);
    00000090 E040                   MOV         #64,R0
    00000092 4D0B                   JSR         @R13
    00000094 04EE                   MOV.L       @(R0,R14),R4
      simplexC.c   153            free(pS->idConstraintToSlopeVar);
    00000096 4D0B                   JSR         @R13
    00000098 54EF                   MOV.L       @(60,R14),R4
    0000009A              L1160:                            
      simplexC.c   154        }
      simplexC.c   155        return 0;
    0000009A E000                   MOV         #0,R0
      simplexC.c   156    }
    0000009C 4F26                   LDS.L       @R15+,PR
    0000009E 6CF6                   MOV.L       @R15+,R12
    000000A0 6DF6                   MOV.L       @R15+,R13
    000000A2 000B                   RTS
    000000A4 6EF6                   MOV.L       @R15+,R14
      simplexC.c   157    
      simplexC.c   158    int freeMemoryIteration(struct iteration *it)
    000000A6              _freeMemoryIteration:            ; function: freeMemoryIteration
                                                           ; frame size=12
    000000A6 2FE6                   MOV.L       R14,@-R15
    000000A8 2FD6                   MOV.L       R13,@-R15
    000000AA 6E43                   MOV         R4,R14
    000000AC 4F22                   STS.L       PR,@-R15
      simplexC.c   159    {
      simplexC.c   160        //TODO
      simplexC.c   161        free(it->idBasicVariables);
    000000AE DD23                   MOV.L       L1469+24,R13; _free
    000000B0 4D0B                   JSR         @R13
    000000B2 54E2                   MOV.L       @(8,R14),R4
      simplexC.c   162        free(it->idByRowOfBasicVarsInBInv);
    000000B4 4D0B                   JSR         @R13
    000000B6 54E3                   MOV.L       @(12,R14),R4
      simplexC.c   163        free(it->xb);
    000000B8 4D0B                   JSR         @R13
    000000BA 54EB                   MOV.L       @(44,R14),R4
      simplexC.c   164        free(it->ctBinv);
    000000BC 4D0B                   JSR         @R13
    000000BE 54EC                   MOV.L       @(48,R14),R4
      simplexC.c   165        free(it->zj);
    000000C0 4D0B                   JSR         @R13
    000000C2 54ED                   MOV.L       @(52,R14),R4
      simplexC.c   166        free(it->cjMinusZj);
    000000C4 4D0B                   JSR         @R13
    000000C6 54EE                   MOV.L       @(56,R14),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   167        free(it->yj);
    000000C8 4D0B                   JSR         @R13
    000000CA 54EF                   MOV.L       @(60,R14),R4
      simplexC.c   168        free(it->xbDivYj);
    000000CC E040                   MOV         #64,R0
    000000CE 4D0B                   JSR         @R13
    000000D0 04EE                   MOV.L       @(R0,R14),R4
      simplexC.c   169        return 0;
    000000D2 E000                   MOV         #0,R0
      simplexC.c   170    }
    000000D4 4F26                   LDS.L       @R15+,PR
    000000D6 6DF6                   MOV.L       @R15+,R13
    000000D8 000B                   RTS
    000000DA 6EF6                   MOV.L       @R15+,R14
      simplexC.c   171    int freeMemoryNode(struct node *n)
    000000DC              _freeMemoryNode:                 ; function: freeMemoryNode
                                                           ; frame size=12
    000000DC 2FE6                   MOV.L       R14,@-R15
    000000DE 2FD6                   MOV.L       R13,@-R15
    000000E0 4F22                   STS.L       PR,@-R15
    000000E2 6D43                   MOV         R4,R13
      simplexC.c   172    {
      simplexC.c   173        int i;
      simplexC.c   174        for(i=0; i<n->nIterations;i++)
    000000E4 A006                   BRA         L1163
    000000E6 EE00                   MOV         #0,R14
    000000E8              L1164:                            
      simplexC.c   175        {
      simplexC.c   176            freeMemoryIteration(n->its[i]);
    000000E8 50D2                   MOV.L       @(8,R13),R0
    000000EA 64E3                   MOV         R14,R4
    000000EC 4408                   SHLL2       R4
    000000EE BFDA                   BSR         _freeMemoryIteration
    000000F0 044E                   MOV.L       @(R0,R4),R4
    000000F2 7E01                   ADD         #1,R14
    000000F4              L1163:                            
    000000F4 52D1                   MOV.L       @(4,R13),R2
    000000F6 3E23                   CMP/GE      R2,R14
    000000F8 8BF6                   BF          L1164
      simplexC.c   177        }
      simplexC.c   178        free(n->its);
    000000FA D210                   MOV.L       L1469+24,R2; _free
    000000FC 420B                   JSR         @R2
    000000FE 54D2                   MOV.L       @(8,R13),R4
      simplexC.c   179        return 0;
      simplexC.c   180    }
    00000100 4F26                   LDS.L       @R15+,PR
    00000102 E000                   MOV         #0,R0
    00000104 6DF6                   MOV.L       @R15+,R13
    00000106 000B                   RTS
    00000108 6EF6                   MOV.L       @R15+,R14
      simplexC.c   181    
      simplexC.c   182    int freeMemoryExecution()
    0000010A              _freeMemoryExecution:            ; function: freeMemoryExecution
                                                           ; frame size=12
    0000010A 2FE6                   MOV.L       R14,@-R15
    0000010C 2FD6                   MOV.L       R13,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000010E 4F22                   STS.L       PR,@-R15
      simplexC.c   183    {
      simplexC.c   184        int i;
      simplexC.c   185        if(ex.mode == MODE_FULL_EXECUTION)
    00000110 DE0B                   MOV.L       L1469+28,R14; _ex
    00000112 63E2                   MOV.L       @R14,R3
    00000114 2338                   TST         R3,R3
    00000116 8B03                   BF          L1166
      simplexC.c   186        {
      simplexC.c   187            freeMemoryStatement(ex.initialProblemStatement);
    00000118 BF97                   BSR         _freeMemoryStatement
    0000011A 54E1                   MOV.L       @(4,R14),R4
      simplexC.c   188            freeMemoryStatement(ex.canonicalStatement);
    0000011C BF95                   BSR         _freeMemoryStatement
    0000011E 54E2                   MOV.L       @(8,R14),R4
    00000120              L1166:                            
      simplexC.c   189        }
      simplexC.c   190        for(i=0;i<ex.nVariables;i++)
    00000120 A011                   BRA         L1167
    00000122 E400                   MOV         #0,R4
    00000124              L1469:                            
    00000124 FDFC                   .DATA.W     H'FDFC
    00000126 0204                   .DATA.W     H'0204
    00000128 FE00                   .DATA.W     H'FE00
    0000012A 0200                   .DATA.W     H'0200
    0000012C <00000000>             .DATA.L     _string_input
    00000130 <00000000>             .DATA.L     _strtod
    00000134 <00000000>             .DATA.L     __dtos
    00000138 <00000000>             .DATA.L     _atoi
    0000013C <00000000>             .DATA.L     _free
    00000140 <00000000>             .DATA.L     _ex
    00000144              L1168:                            
    00000144 7401                   ADD         #1,R4
    00000146              L1167:                            
    00000146 52EB                   MOV.L       @(44,R14),R2
    00000148 3423                   CMP/GE      R2,R4
    0000014A 8BFB                   BF          L1168
      simplexC.c   191        {
      simplexC.c   192            // free(ex.ajVector[i]);
      simplexC.c   193        }
      simplexC.c   194        // free(ex.ajVector);
      simplexC.c   195        free(ex.bVectorValues);
    0000014C DD8E                   MOV.L       L1470,R13  ; _free
    0000014E 4D0B                   JSR         @R13
    00000150 54E6                   MOV.L       @(24,R14),R4
      simplexC.c   196        free(ex.inputCvectorValues);
    00000152 4D0B                   JSR         @R13
    00000154 54E7                   MOV.L       @(28,R14),R4
      simplexC.c   197        free(ex.fases2CvectorValues);
    00000156 4D0B                   JSR         @R13
    00000158 54E8                   MOV.L       @(32,R14),R4
      simplexC.c   198        return 0;
    0000015A E000                   MOV         #0,R0
      simplexC.c   199    }
    0000015C 4F26                   LDS.L       @R15+,PR
    0000015E 6DF6                   MOV.L       @R15+,R13
    00000160 000B                   RTS




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000162 6EF6                   MOV.L       @R15+,R14
      simplexC.c   200    
      simplexC.c   201    float* calculateVectorMatrixrMul(int size, float **M, float *V)
    00000164              _calculateVectorMatrixrMul:      ; function: calculateVectorMatrixrMul
                                                           ; frame size=24
                                                           ; used runtime library name:
                                                           ; __adds, __muls
    00000164 2FE6                   MOV.L       R14,@-R15
    00000166 2FD6                   MOV.L       R13,@-R15
    00000168 2FC6                   MOV.L       R12,@-R15
    0000016A 6D43                   MOV         R4,R13
      simplexC.c   202    {
      simplexC.c   203        float *res;
      simplexC.c   204        int i,j;
      simplexC.c   205        res = calloc(size,sizeof(float));
    0000016C D387                   MOV.L       L1470+4,R3 ; _calloc
    0000016E 2FB6                   MOV.L       R11,@-R15
    00000170 2FA6                   MOV.L       R10,@-R15
    00000172 6B53                   MOV         R5,R11
    00000174 4F22                   STS.L       PR,@-R15
    00000176 6A63                   MOV         R6,R10
    00000178 430B                   JSR         @R3
    0000017A E504                   MOV         #4,R5
    0000017C 6C03                   MOV         R0,R12
      simplexC.c   206        for(i=0;i<size;i++)
    0000017E E500                   MOV         #0,R5
    00000180 A018                   BRA         L1170
    00000182 6753                   MOV         R5,R7
    00000184              L1171:                            
      simplexC.c   207        {
      simplexC.c   208            for(j=0;j<size;j++)
    00000184 6653                   MOV         R5,R6
    00000186 6453                   MOV         R5,R4
    00000188 6E73                   MOV         R7,R14
    0000018A 4D15                   CMP/PL      R13
    0000018C 8F11                   BF/S        L1172
    0000018E 4E08                   SHLL2       R14
    00000190              L1173:                            
      simplexC.c   209            {
      simplexC.c   210                res[i]+=V[j]*M[j][i];
    00000190 D27F                   MOV.L       L1470+8,R2 ; __muls
    00000192 63E3                   MOV         R14,R3
    00000194 33CC                   ADD         R12,R3
    00000196 6043                   MOV         R4,R0
    00000198 01BE                   MOV.L       @(R0,R11),R1
    0000019A 31EC                   ADD         R14,R1
    0000019C 00AE                   MOV.L       @(R0,R10),R0
    0000019E 420B                   JSR         @R2
    000001A0 6112                   MOV.L       @R1,R1
    000001A2 D27C                   MOV.L       L1470+12,R2; __adds
    000001A4 420B                   JSR         @R2
    000001A6 6132                   MOV.L       @R3,R1
    000001A8 2302                   MOV.L       R0,@R3
    000001AA 7601                   ADD         #1,R6
    000001AC 36D3                   CMP/GE      R13,R6
    000001AE 8FEF                   BF/S        L1173
    000001B0 7404                   ADD         #4,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001B2              L1172:                            
    000001B2 7701                   ADD         #1,R7
    000001B4              L1170:                            
    000001B4 37D3                   CMP/GE      R13,R7
    000001B6 8BE5                   BF          L1171
      simplexC.c   211            }
      simplexC.c   212        }
      simplexC.c   213        return res;
      simplexC.c   214    }
    000001B8 4F26                   LDS.L       @R15+,PR
    000001BA 60C3                   MOV         R12,R0
    000001BC 6AF6                   MOV.L       @R15+,R10
    000001BE 6BF6                   MOV.L       @R15+,R11
    000001C0 6CF6                   MOV.L       @R15+,R12
    000001C2 6DF6                   MOV.L       @R15+,R13
    000001C4 000B                   RTS
    000001C6 6EF6                   MOV.L       @R15+,R14
      simplexC.c   215    
      simplexC.c   216    float* calculateMatrixVectorMul(int size, float **M, float *V)
    000001C8              _calculateMatrixVectorMul:       ; function: calculateMatrixVectorMul
                                                           ; frame size=24
                                                           ; used runtime library name:
                                                           ; __adds, __muls
    000001C8 2FE6                   MOV.L       R14,@-R15
    000001CA 2FD6                   MOV.L       R13,@-R15
    000001CC 2FC6                   MOV.L       R12,@-R15
    000001CE 6D43                   MOV         R4,R13
      simplexC.c   217    {
      simplexC.c   218        float *res;
      simplexC.c   219        int i,j;
      simplexC.c   220        res = calloc(size,sizeof(float*));
    000001D0 D36E                   MOV.L       L1470+4,R3 ; _calloc
    000001D2 2FB6                   MOV.L       R11,@-R15
    000001D4 2FA6                   MOV.L       R10,@-R15
    000001D6 6B53                   MOV         R5,R11
    000001D8 4F22                   STS.L       PR,@-R15
    000001DA 6A63                   MOV         R6,R10
    000001DC 430B                   JSR         @R3
    000001DE E504                   MOV         #4,R5
    000001E0 6C03                   MOV         R0,R12
      simplexC.c   221        for(i=0;i<size;i++)
    000001E2 E500                   MOV         #0,R5
    000001E4 A019                   BRA         L1175
    000001E6 6753                   MOV         R5,R7
    000001E8              L1176:                            
      simplexC.c   222        {
      simplexC.c   223            for(j=0;j<size;j++)
    000001E8 6653                   MOV         R5,R6
    000001EA 6453                   MOV         R5,R4
    000001EC 6E73                   MOV         R7,R14
    000001EE 4D15                   CMP/PL      R13
    000001F0 8F12                   BF/S        L1177
    000001F2 4E08                   SHLL2       R14
    000001F4              L1178:                            
      simplexC.c   224            {
      simplexC.c   225                res[i]+=M[i][j]*V[j];
    000001F4 D266                   MOV.L       L1470+8,R2 ; __muls




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001F6 63E3                   MOV         R14,R3
    000001F8 33CC                   ADD         R12,R3
    000001FA 60E3                   MOV         R14,R0
    000001FC 01BE                   MOV.L       @(R0,R11),R1
    000001FE 60A3                   MOV         R10,R0
    00000200 004E                   MOV.L       @(R0,R4),R0
    00000202 314C                   ADD         R4,R1
    00000204 420B                   JSR         @R2
    00000206 6112                   MOV.L       @R1,R1
    00000208 D262                   MOV.L       L1470+12,R2; __adds
    0000020A 420B                   JSR         @R2
    0000020C 6132                   MOV.L       @R3,R1
    0000020E 7601                   ADD         #1,R6
    00000210 2302                   MOV.L       R0,@R3
    00000212 36D3                   CMP/GE      R13,R6
    00000214 8FEE                   BF/S        L1178
    00000216 7404                   ADD         #4,R4
    00000218              L1177:                            
    00000218 7701                   ADD         #1,R7
    0000021A              L1175:                            
    0000021A 37D3                   CMP/GE      R13,R7
    0000021C 8BE4                   BF          L1176
      simplexC.c   226            }
      simplexC.c   227        }
      simplexC.c   228        return res;
    0000021E 60C3                   MOV         R12,R0
      simplexC.c   229    }
    00000220 4F26                   LDS.L       @R15+,PR
    00000222 6AF6                   MOV.L       @R15+,R10
    00000224 6BF6                   MOV.L       @R15+,R11
    00000226 6CF6                   MOV.L       @R15+,R12
    00000228 6DF6                   MOV.L       @R15+,R13
    0000022A 000B                   RTS
    0000022C 6EF6                   MOV.L       @R15+,R14
      simplexC.c   230    
      simplexC.c   231    float calculateVectorDotProduct(int size, float* A, float *B)
    0000022E              _calculateVectorDotProduct:      ; function: calculateVectorDotProduct
                                                           ; frame size=12
                                                           ; used runtime library name:
                                                           ; __adds, __muls
      simplexC.c   232    {
      simplexC.c   233        float res;
      simplexC.c   234        int i;
      simplexC.c   235        res=0;
      simplexC.c   236        for(i=0;i<size;i++)
    0000022E 4415                   CMP/PL      R4
    00000230 2FE6                   MOV.L       R14,@-R15
    00000232 2FD6                   MOV.L       R13,@-R15
    00000234 4F22                   STS.L       PR,@-R15
    00000236 ED00                   MOV         #0,R13
    00000238 6ED3                   MOV         R13,R14
    0000023A 8F0D                   BF/S        L1180
    0000023C 67D3                   MOV         R13,R7
    0000023E              L1181:                            
      simplexC.c   237        {
      simplexC.c   238            res+=A[i]*B[i];
    0000023E 6073                   MOV         R7,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000240 D353                   MOV.L       L1470+8,R3 ; __muls
    00000242 015E                   MOV.L       @(R0,R5),R1
    00000244 430B                   JSR         @R3
    00000246 006E                   MOV.L       @(R0,R6),R0
    00000248 D352                   MOV.L       L1470+12,R3; __adds
    0000024A 430B                   JSR         @R3
    0000024C 61D3                   MOV         R13,R1
    0000024E 6D03                   MOV         R0,R13
    00000250 7E01                   ADD         #1,R14
    00000252 3E43                   CMP/GE      R4,R14
    00000254 8FF3                   BF/S        L1181
    00000256 7704                   ADD         #4,R7
    00000258              L1180:                            
      simplexC.c   239        }
      simplexC.c   240        return res;
      simplexC.c   241    }
    00000258 4F26                   LDS.L       @R15+,PR
    0000025A 60D3                   MOV         R13,R0
    0000025C 6DF6                   MOV.L       @R15+,R13
    0000025E 000B                   RTS
    00000260 6EF6                   MOV.L       @R15+,R14
      simplexC.c   242    
      simplexC.c   243    float* getCurrentCvectorValues(struct iteration *it)
    00000262              _getCurrentCvectorValues:        ; function: getCurrentCvectorValues
                                                           ; frame size=8
      simplexC.c   244    {
      simplexC.c   245        float* res;
      simplexC.c   246        res = calloc(ex.nVariables,sizeof(float));
    00000262 E504                   MOV         #4,R5
    00000264 D349                   MOV.L       L1470+4,R3 ; _calloc
    00000266 2FE6                   MOV.L       R14,@-R15
    00000268 4F22                   STS.L       PR,@-R15
    0000026A DE4B                   MOV.L       L1470+16,R14; _ex
    0000026C 430B                   JSR         @R3
    0000026E 54EB                   MOV.L       @(44,R14),R4
      simplexC.c   247        if(ex.mode==MODE_FULL_EXECUTION && ex.canonicalStatement->is2fasesNeeded && ex.canonicalStatement->is2
                         +fasesActive)
    00000270 62E2                   MOV.L       @R14,R2
    00000272 2228                   TST         R2,R2
    00000274 8B09                   BF          L1183
    00000276 53E2                   MOV.L       @(8,R14),R3
    00000278 5232                   MOV.L       @(8,R3),R2
    0000027A 2228                   TST         R2,R2
    0000027C 8905                   BT          L1183
    0000027E 52E2                   MOV.L       @(8,R14),R2
    00000280 5323                   MOV.L       @(12,R2),R3
    00000282 2338                   TST         R3,R3
    00000284 8901                   BT          L1183
      simplexC.c   248        {
      simplexC.c   249            res= ex.fases2CvectorValues;
    00000286 A001                   BRA         L1184
    00000288 54E8                   MOV.L       @(32,R14),R4
    0000028A              L1183:                            
      simplexC.c   250        }else
      simplexC.c   251        {
      simplexC.c   252            res=ex.inputCvectorValues;
    0000028A 54E7                   MOV.L       @(28,R14),R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000028C              L1184:                            
      simplexC.c   253        }
      simplexC.c   254        return res;
      simplexC.c   255    }
    0000028C 4F26                   LDS.L       @R15+,PR
    0000028E 6043                   MOV         R4,R0
    00000290 000B                   RTS
    00000292 6EF6                   MOV.L       @R15+,R14
      simplexC.c   256    
      simplexC.c   257    float* getCurrentCt(struct iteration *it)
    00000294              _getCurrentCt:                   ; function: getCurrentCt
                                                           ; frame size=8
    00000294 2FD6                   MOV.L       R13,@-R15
      simplexC.c   258    {
      simplexC.c   259        float* res;
      simplexC.c   260        int i;
      simplexC.c   261        res = calloc(it->BinvSize,sizeof(float));
    00000296 E504                   MOV         #4,R5
    00000298 D33C                   MOV.L       L1470+4,R3 ; _calloc
    0000029A 6D43                   MOV         R4,R13
    0000029C 4F22                   STS.L       PR,@-R15
    0000029E 430B                   JSR         @R3
    000002A0 54D9                   MOV.L       @(36,R13),R4
    000002A2 6603                   MOV         R0,R6
      simplexC.c   262        
      simplexC.c   263        for(i=0;i<it->BinvSize;i++)
    000002A4 D43C                   MOV.L       L1470+16,R4; _ex
    000002A6 A020                   BRA         L1186
    000002A8 E500                   MOV         #0,R5
    000002AA              L1187:                            
    000002AA 6153                   MOV         R5,R1
    000002AC 6342                   MOV.L       @R4,R3
    000002AE 2338                   TST         R3,R3
    000002B0 8F12                   BF/S        L1188
    000002B2 4108                   SHLL2       R1
    000002B4 5342                   MOV.L       @(8,R4),R3
    000002B6 5232                   MOV.L       @(8,R3),R2
    000002B8 2228                   TST         R2,R2
    000002BA 890D                   BT          L1188
    000002BC 5242                   MOV.L       @(8,R4),R2
    000002BE 5323                   MOV.L       @(12,R2),R3
    000002C0 2338                   TST         R3,R3
    000002C2 8909                   BT          L1188
      simplexC.c   264        {
      simplexC.c   265            if(ex.mode==MODE_FULL_EXECUTION && ex.canonicalStatement->is2fasesNeeded && ex.canonicalStatement-
                         +>is2fasesActive)
      simplexC.c   266            {
      simplexC.c   267                res[i]= ex.fases2CvectorValues[it->idByRowOfBasicVarsInBInv[i]];
    000002C4 50D3                   MOV.L       @(12,R13),R0
    000002C6 6313                   MOV         R1,R3
    000002C8 021E                   MOV.L       @(R0,R1),R2
    000002CA 336C                   ADD         R6,R3
    000002CC 5048                   MOV.L       @(32,R4),R0
    000002CE 4208                   SHLL2       R2
    000002D0 022E                   MOV.L       @(R0,R2),R2
    000002D2 2322                   MOV.L       R2,@R3
    000002D4 A008                   BRA         L1189




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002D6 0009                   NOP
    000002D8              L1188:                            
      simplexC.c   268            }else
      simplexC.c   269            {
      simplexC.c   270                res[i]=ex.inputCvectorValues[it->idByRowOfBasicVarsInBInv[i]];
    000002D8 50D3                   MOV.L       @(12,R13),R0
    000002DA 6313                   MOV         R1,R3
    000002DC 021E                   MOV.L       @(R0,R1),R2
    000002DE 336C                   ADD         R6,R3
    000002E0 5047                   MOV.L       @(28,R4),R0
    000002E2 4208                   SHLL2       R2
    000002E4 022E                   MOV.L       @(R0,R2),R2
    000002E6 2322                   MOV.L       R2,@R3
    000002E8              L1189:                            
    000002E8 7501                   ADD         #1,R5
    000002EA              L1186:                            
    000002EA 53D9                   MOV.L       @(36,R13),R3
    000002EC 3533                   CMP/GE      R3,R5
    000002EE 8BDC                   BF          L1187
      simplexC.c   271            }
      simplexC.c   272        }
      simplexC.c   273        
      simplexC.c   274        return res;
      simplexC.c   275    }
    000002F0 4F26                   LDS.L       @R15+,PR
    000002F2 6063                   MOV         R6,R0
    000002F4 000B                   RTS
    000002F6 6DF6                   MOV.L       @R15+,R13
      simplexC.c   276    
      simplexC.c   277    float** calculateNewBinv(struct iteration *oldIt)
    000002F8              _calculateNewBinv:               ; function: calculateNewBinv
                                                           ; frame size=36
                                                           ; used runtime library name:
                                                           ; __subs, __muls, __divs
    000002F8 2FE6                   MOV.L       R14,@-R15
      simplexC.c   278    {
      simplexC.c   279        float **res;
      simplexC.c   280        int i,j,indexPivot;
      simplexC.c   281        indexPivot=-1;
      simplexC.c   282        res=calloc(oldIt->BinvSize,sizeof(float*));
    000002FA E504                   MOV         #4,R5
    000002FC 2FD6                   MOV.L       R13,@-R15
    000002FE 6E43                   MOV         R4,R14
    00000300 2FC6                   MOV.L       R12,@-R15
    00000302 2FB6                   MOV.L       R11,@-R15
    00000304 2FA6                   MOV.L       R10,@-R15
    00000306 EBFF                   MOV         #-1,R11
    00000308 2F96                   MOV.L       R9,@-R15
    0000030A 2F86                   MOV.L       R8,@-R15
    0000030C 4F22                   STS.L       PR,@-R15
    0000030E D81F                   MOV.L       L1470+4,R8 ; _calloc
    00000310 480B                   JSR         @R8
    00000312 54E9                   MOV.L       @(36,R14),R4
    00000314 6C03                   MOV         R0,R12
      simplexC.c   283        for(i=0;i<oldIt->BinvSize;i++)
    00000316 EA00                   MOV         #0,R10
    00000318 A011                   BRA         L1191




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000031A 6DA3                   MOV         R10,R13
    0000031C              L1192:                            
      simplexC.c   284        {
      simplexC.c   285            res[i]=calloc(oldIt->BinvSize,sizeof(float));
    0000031C 69D3                   MOV         R13,R9
    0000031E 4908                   SHLL2       R9
    00000320 6393                   MOV         R9,R3
    00000322 33CC                   ADD         R12,R3
    00000324 2F36                   MOV.L       R3,@-R15
    00000326 E504                   MOV         #4,R5
    00000328 480B                   JSR         @R8
    0000032A 54E9                   MOV.L       @(36,R14),R4
    0000032C 63F6                   MOV.L       @R15+,R3
    0000032E 2302                   MOV.L       R0,@R3
      simplexC.c   286            if(oldIt->idVarOut==oldIt->idByRowOfBasicVarsInBInv[i])
    00000330 50E3                   MOV.L       @(12,R14),R0
    00000332 029E                   MOV.L       @(R0,R9),R2
    00000334 53E6                   MOV.L       @(24,R14),R3
    00000336 3320                   CMP/EQ      R2,R3
    00000338 8B00                   BF          L1193
      simplexC.c   287            {
      simplexC.c   288                indexPivot=i;
    0000033A 6BD3                   MOV         R13,R11
    0000033C              L1193:                            
    0000033C 7D01                   ADD         #1,R13
    0000033E              L1191:                            
    0000033E 53E9                   MOV.L       @(36,R14),R3
    00000340 3D33                   CMP/GE      R3,R13
    00000342 8BEB                   BF          L1192
      simplexC.c   289            }
      simplexC.c   290        }
      simplexC.c   291        //Calculo de la fila pivote
      simplexC.c   292        for(i=0;i<oldIt->BinvSize;i++)
    00000344 64A3                   MOV         R10,R4
    00000346 6DB3                   MOV         R11,R13
    00000348 A013                   BRA         L1194
    0000034A 4D08                   SHLL2       R13
    0000034C              L1195:                            
      simplexC.c   293        {
      simplexC.c   294            res[indexPivot][i]=oldIt->Binv[indexPivot][i]/oldIt->yj[oldIt->idVarIn][indexPivot];
    0000034C 52E5                   MOV.L       @(20,R14),R2
    0000034E 60D3                   MOV         R13,R0
    00000350 03CE                   MOV.L       @(R0,R12),R3
    00000352 6543                   MOV         R4,R5
    00000354 50E8                   MOV.L       @(32,R14),R0
    00000356 4208                   SHLL2       R2
    00000358 01DE                   MOV.L       @(R0,R13),R1
    0000035A 4508                   SHLL2       R5
    0000035C 50EF                   MOV.L       @(60,R14),R0
    0000035E 335C                   ADD         R5,R3
    00000360 022E                   MOV.L       @(R0,R2),R2
    00000362 315C                   ADD         R5,R1
    00000364 32DC                   ADD         R13,R2
    00000366 6022                   MOV.L       @R2,R0
    00000368 D20C                   MOV.L       L1470+20,R2; __divs
    0000036A 420B                   JSR         @R2
    0000036C 6112                   MOV.L       @R1,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000036E 7401                   ADD         #1,R4
    00000370 2302                   MOV.L       R0,@R3
    00000372              L1194:                            
    00000372 53E9                   MOV.L       @(36,R14),R3
    00000374 3433                   CMP/GE      R3,R4
    00000376 8BE9                   BF          L1195
      simplexC.c   295        }
      simplexC.c   296    
      simplexC.c   297        //Calculo del resto de filas
      simplexC.c   298        for(i=0;i<oldIt->BinvSize;i++)
    00000378 64A3                   MOV         R10,R4
    0000037A 67D3                   MOV         R13,R7
    0000037C A031                   BRA         L1196
    0000037E 37CC                   ADD         R12,R7
    00000380              L1197:                            
      simplexC.c   299        {
      simplexC.c   300            for(j=0;j<oldIt->BinvSize && i!=indexPivot;j++)
    00000380 65A3                   MOV         R10,R5
    00000382 6D43                   MOV         R4,R13
    00000384 A027                   BRA         L1198
    00000386 4D08                   SHLL2       R13
    00000388              L1470:                            
    00000388 <00000000>             .DATA.L     _free
    0000038C <00000000>             .DATA.L     _calloc
    00000390 <00000000>             .DATA.L     __muls
    00000394 <00000000>             .DATA.L     __adds
    00000398 <00000000>             .DATA.L     _ex
    0000039C <00000000>             .DATA.L     __divs
    000003A0              L1199:                            
      simplexC.c   301            {
      simplexC.c   302                res[i][j]=oldIt->Binv[i][j]-(oldIt->yj[oldIt->idVarIn][i]*res[indexPivot][j]);
    000003A0 D28E                   MOV.L       L1471,R2   ; __muls
    000003A2 60D3                   MOV         R13,R0
    000003A4 03CE                   MOV.L       @(R0,R12),R3
    000003A6 6653                   MOV         R5,R6
    000003A8 4608                   SHLL2       R6
    000003AA 336C                   ADD         R6,R3
    000003AC 2F36                   MOV.L       R3,@-R15
    000003AE 50E8                   MOV.L       @(32,R14),R0
    000003B0 01DE                   MOV.L       @(R0,R13),R1
    000003B2 316C                   ADD         R6,R1
    000003B4 6312                   MOV.L       @R1,R3
    000003B6 51E5                   MOV.L       @(20,R14),R1
    000003B8 50EF                   MOV.L       @(60,R14),R0
    000003BA 4108                   SHLL2       R1
    000003BC 011E                   MOV.L       @(R0,R1),R1
    000003BE 31DC                   ADD         R13,R1
    000003C0 6072                   MOV.L       @R7,R0
    000003C2 006E                   MOV.L       @(R0,R6),R0
    000003C4 420B                   JSR         @R2
    000003C6 6112                   MOV.L       @R1,R1
    000003C8 6133                   MOV         R3,R1
    000003CA D385                   MOV.L       L1471+4,R3 ; __subs
    000003CC 430B                   JSR         @R3
    000003CE 0009                   NOP
    000003D0 63F6                   MOV.L       @R15+,R3
    000003D2 7501                   ADD         #1,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000003D4 2302                   MOV.L       R0,@R3
    000003D6              L1198:                            
    000003D6 52E9                   MOV.L       @(36,R14),R2
    000003D8 3523                   CMP/GE      R2,R5
    000003DA 8901                   BT          L1200
    000003DC 34B0                   CMP/EQ      R11,R4
    000003DE 8BDF                   BF          L1199
    000003E0              L1200:                            
    000003E0 7401                   ADD         #1,R4
    000003E2              L1196:                            
    000003E2 53E9                   MOV.L       @(36,R14),R3
    000003E4 3433                   CMP/GE      R3,R4
    000003E6 8BCB                   BF          L1197
      simplexC.c   303            }
      simplexC.c   304        }
      simplexC.c   305        return res;
      simplexC.c   306    }
    000003E8 4F26                   LDS.L       @R15+,PR
    000003EA 60C3                   MOV         R12,R0
    000003EC 68F6                   MOV.L       @R15+,R8
    000003EE 69F6                   MOV.L       @R15+,R9
    000003F0 6AF6                   MOV.L       @R15+,R10
    000003F2 6BF6                   MOV.L       @R15+,R11
    000003F4 6CF6                   MOV.L       @R15+,R12
    000003F6 6DF6                   MOV.L       @R15+,R13
    000003F8 000B                   RTS
    000003FA 6EF6                   MOV.L       @R15+,R14
      simplexC.c   307    
      simplexC.c   308    struct iteration* createNewIteration(struct iteration *oldIt)
    000003FC              _createNewIteration:             ; function: createNewIteration
                                                           ; frame size=16
    000003FC 2FE6                   MOV.L       R14,@-R15
    000003FE 6E43                   MOV         R4,R14
      simplexC.c   309    {
      simplexC.c   310        struct iteration *newIt;
      simplexC.c   311        int i;
      simplexC.c   312        newIt = malloc(sizeof(struct iteration));
    00000400 D378                   MOV.L       L1471+8,R3 ; _malloc
    00000402 2FD6                   MOV.L       R13,@-R15
    00000404 2FC6                   MOV.L       R12,@-R15
    00000406 4F22                   STS.L       PR,@-R15
    00000408 430B                   JSR         @R3
    0000040A E448                   MOV         #72,R4
      simplexC.c   313        newIt->numIteration=oldIt->numIteration+1;
    0000040C 62E2                   MOV.L       @R14,R2
    0000040E 6D03                   MOV         R0,R13
    00000410 7201                   ADD         #1,R2
    00000412 2D22                   MOV.L       R2,@R13
      simplexC.c   314        newIt->BinvSize=oldIt->BinvSize;
    00000414 53E9                   MOV.L       @(36,R14),R3
    00000416 1D39                   MOV.L       R3,@(36,R13)
      simplexC.c   315        newIt->Binv=calculateNewBinv(oldIt);
    00000418 BF6E                   BSR         _calculateNewBinv
    0000041A 64E3                   MOV         R14,R4
    0000041C 1D08                   MOV.L       R0,@(32,R13)
      simplexC.c   316        newIt->idBasicVariables=calloc(ex.nVariables,sizeof(int));
    0000041E E504                   MOV         #4,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000420 D372                   MOV.L       L1471+16,R3; _calloc
    00000422 DC71                   MOV.L       L1471+12,R12; _ex
    00000424 430B                   JSR         @R3
    00000426 54CB                   MOV.L       @(44,R12),R4
    00000428 1D02                   MOV.L       R0,@(8,R13)
      simplexC.c   317        newIt->idByRowOfBasicVarsInBInv=calloc(newIt->BinvSize,sizeof(int));
    0000042A E504                   MOV         #4,R5
    0000042C D26F                   MOV.L       L1471+16,R2; _calloc
    0000042E 420B                   JSR         @R2
    00000430 54D9                   MOV.L       @(36,R13),R4
      simplexC.c   318        for(i=0;i<ex.nVariables;i++)
    00000432 E600                   MOV         #0,R6
    00000434 1D03                   MOV.L       R0,@(12,R13)
    00000436 A008                   BRA         L1202
    00000438 6463                   MOV         R6,R4
    0000043A              L1203:                            
      simplexC.c   319        {
      simplexC.c   320            newIt->idBasicVariables[i]=oldIt->idBasicVariables[i];
    0000043A 6543                   MOV         R4,R5
    0000043C 53D2                   MOV.L       @(8,R13),R3
    0000043E 4508                   SHLL2       R5
    00000440 50E2                   MOV.L       @(8,R14),R0
    00000442 7401                   ADD         #1,R4
    00000444 025E                   MOV.L       @(R0,R5),R2
    00000446 335C                   ADD         R5,R3
    00000448 2322                   MOV.L       R2,@R3
    0000044A              L1202:                            
    0000044A 52CB                   MOV.L       @(44,R12),R2
    0000044C 3423                   CMP/GE      R2,R4
    0000044E 8BF4                   BF          L1203
      simplexC.c   321        }
      simplexC.c   322        for(i=0;i<oldIt->BinvSize;i++)
    00000450 A011                   BRA         L1204
    00000452 6463                   MOV         R6,R4
    00000454              L1205:                            
    00000454 50E3                   MOV.L       @(12,R14),R0
    00000456 6C43                   MOV         R4,R12
    00000458 52E6                   MOV.L       @(24,R14),R2
    0000045A 4C08                   SHLL2       R12
    0000045C 03CE                   MOV.L       @(R0,R12),R3
    0000045E 3320                   CMP/EQ      R2,R3
    00000460 8D06                   BT/S        L1206
    00000462 7401                   ADD         #1,R4
      simplexC.c   323        {
      simplexC.c   324            if(oldIt->idByRowOfBasicVarsInBInv[i]!=oldIt->idVarOut)
      simplexC.c   325            {
      simplexC.c   326                newIt->idByRowOfBasicVarsInBInv[i]=oldIt->idByRowOfBasicVarsInBInv[i];
    00000464 53D3                   MOV.L       @(12,R13),R3
    00000466 33CC                   ADD         R12,R3
    00000468 50E3                   MOV.L       @(12,R14),R0
    0000046A 02CE                   MOV.L       @(R0,R12),R2
    0000046C A003                   BRA         L1207
    0000046E 2322                   MOV.L       R2,@R3
    00000470              L1206:                            
      simplexC.c   327            }else
      simplexC.c   328            {
      simplexC.c   329                newIt->idByRowOfBasicVarsInBInv[i]=oldIt->idVarIn;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000470 50D3                   MOV.L       @(12,R13),R0
    00000472 53E5                   MOV.L       @(20,R14),R3
    00000474 0C36                   MOV.L       R3,@(R0,R12)
    00000476              L1207:                            
    00000476              L1204:                            
    00000476 52E9                   MOV.L       @(36,R14),R2
    00000478 3423                   CMP/GE      R2,R4
    0000047A 8BEB                   BF          L1205
      simplexC.c   330            }
      simplexC.c   331        }
      simplexC.c   332        newIt->idBasicVariables[oldIt->idVarOut]=0;
    0000047C 51E6                   MOV.L       @(24,R14),R1
      simplexC.c   333        newIt->idBasicVariables[oldIt->idVarIn]=1;
    0000047E E201                   MOV         #1,R2
    00000480 50D2                   MOV.L       @(8,R13),R0
    00000482 4108                   SHLL2       R1
    00000484 0166                   MOV.L       R6,@(R0,R1)
    00000486 53E5                   MOV.L       @(20,R14),R3
    00000488 50D2                   MOV.L       @(8,R13),R0
    0000048A 4308                   SHLL2       R3
    0000048C 0326                   MOV.L       R2,@(R0,R3)
      simplexC.c   334        return newIt;
    0000048E 60D3                   MOV         R13,R0
      simplexC.c   335    }
    00000490 4F26                   LDS.L       @R15+,PR
    00000492 6CF6                   MOV.L       @R15+,R12
    00000494 6DF6                   MOV.L       @R15+,R13
    00000496 000B                   RTS
    00000498 6EF6                   MOV.L       @R15+,R14
      simplexC.c   336    
      simplexC.c   337    int calculateIteration(struct iteration *it)
    0000049A              _calculateIteration:             ; function: calculateIteration
                                                           ; frame size=40
                                                           ; used runtime library name:
                                                           ; __subs, __divs, __eqs, __gts, __lts
    0000049A 2FE6                   MOV.L       R14,@-R15
    0000049C 2FD6                   MOV.L       R13,@-R15
    0000049E 6E43                   MOV         R4,R14
    000004A0 2FC6                   MOV.L       R12,@-R15
    000004A2 2FB6                   MOV.L       R11,@-R15
    000004A4 2FA6                   MOV.L       R10,@-R15
    000004A6 EA00                   MOV         #0,R10
    000004A8 DD4F                   MOV.L       L1471+12,R13; _ex
    000004AA 2F96                   MOV.L       R9,@-R15
    000004AC 2F86                   MOV.L       R8,@-R15
    000004AE 4F22                   STS.L       PR,@-R15
    000004B0 D94E                   MOV.L       L1471+16,R9; _calloc
    000004B2 7FFC                   ADD         #-4,R15
      simplexC.c   338    {
      simplexC.c   339        int i;
      simplexC.c   340        float * cVectorValues,*ct;
      simplexC.c   341        float bestEntryVarValue,bestExitVarValue;
      simplexC.c   342        it->is2FasesActive=ex.canonicalStatement->is2fasesActive;
    000004B4 53D2                   MOV.L       @(8,R13),R3
    000004B6 5233                   MOV.L       @(12,R3),R2
    000004B8 1E21                   MOV.L       R2,@(4,R14)
      simplexC.c   343        cVectorValues=getCurrentCvectorValues(it);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000004BA BED2                   BSR         _getCurrentCvectorValues
    000004BC 64E3                   MOV         R14,R4
    000004BE 2F02                   MOV.L       R0,@R15
      simplexC.c   344        ct=getCurrentCt(it);
    000004C0 BEE8                   BSR         _getCurrentCt
    000004C2 64E3                   MOV         R14,R4
      simplexC.c   345        it->ct=ct;
    000004C4 1E0A                   MOV.L       R0,@(40,R14)
    000004C6 6C03                   MOV         R0,R12
      simplexC.c   346        it->xb=calculateMatrixVectorMul(it->BinvSize,it->Binv,ex.bVectorValues);
    000004C8 56D6                   MOV.L       @(24,R13),R6
    000004CA 55E8                   MOV.L       @(32,R14),R5
    000004CC BE7C                   BSR         _calculateMatrixVectorMul
    000004CE 54E9                   MOV.L       @(36,R14),R4
    000004D0 1E0B                   MOV.L       R0,@(44,R14)
      simplexC.c   347        it->ctBinv=calculateVectorMatrixrMul(it->BinvSize,it->Binv,ct);
    000004D2 66C3                   MOV         R12,R6
    000004D4 55E8                   MOV.L       @(32,R14),R5
    000004D6 BE45                   BSR         _calculateVectorMatrixrMul
    000004D8 54E9                   MOV.L       @(36,R14),R4
      simplexC.c   348        it->zSol=calculateVectorDotProduct(it->BinvSize,ct,it->xb);
    000004DA 65C3                   MOV         R12,R5
    000004DC 1E0C                   MOV.L       R0,@(48,R14)
    000004DE 56EB                   MOV.L       @(44,R14),R6
    000004E0 BEA5                   BSR         _calculateVectorDotProduct
    000004E2 54E9                   MOV.L       @(36,R14),R4
    000004E4 E144                   MOV         #68,R1
    000004E6 31EC                   ADD         R14,R1
    000004E8 2102                   MOV.L       R0,@R1
      simplexC.c   349        //Calculate values for zj and cj-zj and idVarIn
      simplexC.c   350        it->zj=calloc(ex.nVariables,sizeof(float));
    000004EA E504                   MOV         #4,R5
    000004EC 490B                   JSR         @R9
    000004EE 54DB                   MOV.L       @(44,R13),R4
    000004F0 1E0D                   MOV.L       R0,@(52,R14)
      simplexC.c   351        it->cjMinusZj=calloc(ex.nVariables,sizeof(float));
    000004F2 E504                   MOV         #4,R5
    000004F4 490B                   JSR         @R9
    000004F6 54DB                   MOV.L       @(44,R13),R4
    000004F8 1E0E                   MOV.L       R0,@(56,R14)
      simplexC.c   352        it->idVarIn=-1;
    000004FA E3FF                   MOV         #-1,R3
    000004FC 1E35                   MOV.L       R3,@(20,R14)
      simplexC.c   353        if(ex.currentFuncObjectivePurpose==FUNC_MAXIMIZE)
    000004FE 50DA                   MOV.L       @(40,R13),R0
    00000500 8801                   CMP/EQ      #1,R0
    00000502 8F03                   BF/S        L1209
      simplexC.c   354        {
      simplexC.c   355            bestEntryVarValue=INT_MIN;
      simplexC.c   356        }else
      simplexC.c   357        {
      simplexC.c   358            bestEntryVarValue=INT_MAX;
      simplexC.c   359        }
      simplexC.c   360        
      simplexC.c   361        
      simplexC.c   362        for(i=0;i<ex.nVariables;i++)
    00000504 6CA3                   MOV         R10,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000506 D83A                   MOV.L       L1471+20,R8; H'CF000000
    00000508 A001                   BRA         L1210
    0000050A 0009                   NOP
    0000050C              L1209:                            
    0000050C D839                   MOV.L       L1471+24,R8; H'4F000000
    0000050E              L1210:                            
    0000050E A05C                   BRA         L1211
    00000510 0009                   NOP
    00000512              L1212:                            
      simplexC.c   363        {
      simplexC.c   364            if((!it->idBasicVariables[i] && ex.canonicalStatement->is2fasesActive) ||
      simplexC.c   365                (!it->idBasicVariables[i] && !ex.canonicalStatement->is2fasesActive && !ex.canonicalStatement-
                         +>id2fasesVariables[i]) )
    00000512 64C3                   MOV         R12,R4
    00000514 50E2                   MOV.L       @(8,R14),R0
    00000516 4408                   SHLL2       R4
    00000518 034E                   MOV.L       @(R0,R4),R3
    0000051A 2338                   TST         R3,R3
    0000051C 8B54                   BF          L1213
    0000051E D236                   MOV.L       L1471+28,R2; H'00000008+_ex
    00000520 6122                   MOV.L       @R2,R1
    00000522 5313                   MOV.L       @(12,R1),R3
    00000524 2338                   TST         R3,R3
    00000526 8B0E                   BF          L1214
    00000528 50E2                   MOV.L       @(8,R14),R0
    0000052A 034E                   MOV.L       @(R0,R4),R3
    0000052C 2338                   TST         R3,R3
    0000052E 8B4B                   BF          L1213
    00000530 D231                   MOV.L       L1471+28,R2; H'00000008+_ex
    00000532 6122                   MOV.L       @R2,R1
    00000534 5313                   MOV.L       @(12,R1),R3
    00000536 2338                   TST         R3,R3
    00000538 8B46                   BF          L1213
    0000053A D32F                   MOV.L       L1471+28,R3; H'00000008+_ex
    0000053C 6032                   MOV.L       @R3,R0
    0000053E 500E                   MOV.L       @(56,R0),R0
    00000540 014E                   MOV.L       @(R0,R4),R1
    00000542 2118                   TST         R1,R1
    00000544 8B40                   BF          L1213
    00000546              L1214:                            
      simplexC.c   366            {
      simplexC.c   367                it->zj[i]=calculateVectorDotProduct(it->BinvSize,it->ctBinv,ex.ajVector[i]);
    00000546 6BC3                   MOV         R12,R11
    00000548 50ED                   MOV.L       @(52,R14),R0
    0000054A 4B08                   SHLL2       R11
    0000054C 30BC                   ADD         R11,R0
    0000054E 2F06                   MOV.L       R0,@-R15
    00000550 50DD                   MOV.L       @(52,R13),R0
    00000552 06BE                   MOV.L       @(R0,R11),R6
    00000554 55EC                   MOV.L       @(48,R14),R5
    00000556 BE6A                   BSR         _calculateVectorDotProduct
    00000558 54E9                   MOV.L       @(36,R14),R4
    0000055A 62F6                   MOV.L       @R15+,R2
      simplexC.c   368                it->cjMinusZj[i]=cVectorValues[i]-it->zj[i];
    0000055C D320                   MOV.L       L1471+4,R3 ; __subs
    0000055E 2202                   MOV.L       R0,@R2
    00000560 50EE                   MOV.L       @(56,R14),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000562 6203                   MOV         R0,R2
    00000564 60F2                   MOV.L       @R15,R0
    00000566 32BC                   ADD         R11,R2
    00000568 01BE                   MOV.L       @(R0,R11),R1
    0000056A 50ED                   MOV.L       @(52,R14),R0
    0000056C 430B                   JSR         @R3
    0000056E 00BE                   MOV.L       @(R0,R11),R0
    00000570 2202                   MOV.L       R0,@R2
      simplexC.c   369    
      simplexC.c   370                if(ex.currentFuncObjectivePurpose==FUNC_MINIMIZE && it->cjMinusZj[i]<0 && it->cjMinusZj[i]<bes
                         +tEntryVarValue )
    00000572 53DA                   MOV.L       @(40,R13),R3
    00000574 2338                   TST         R3,R3
    00000576 8B0D                   BF          L1216
    00000578 50EE                   MOV.L       @(56,R14),R0
    0000057A 01BE                   MOV.L       @(R0,R11),R1
    0000057C D31F                   MOV.L       L1471+32,R3; __lts
    0000057E 430B                   JSR         @R3
    00000580 E000                   MOV         #0,R0
    00000582 8800                   CMP/EQ      #0,R0
    00000584 8906                   BT          L1216
    00000586 50EE                   MOV.L       @(56,R14),R0
    00000588 D31C                   MOV.L       L1471+32,R3; __lts
    0000058A 01BE                   MOV.L       @(R0,R11),R1
    0000058C 430B                   JSR         @R3
    0000058E 6083                   MOV         R8,R0
    00000590 8800                   CMP/EQ      #0,R0
    00000592 8B14                   BF          L1023
    00000594              L1216:                            
      simplexC.c   371                {
      simplexC.c   372                    bestEntryVarValue=it->cjMinusZj[i];
      simplexC.c   373                    it->idVarIn=i;
      simplexC.c   374                }else if(ex.currentFuncObjectivePurpose==FUNC_MAXIMIZE && it->cjMinusZj[i]>0 && it->cjMinusZj[
                         +i]>bestEntryVarValue )
    00000594 50DA                   MOV.L       @(40,R13),R0
    00000596 8801                   CMP/EQ      #1,R0
    00000598 8B16                   BF          L1213
    0000059A 61C3                   MOV         R12,R1
    0000059C 50EE                   MOV.L       @(56,R14),R0
    0000059E 4108                   SHLL2       R1
    000005A0 D317                   MOV.L       L1471+36,R3; __gts
    000005A2 011E                   MOV.L       @(R0,R1),R1
    000005A4 430B                   JSR         @R3
    000005A6 E000                   MOV         #0,R0
    000005A8 8800                   CMP/EQ      #0,R0
    000005AA 890D                   BT          L1213
    000005AC 50EE                   MOV.L       @(56,R14),R0
    000005AE 61C3                   MOV         R12,R1
    000005B0 D313                   MOV.L       L1471+36,R3; __gts
    000005B2 4108                   SHLL2       R1
    000005B4 011E                   MOV.L       @(R0,R1),R1
    000005B6 430B                   JSR         @R3
    000005B8 6083                   MOV         R8,R0
    000005BA 8800                   CMP/EQ      #0,R0
    000005BC 8904                   BT          L1213
    000005BE              L1023:
      simplexC.c   375                {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   376                    bestEntryVarValue=it->cjMinusZj[i];
    000005BE 68C3                   MOV         R12,R8
    000005C0 50EE                   MOV.L       @(56,R14),R0
    000005C2 4808                   SHLL2       R8
    000005C4 088E                   MOV.L       @(R0,R8),R8
      simplexC.c   377                    it->idVarIn=i;
    000005C6 1EC5                   MOV.L       R12,@(20,R14)
    000005C8              L1213:                            
    000005C8 7C01                   ADD         #1,R12
    000005CA              L1211:                            
    000005CA 5BDB                   MOV.L       @(44,R13),R11
    000005CC 3CB3                   CMP/GE      R11,R12
    000005CE 8BA0                   BF          L1212
      simplexC.c   378                }
      simplexC.c   379            }
      simplexC.c   380        }
      simplexC.c   381        it->yj=calloc(ex.nVariables,sizeof(float*));
    000005D0 E504                   MOV         #4,R5
    000005D2 490B                   JSR         @R9
    000005D4 64B3                   MOV         R11,R4
    000005D6 1E0F                   MOV.L       R0,@(60,R14)
      simplexC.c   382        for(i=0;i<ex.nVariables;i++)
    000005D8 A021                   BRA         L1219
    000005DA 6CA3                   MOV         R10,R12
    000005DC              L1471:                            
    000005DC <00000000>             .DATA.L     __muls
    000005E0 <00000000>             .DATA.L     __subs
    000005E4 <00000000>             .DATA.L     _malloc
    000005E8 <00000000>             .DATA.L     _ex
    000005EC <00000000>             .DATA.L     _calloc
    000005F0 CF000000               .DATA.L     H'CF000000
    000005F4 4F000000               .DATA.L     H'4F000000
    000005F8 <00000008>             .DATA.L     H'00000008+_ex
    000005FC <00000000>             .DATA.L     __lts
    00000600 <00000000>             .DATA.L     __gts
    00000604              L1220:                            
      simplexC.c   383        {
      simplexC.c   384            it->yj[i]=calculateMatrixVectorMul(it->BinvSize,it->Binv,ex.ajVector[i]);
    00000604 50EF                   MOV.L       @(60,R14),R0
    00000606 6BC3                   MOV         R12,R11
    00000608 4B08                   SHLL2       R11
    0000060A 30BC                   ADD         R11,R0
    0000060C 2F06                   MOV.L       R0,@-R15
    0000060E 50DD                   MOV.L       @(52,R13),R0
    00000610 55E8                   MOV.L       @(32,R14),R5
    00000612 06BE                   MOV.L       @(R0,R11),R6
    00000614 BDD8                   BSR         _calculateMatrixVectorMul
    00000616 54E9                   MOV.L       @(36,R14),R4
    00000618 62F6                   MOV.L       @R15+,R2
    0000061A 7C01                   ADD         #1,R12
    0000061C 2202                   MOV.L       R0,@R2
    0000061E              L1219:                            
    0000061E 53DB                   MOV.L       @(44,R13),R3
    00000620 3C33                   CMP/GE      R3,R12
    00000622 8BEF                   BF          L1220
      simplexC.c   385        }
      simplexC.c   386        if(it->idVarIn!=-1)//Check optimum criteria




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000624 50E5                   MOV.L       @(20,R14),R0
    00000626 88FF                   CMP/EQ      #-1,R0
    00000628 895C                   BT          L1022
      simplexC.c   387        {
      simplexC.c   388            it->xbDivYj= calloc(it->BinvSize,sizeof(float));
    0000062A E504                   MOV         #4,R5
    0000062C 490B                   JSR         @R9
    0000062E 54E9                   MOV.L       @(36,R14),R4
      simplexC.c   389            bestExitVarValue=INT_MAX;
    00000630 D67A                   MOV.L       L1472,R6   ; H'4F000000
      simplexC.c   390            it->indexVarOutInBInvMatrix=-1;
    00000632 E3FF                   MOV         #-1,R3
    00000634 E140                   MOV         #64,R1
    00000636 31EC                   ADD         R14,R1
    00000638 2102                   MOV.L       R0,@R1
      simplexC.c   391            it->isUnbounded=1;
    0000063A E201                   MOV         #1,R2
    0000063C 1E37                   MOV.L       R3,@(28,R14)
    0000063E 1E24                   MOV.L       R2,@(16,R14)
      simplexC.c   392            for(i=0;i<it->BinvSize;i++)
    00000640 A044                   BRA         L1222
    00000642 64A3                   MOV         R10,R4
    00000644              L1223:                            
      simplexC.c   393            {
      simplexC.c   394                if(it->yj[it->idVarIn][i]!=0)
    00000644 50E5                   MOV.L       @(20,R14),R0
    00000646 6143                   MOV         R4,R1
    00000648 53EF                   MOV.L       @(60,R14),R3
    0000064A 4008                   SHLL2       R0
    0000064C 003E                   MOV.L       @(R0,R3),R0
    0000064E 4108                   SHLL2       R1
    00000650 D373                   MOV.L       L1472+4,R3 ; __eqs
    00000652 011E                   MOV.L       @(R0,R1),R1
    00000654 430B                   JSR         @R3
    00000656 E000                   MOV         #0,R0
    00000658 8800                   CMP/EQ      #0,R0
    0000065A 8B30                   BF          L1024
      simplexC.c   395                {
      simplexC.c   396                    it->xbDivYj[i]=it->xb[i]/it->yj[it->idVarIn][i];
    0000065C 53EF                   MOV.L       @(60,R14),R3
    0000065E 6543                   MOV         R4,R5
    00000660 4508                   SHLL2       R5
    00000662 E040                   MOV         #64,R0
    00000664 00EE                   MOV.L       @(R0,R14),R0
    00000666 6203                   MOV         R0,R2
    00000668 50EB                   MOV.L       @(44,R14),R0
    0000066A 325C                   ADD         R5,R2
    0000066C 015E                   MOV.L       @(R0,R5),R1
    0000066E 50E5                   MOV.L       @(20,R14),R0
    00000670 4008                   SHLL2       R0
    00000672 003E                   MOV.L       @(R0,R3),R0
    00000674 D36B                   MOV.L       L1472+8,R3 ; __divs
    00000676 430B                   JSR         @R3
    00000678 005E                   MOV.L       @(R0,R5),R0
    0000067A 2202                   MOV.L       R0,@R2
      simplexC.c   397                    if(it->xbDivYj[i]>0 && it->xbDivYj[i]<bestExitVarValue)
    0000067C D36A                   MOV.L       L1472+12,R3; __gts




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000067E E040                   MOV         #64,R0
    00000680 00EE                   MOV.L       @(R0,R14),R0
    00000682 075E                   MOV.L       @(R0,R5),R7
    00000684 6173                   MOV         R7,R1
    00000686 430B                   JSR         @R3
    00000688 E000                   MOV         #0,R0
    0000068A 8800                   CMP/EQ      #0,R0
    0000068C 890D                   BT          L1225
    0000068E 6173                   MOV         R7,R1
    00000690 D266                   MOV.L       L1472+16,R2; __lts
    00000692 420B                   JSR         @R2
    00000694 6063                   MOV         R6,R0
    00000696 8800                   CMP/EQ      #0,R0
    00000698 8907                   BT          L1225
      simplexC.c   398                    {
      simplexC.c   399                        it->indexVarOutInBInvMatrix=i;
      simplexC.c   400                        bestExitVarValue=it->xbDivYj[i];
    0000069A 6643                   MOV         R4,R6
    0000069C 1E47                   MOV.L       R4,@(28,R14)
    0000069E E040                   MOV         #64,R0
    000006A0 00EE                   MOV.L       @(R0,R14),R0
    000006A2 4608                   SHLL2       R6
    000006A4 066E                   MOV.L       @(R0,R6),R6
      simplexC.c   401                        it->isUnbounded=0;
    000006A6 A010                   BRA         L1228
    000006A8 1EA4                   MOV.L       R10,@(16,R14)
    000006AA              L1225:                            
      simplexC.c   402                    }else if(it->xbDivYj[i]<0)
    000006AA 6143                   MOV         R4,R1
    000006AC D35F                   MOV.L       L1472+16,R3; __lts
    000006AE E040                   MOV         #64,R0
    000006B0 00EE                   MOV.L       @(R0,R14),R0
    000006B2 4108                   SHLL2       R1
    000006B4 011E                   MOV.L       @(R0,R1),R1
    000006B6 430B                   JSR         @R3
    000006B8 E000                   MOV         #0,R0
    000006BA 8800                   CMP/EQ      #0,R0
    000006BC 8905                   BT          L1228
    000006BE              L1024:
      simplexC.c   403                    {
      simplexC.c   404                        it->xbDivYj[i]=NO_EVAL_VALUE;
      simplexC.c   405                    }
      simplexC.c   406                    
      simplexC.c   407                }else
      simplexC.c   408                {
      simplexC.c   409                    it->xbDivYj[i]=NO_EVAL_VALUE;
    000006BE 6243                   MOV         R4,R2
    000006C0 D356                   MOV.L       L1472,R3   ; H'4F000000
    000006C2 E040                   MOV         #64,R0
    000006C4 00EE                   MOV.L       @(R0,R14),R0
    000006C6 4208                   SHLL2       R2
    000006C8 0236                   MOV.L       R3,@(R0,R2)
    000006CA              L1228:                            
    000006CA 7401                   ADD         #1,R4
    000006CC              L1222:                            
    000006CC 52E9                   MOV.L       @(36,R14),R2
    000006CE 3423                   CMP/GE      R2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006D0 8BB8                   BF          L1223
      simplexC.c   410                }
      simplexC.c   411                
      simplexC.c   412            }
      simplexC.c   413            if(!it->isUnbounded)
    000006D2 51E4                   MOV.L       @(16,R14),R1
    000006D4 2118                   TST         R1,R1
    000006D6 8B05                   BF          L1022
      simplexC.c   414            {
      simplexC.c   415                it->idVarOut=it->idByRowOfBasicVarsInBInv[it->indexVarOutInBInvMatrix];
    000006D8 53E7                   MOV.L       @(28,R14),R3
    000006DA 4308                   SHLL2       R3
    000006DC 50E3                   MOV.L       @(12,R14),R0
    000006DE 023E                   MOV.L       @(R0,R3),R2
    000006E0 A002                   BRA         L1231
    000006E2 1E26                   MOV.L       R2,@(24,R14)
    000006E4              L1022:
      simplexC.c   416            }else
      simplexC.c   417            {
      simplexC.c   418                it->idVarOut=-1;
      simplexC.c   419            }
      simplexC.c   420        }else
      simplexC.c   421        {
      simplexC.c   422            it->idVarOut=-1;
    000006E4 E1FF                   MOV         #-1,R1
    000006E6 1E16                   MOV.L       R1,@(24,R14)
    000006E8              L1231:                            
      simplexC.c   423        }
      simplexC.c   424        
      simplexC.c   425        
      simplexC.c   426    }
    000006E8 7F04                   ADD         #4,R15
    000006EA 4F26                   LDS.L       @R15+,PR
    000006EC 68F6                   MOV.L       @R15+,R8
    000006EE 69F6                   MOV.L       @R15+,R9
    000006F0 6AF6                   MOV.L       @R15+,R10
    000006F2 6BF6                   MOV.L       @R15+,R11
    000006F4 6CF6                   MOV.L       @R15+,R12
    000006F6 6DF6                   MOV.L       @R15+,R13
    000006F8 000B                   RTS
    000006FA 6EF6                   MOV.L       @R15+,R14
      simplexC.c   427    
      simplexC.c   428    struct iteration* modelToIteration(struct problemStatement *pS)
    000006FC              _modelToIteration:               ; function: modelToIteration
                                                           ; frame size=32
    000006FC 2FE6                   MOV.L       R14,@-R15
    000006FE 2FD6                   MOV.L       R13,@-R15
    00000700 2FC6                   MOV.L       R12,@-R15
    00000702 6D43                   MOV         R4,R13
      simplexC.c   429    {
      simplexC.c   430        struct iteration *it;
      simplexC.c   431        int i;
      simplexC.c   432        it = malloc(sizeof(struct iteration));
    00000704 D34A                   MOV.L       L1472+20,R3; _malloc
    00000706 2FB6                   MOV.L       R11,@-R15
    00000708 2FA6                   MOV.L       R10,@-R15
    0000070A 2F96                   MOV.L       R9,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000070C 2F86                   MOV.L       R8,@-R15
    0000070E 4F22                   STS.L       PR,@-R15
    00000710 430B                   JSR         @R3
    00000712 E448                   MOV         #72,R4
      simplexC.c   433        it->numIteration=0;
      simplexC.c   434        //Matriz B-1
      simplexC.c   435        it->BinvSize=pS->nConstraints;
      simplexC.c   436        it->Binv=calloc(it->BinvSize,sizeof(float));
    00000714 DA47                   MOV.L       L1472+24,R10; _calloc
    00000716 E504                   MOV         #4,R5
    00000718 6E03                   MOV         R0,R14
    0000071A E900                   MOV         #0,R9
    0000071C 2E92                   MOV.L       R9,@R14
    0000071E 52DB                   MOV.L       @(44,R13),R2
    00000720 1E29                   MOV.L       R2,@(36,R14)
    00000722 4A0B                   JSR         @R10
    00000724 6423                   MOV         R2,R4
    00000726 1E08                   MOV.L       R0,@(32,R14)
      simplexC.c   437        for(i=0;i<it->BinvSize;i++)
    00000728 A00E                   BRA         L1232
    0000072A 6C93                   MOV         R9,R12
    0000072C              L1233:                            
      simplexC.c   438        {
      simplexC.c   439            it->Binv[i]=calloc(it->BinvSize,sizeof(float));
    0000072C 58E8                   MOV.L       @(32,R14),R8
    0000072E E504                   MOV         #4,R5
    00000730 6BC3                   MOV         R12,R11
    00000732 4B08                   SHLL2       R11
    00000734 38BC                   ADD         R11,R8
    00000736 4A0B                   JSR         @R10
    00000738 54E9                   MOV.L       @(36,R14),R4
    0000073A 7C01                   ADD         #1,R12
    0000073C 2802                   MOV.L       R0,@R8
      simplexC.c   440            it->Binv[i][i]=1;
    0000073E 50E8                   MOV.L       @(32,R14),R0
    00000740 D23D                   MOV.L       L1472+28,R2; H'3F800000
    00000742 03BE                   MOV.L       @(R0,R11),R3
    00000744 33BC                   ADD         R11,R3
    00000746 2322                   MOV.L       R2,@R3
    00000748              L1232:                            
    00000748 53E9                   MOV.L       @(36,R14),R3
    0000074A 3C33                   CMP/GE      R3,R12
    0000074C 8BEE                   BF          L1233
      simplexC.c   441        }
      simplexC.c   442        it->idBasicVariables=calloc(pS->nVariables,sizeof(int));
    0000074E E504                   MOV         #4,R5
    00000750 4A0B                   JSR         @R10
    00000752 54D7                   MOV.L       @(28,R13),R4
    00000754 1E02                   MOV.L       R0,@(8,R14)
      simplexC.c   443        it->idByRowOfBasicVarsInBInv=calloc(it->BinvSize,sizeof(int));
    00000756 E504                   MOV         #4,R5
    00000758 4A0B                   JSR         @R10
    0000075A 54E9                   MOV.L       @(36,R14),R4
    0000075C 1E03                   MOV.L       R0,@(12,R14)
      simplexC.c   444        for(i=0;i<it->BinvSize;i++)
    0000075E E401                   MOV         #1,R4
    00000760 A023                   BRA         L1234




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000762 6593                   MOV         R9,R5
    00000764              L1235:                            
    00000764 6C53                   MOV         R5,R12
    00000766 4C08                   SHLL2       R12
    00000768 E040                   MOV         #64,R0
    0000076A 00DE                   MOV.L       @(R0,R13),R0
    0000076C 03CE                   MOV.L       @(R0,R12),R3
    0000076E 4315                   CMP/PL      R3
    00000770 8B0C                   BF          L1236
      simplexC.c   445        {
      simplexC.c   446            if(pS->idConstraintTo2fasesVar[i]>0)
      simplexC.c   447            {
      simplexC.c   448                it->idByRowOfBasicVarsInBInv[i]=pS->idConstraintTo2fasesVar[i];
    00000772 E040                   MOV         #64,R0
    00000774 52E3                   MOV.L       @(12,R14),R2
    00000776 32CC                   ADD         R12,R2
    00000778 00DE                   MOV.L       @(R0,R13),R0
    0000077A 03CE                   MOV.L       @(R0,R12),R3
    0000077C 2232                   MOV.L       R3,@R2
      simplexC.c   449                it->idBasicVariables[pS->idConstraintTo2fasesVar[i]]=1;
    0000077E E040                   MOV         #64,R0
    00000780 00DE                   MOV.L       @(R0,R13),R0
    00000782 03CE                   MOV.L       @(R0,R12),R3
    00000784 50E2                   MOV.L       @(8,R14),R0
    00000786 4308                   SHLL2       R3
    00000788 A00E                   BRA         L1237
    0000078A 0346                   MOV.L       R4,@(R0,R3)
    0000078C              L1236:                            
      simplexC.c   450            }else if(pS->idConstraintToSlopeVar[i]>0)
    0000078C 50DF                   MOV.L       @(60,R13),R0
    0000078E 03CE                   MOV.L       @(R0,R12),R3
    00000790 4315                   CMP/PL      R3
    00000792 8B09                   BF          L1237
      simplexC.c   451            {
      simplexC.c   452                it->idByRowOfBasicVarsInBInv[i]=pS->idConstraintToSlopeVar[i];
    00000794 52E3                   MOV.L       @(12,R14),R2
    00000796 32CC                   ADD         R12,R2
    00000798 50DF                   MOV.L       @(60,R13),R0
    0000079A 03CE                   MOV.L       @(R0,R12),R3
    0000079C 2232                   MOV.L       R3,@R2
      simplexC.c   453                it->idBasicVariables[pS->idConstraintToSlopeVar[i]]=1;
    0000079E 50DF                   MOV.L       @(60,R13),R0
    000007A0 03CE                   MOV.L       @(R0,R12),R3
    000007A2 4308                   SHLL2       R3
    000007A4 50E2                   MOV.L       @(8,R14),R0
    000007A6 0346                   MOV.L       R4,@(R0,R3)
    000007A8              L1237:                            
    000007A8 7501                   ADD         #1,R5
    000007AA              L1234:                            
    000007AA 52E9                   MOV.L       @(36,R14),R2
    000007AC 3523                   CMP/GE      R2,R5
    000007AE 8BD9                   BF          L1235
      simplexC.c   454            }
      simplexC.c   455        }
      simplexC.c   456        return it;
      simplexC.c   457    }
    000007B0 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007B2 60E3                   MOV         R14,R0
    000007B4 68F6                   MOV.L       @R15+,R8
    000007B6 69F6                   MOV.L       @R15+,R9
    000007B8 6AF6                   MOV.L       @R15+,R10
    000007BA 6BF6                   MOV.L       @R15+,R11
    000007BC 6CF6                   MOV.L       @R15+,R12
    000007BE 6DF6                   MOV.L       @R15+,R13
    000007C0 000B                   RTS
    000007C2 6EF6                   MOV.L       @R15+,R14
      simplexC.c   458    
      simplexC.c   459    int lengthConcatenate(int sprintLength)
    000007C4              _lengthConcatenate:              ; function: lengthConcatenate
                                                           ; frame size=0
      simplexC.c   460    {
      simplexC.c   461        return (sprintLength > 0) ? sprintLength : 0;
    000007C4 4415                   CMP/PL      R4
    000007C6 8B01                   BF          L1240
    000007C8 000B                   RTS
    000007CA 6043                   MOV         R4,R0
    000007CC              L1240:                            
    000007CC E000                   MOV         #0,R0
      simplexC.c   462    }
    000007CE              L1242:                            
    000007CE 000B                   RTS
    000007D0 0009                   NOP
      simplexC.c   463    
      simplexC.c   464    char* getInequalityChar(int inequalitySign)
    000007D2              _getInequalityChar:              ; function: getInequalityChar
                                                           ; frame size=0
      simplexC.c   465    {
      simplexC.c   466        char * res;
      simplexC.c   467        switch (inequalitySign)
    000007D2 6043                   MOV         R4,R0
    000007D4 8800                   CMP/EQ      #0,R0
    000007D6 8905                   BT          L1026
    000007D8 8801                   CMP/EQ      #1,R0
    000007DA 8906                   BT          L1028
    000007DC 8802                   CMP/EQ      #2,R0
    000007DE 8907                   BT          L1030
    000007E0 A009                   BRA         L1032
    000007E2 0009                   NOP
    000007E4              L1026:                           ; case label 
      simplexC.c   468        {
      simplexC.c   469            case INE_EQUAL: res="="; break;
    000007E4 D415                   MOV.L       L1472+32,R4; L555
    000007E6 A007                   BRA         L1243
    000007E8 0009                   NOP
    000007EA              L1028:                           ; case label 
      simplexC.c   470            case INE_LESS_OR_EQUAL_THAN: res="<="; break;
    000007EA D415                   MOV.L       L1472+36,R4; L556
    000007EC A004                   BRA         L1243
    000007EE 0009                   NOP
    000007F0              L1030:                           ; case label 
      simplexC.c   471            case INE_GREATER_OR_EQUAL_THAN: res=">="; break;
    000007F0 D414                   MOV.L       L1472+40,R4; L557
    000007F2 A001                   BRA         L1243
    000007F4 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007F6              L1032:                           ; default label 
      simplexC.c   472            default: res = "ERROR"; break;
    000007F6 D414                   MOV.L       L1472+44,R4; L558
    000007F8              L1243:                            
      simplexC.c   473        }
      simplexC.c   474        return res;
      simplexC.c   475    }
    000007F8 000B                   RTS
    000007FA 6043                   MOV         R4,R0
      simplexC.c   476    
      simplexC.c   477    char * getFuncObjPurposeChar(int purpose)
    000007FC              _getFuncObjPurposeChar:          ; function: getFuncObjPurposeChar
                                                           ; frame size=0
      simplexC.c   478    {
      simplexC.c   479        char * res;
      simplexC.c   480        switch (purpose)
    000007FC 6043                   MOV         R4,R0
    000007FE 8800                   CMP/EQ      #0,R0
    00000800 8903                   BT          L1034
    00000802 8801                   CMP/EQ      #1,R0
    00000804 8904                   BT          L1036
    00000806 A006                   BRA         L1038
    00000808 0009                   NOP
    0000080A              L1034:                           ; case label 
      simplexC.c   481        {
      simplexC.c   482            case FUNC_MINIMIZE: res="MIN"; break;
    0000080A D410                   MOV.L       L1472+48,R4; L564
    0000080C A004                   BRA         L1245
    0000080E 0009                   NOP
    00000810              L1036:                           ; case label 
      simplexC.c   483            case FUNC_MAXIMIZE: res="MAX"; break;
    00000810 D40F                   MOV.L       L1472+52,R4; L565
    00000812 A001                   BRA         L1245
    00000814 0009                   NOP
    00000816              L1038:                           ; default label 
      simplexC.c   484            default: res = "ERROR";break;
    00000816 D40C                   MOV.L       L1472+44,R4; L558
    00000818              L1245:                            
      simplexC.c   485        }
      simplexC.c   486        return res;
      simplexC.c   487    } 
    00000818 000B                   RTS
    0000081A 6043                   MOV         R4,R0
    0000081C              L1472:                            
    0000081C 4F000000               .DATA.L     H'4F000000
    00000820 <00000000>             .DATA.L     __eqs
    00000824 <00000000>             .DATA.L     __divs
    00000828 <00000000>             .DATA.L     __gts
    0000082C <00000000>             .DATA.L     __lts
    00000830 <00000000>             .DATA.L     _malloc
    00000834 <00000000>             .DATA.L     _calloc
    00000838 3F800000               .DATA.L     H'3F800000
    0000083C <00000000>             .DATA.L     L555
    00000840 <00000000>             .DATA.L     L556
    00000844 <00000000>             .DATA.L     L557
    00000848 <00000000>             .DATA.L     L558
    0000084C <00000000>             .DATA.L     L564




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000850 <00000000>             .DATA.L     L565
      simplexC.c   488    
      simplexC.c   489    int printObjFunc(struct problemStatement* pS,int modelType)
    00000854              _printObjFunc:                   ; function: printObjFunc
                                                           ; frame size=1212
                                                           ; used runtime library name:
                                                           ; __stod
    00000854 2FE6                   MOV.L       R14,@-R15
      simplexC.c   490    {
      simplexC.c   491        char stroutTop[128],stroutBasicInfo[128],stroutBasicInfo2[128],stroutBasicInfo3[128],stroutInfoVar[128
                         +];
      simplexC.c   492        char *uselessSring[128];
      simplexC.c   493        int menuChoice;
      simplexC.c   494        menuChoice=INITIALIZE_VALUE_OPT;
      simplexC.c   495        sprintf(stroutTop,"Problem statement %s, OBJ. Exit %d",(pS->modelType==TYPE_INPUT) ? "INPUT" :"SOLVE",
                         + EXIT_OPT);
    00000856 E300                   MOV         #0,R3
    00000858 9088                   MOV.W       L1473,R0   ; H'FB7C
    0000085A 2FD6                   MOV.L       R13,@-R15
    0000085C 2FC6                   MOV.L       R12,@-R15
    0000085E 6C43                   MOV         R4,R12
    00000860 2FB6                   MOV.L       R11,@-R15
    00000862 2FA6                   MOV.L       R10,@-R15
    00000864 2F96                   MOV.L       R9,@-R15
    00000866 2F86                   MOV.L       R8,@-R15
    00000868 4F22                   STS.L       PR,@-R15
    0000086A 3F0C                   ADD         R0,R15
    0000086C DB45                   MOV.L       L1473+24,R11; _sprintf
    0000086E 2F52                   MOV.L       R5,@R15
    00000870 2F36                   MOV.L       R3,@-R15
    00000872 50C1                   MOV.L       @(4,R12),R0
    00000874 8801                   CMP/EQ      #1,R0
    00000876 8F03                   BF/S        L1247
    00000878 EDFF                   MOV         #-1,R13
    0000087A D143                   MOV.L       L1473+28,R1; L578
    0000087C A002                   BRA         L1248
    0000087E 2F16                   MOV.L       R1,@-R15
    00000880              L1247:                            
    00000880 D242                   MOV.L       L1473+32,R2; L579
    00000882 2F26                   MOV.L       R2,@-R15
    00000884              L1248:                            
    00000884 D142                   MOV.L       L1473+36,R1; L577
    00000886 2F16                   MOV.L       R1,@-R15
    00000888 9471                   MOV.W       L1473+2,R4 ; H'0410
    0000088A 4B0B                   JSR         @R11
    0000088C 34FC                   ADD         R15,R4
      simplexC.c   496        sprintf(stroutBasicInfo, "NConstraints: %d, NVariables: %d", pS->nConstraints, pS->nVariables);
    0000088E 53C7                   MOV.L       @(28,R12),R3
    00000890 946E                   MOV.W       L1473+4,R4 ; H'039C
    00000892 2F36                   MOV.L       R3,@-R15
    00000894 52CB                   MOV.L       @(44,R12),R2
    00000896 2F26                   MOV.L       R2,@-R15
    00000898 D33E                   MOV.L       L1473+40,R3; L580
    0000089A 2F36                   MOV.L       R3,@-R15
    0000089C 4B0B                   JSR         @R11
    0000089E 34FC                   ADD         R15,R4
    000008A0 7F18                   ADD         #24,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   497        if(modelType==TYPE_INPUT)
    000008A2 60F2                   MOV.L       @R15,R0
    000008A4 8801                   CMP/EQ      #1,R0
    000008A6 8B13                   BF          L1249
      simplexC.c   498        {
      simplexC.c   499            sprintf(stroutBasicInfo2, "OBJ %s", getFuncObjPurposeChar(pS->funcObjectivePurpose));
    000008A8 E044                   MOV         #68,R0
    000008AA BFA7                   BSR         _getFuncObjPurposeChar
    000008AC 04CE                   MOV.L       @(R0,R12),R4
    000008AE 2F06                   MOV.L       R0,@-R15
    000008B0 D239                   MOV.L       L1473+44,R2; L582
    000008B2 2F26                   MOV.L       R2,@-R15
    000008B4 945D                   MOV.W       L1473+6,R4 ; H'030C
    000008B6 4B0B                   JSR         @R11
    000008B8 34FC                   ADD         R15,R4
      simplexC.c   500            sprintf(stroutBasicInfo3, "Ind term: %.2f. Sel var", pS->funcObjtValues[pS->nVariables]);
    000008BA E348                   MOV         #72,R3
    000008BC D237                   MOV.L       L1473+48,R2; __stod
    000008BE 33CC                   ADD         R12,R3
    000008C0 50C7                   MOV.L       @(28,R12),R0
    000008C2 4008                   SHLL2       R0
    000008C4 6332                   MOV.L       @R3,R3
    000008C6 003E                   MOV.L       @(R0,R3),R0
    000008C8 420B                   JSR         @R2
    000008CA 2FF6                   MOV.L       R15,@-R15
    000008CC A00F                   BRA         L1462
    000008CE 0009                   NOP
    000008D0              L1249:                            
      simplexC.c   501        }else
      simplexC.c   502        {
      simplexC.c   503            sprintf(stroutBasicInfo2, "OBJ MIN");
    000008D0 D333                   MOV.L       L1473+52,R3; L585
    000008D2 2F36                   MOV.L       R3,@-R15
    000008D4 944E                   MOV.W       L1473+8,R4 ; H'0308
    000008D6 4B0B                   JSR         @R11
    000008D8 34FC                   ADD         R15,R4
      simplexC.c   504            sprintf(stroutBasicInfo3, "Ind term: %.2f. Sel var", pS->funcObjtValues2Fases[pS->nVariables]);
    000008DA E34C                   MOV         #76,R3
    000008DC D22F                   MOV.L       L1473+48,R2; __stod
    000008DE 33CC                   ADD         R12,R3
    000008E0 50C7                   MOV.L       @(28,R12),R0
    000008E2 4008                   SHLL2       R0
    000008E4 6332                   MOV.L       @R3,R3
    000008E6 003E                   MOV.L       @(R0,R3),R0
    000008E8 7FFC                   ADD         #-4,R15
    000008EA 420B                   JSR         @R2
    000008EC 2FF6                   MOV.L       R15,@-R15
    000008EE              L1462:                            
    000008EE D32D                   MOV.L       L1473+56,R3; L583
    000008F0 9441                   MOV.W       L1473+10,R4; H'0290
    000008F2 2F36                   MOV.L       R3,@-R15
    000008F4 4B0B                   JSR         @R11
    000008F6 34FC                   ADD         R15,R4
    000008F8 D82B                   MOV.L       L1473+60,R8; _Bdisp_PutDisp_DD
    000008FA 7F0C                   ADD         #12,R15
    000008FC 9A3C                   MOV.W       L1473+12,R10; H'0204
    000008FE DE2B                   MOV.L       L1473+64,R14; _PrintMini




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   505        }
      simplexC.c   506        while(menuChoice!=EXIT_OPT)
    00000900 A077                   BRA         L1251
    00000902 3AFC                   ADD         R15,R10
    00000904              L1252:                            
      simplexC.c   507        {
      simplexC.c   508            Bdisp_AllClr_DDVRAM();
    00000904 D32A                   MOV.L       L1473+68,R3; _Bdisp_AllClr_DDVRAM
    00000906 430B                   JSR         @R3
    00000908 0009                   NOP
      simplexC.c   509            PrintMini(0,0,  (unsigned char *)stroutTop, MINI_OVER);
    0000090A E710                   MOV         #16,R7
    0000090C 9635                   MOV.W       L1473+14,R6; H'0404
    0000090E E500                   MOV         #0,R5
    00000910 36FC                   ADD         R15,R6
    00000912 4E0B                   JSR         @R14
    00000914 6453                   MOV         R5,R4
      simplexC.c   510            PrintMini(0,7,  (unsigned char *)stroutBasicInfo, MINI_OVER);
    00000916 E710                   MOV         #16,R7
    00000918 9630                   MOV.W       L1473+16,R6; H'0384
    0000091A E507                   MOV         #7,R5
    0000091C 36FC                   ADD         R15,R6
    0000091E 4E0B                   JSR         @R14
    00000920 E400                   MOV         #0,R4
      simplexC.c   511            PrintMini(0, 14, (unsigned char*)stroutBasicInfo2, MINI_OVER);
    00000922 E710                   MOV         #16,R7
    00000924 962B                   MOV.W       L1473+18,R6; H'0304
    00000926 E50E                   MOV         #14,R5
    00000928 36FC                   ADD         R15,R6
    0000092A 4E0B                   JSR         @R14
    0000092C E400                   MOV         #0,R4
      simplexC.c   512            PrintMini(0, 21, (unsigned char*)stroutBasicInfo3, MINI_OVER);
    0000092E E710                   MOV         #16,R7
    00000930 9626                   MOV.W       L1473+20,R6; H'0284
    00000932 E515                   MOV         #21,R5
    00000934 36FC                   ADD         R15,R6
    00000936 4E0B                   JSR         @R14
    00000938 E400                   MOV         #0,R4
      simplexC.c   513            menuChoice = InputI(0, 35);
    0000093A E523                   MOV         #35,R5
    0000093C BB77                   BSR         _InputI
    0000093E E400                   MOV         #0,R4
      simplexC.c   514            Bdisp_PutDisp_DD();
    00000940 480B                   JSR         @R8
    00000942 6D03                   MOV         R0,R13
      simplexC.c   515            if(menuChoice!=EXIT_OPT && menuChoice<=pS->nVariables)
    00000944 2DD8                   TST         R13,R13
    00000946 8954                   BT          L1251
    00000948 52C7                   MOV.L       @(28,R12),R2
    0000094A 3D27                   CMP/GT      R2,R13
    0000094C 8951                   BT          L1251
    0000094E 69D3                   MOV         R13,R9
    00000950 60F2                   MOV.L       @R15,R0
    00000952 79FF                   ADD         #-1,R9
    00000954 8801                   CMP/EQ      #1,R0
    00000956 8F2D                   BF/S        L1254
    00000958 4908                   SHLL2       R9




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   516            {
      simplexC.c   517                if(modelType==TYPE_INPUT)
      simplexC.c   518                {
      simplexC.c   519                    sprintf(stroutInfoVar,"Obj val x%d: %.2f", menuChoice,pS->funcObjtValues[menuChoice-1]);
    0000095A E048                   MOV         #72,R0
    0000095C D30F                   MOV.L       L1473+48,R3; __stod
    0000095E 00CE                   MOV.L       @(R0,R12),R0
    00000960 009E                   MOV.L       @(R0,R9),R0
    00000962 7FF8                   ADD         #-8,R15
    00000964 430B                   JSR         @R3
    00000966 2FF6                   MOV.L       R15,@-R15
    00000968 A02B                   BRA         L1463
    0000096A 0009                   NOP
    0000096C              L1473:                            
    0000096C FB7C                   .DATA.W     H'FB7C
    0000096E 0410                   .DATA.W     H'0410
    00000970 039C                   .DATA.W     H'039C
    00000972 030C                   .DATA.W     H'030C
    00000974 0308                   .DATA.W     H'0308
    00000976 0290                   .DATA.W     H'0290
    00000978 0204                   .DATA.W     H'0204
    0000097A 0404                   .DATA.W     H'0404
    0000097C 0384                   .DATA.W     H'0384
    0000097E 0304                   .DATA.W     H'0304
    00000980 0284                   .DATA.W     H'0284
    00000982 0000                   .DATA.W     0
    00000984 <00000000>             .DATA.L     _sprintf
    00000988 <00000000>             .DATA.L     L578
    0000098C <00000000>             .DATA.L     L579
    00000990 <00000000>             .DATA.L     L577
    00000994 <00000000>             .DATA.L     L580
    00000998 <00000000>             .DATA.L     L582
    0000099C <00000000>             .DATA.L     __stod
    000009A0 <00000000>             .DATA.L     L585
    000009A4 <00000000>             .DATA.L     L583
    000009A8 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000009AC <00000000>             .DATA.L     _PrintMini
    000009B0 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000009B4              L1254:                            
      simplexC.c   520                }else
      simplexC.c   521                {
      simplexC.c   522                    sprintf(stroutInfoVar,"Obj val x%d: %.2f", menuChoice,pS->funcObjtValues2Fases[menuChoice-
                         +1]);
    000009B4 D351                   MOV.L       L1474+12,R3; __stod
    000009B6 E04C                   MOV         #76,R0
    000009B8 00CE                   MOV.L       @(R0,R12),R0
    000009BA 009E                   MOV.L       @(R0,R9),R0
    000009BC 7FF8                   ADD         #-8,R15
    000009BE 430B                   JSR         @R3
    000009C0 2FF6                   MOV.L       R15,@-R15
    000009C2              L1463:                            
    000009C2 2FD6                   MOV.L       R13,@-R15
    000009C4 D24E                   MOV.L       L1474+16,R2; L589
    000009C6 2F26                   MOV.L       R2,@-R15
    000009C8 4B0B                   JSR         @R11
    000009CA 64A3                   MOV         R10,R4
    000009CC 7F10                   ADD         #16,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   523                }
      simplexC.c   524                
      simplexC.c   525                PrintMini(0, 42, (unsigned char*)stroutInfoVar, MINI_OVER);
    000009CE E710                   MOV         #16,R7
    000009D0 66A3                   MOV         R10,R6
    000009D2 E52A                   MOV         #42,R5
    000009D4 4E0B                   JSR         @R14
    000009D6 E400                   MOV         #0,R4
      simplexC.c   526                PrintMini(0, 49, (unsigned char*)"Press any key to continue", MINI_OVER);
    000009D8 D64A                   MOV.L       L1474+20,R6; L591
    000009DA E531                   MOV         #49,R5
    000009DC E710                   MOV         #16,R7
    000009DE 4E0B                   JSR         @R14
    000009E0 E400                   MOV         #0,R4
      simplexC.c   527                string_input(0, 56, uselessSring);
    000009E2 66F3                   MOV         R15,R6
    000009E4 D348                   MOV.L       L1474+24,R3; _string_input
    000009E6 E538                   MOV         #56,R5
    000009E8 7604                   ADD         #4,R6
    000009EA 430B                   JSR         @R3
    000009EC E400                   MOV         #0,R4
      simplexC.c   528                Bdisp_PutDisp_DD();
    000009EE 480B                   JSR         @R8
    000009F0 0009                   NOP
    000009F2              L1251:                            
    000009F2 2DD8                   TST         R13,R13
    000009F4 8B86                   BF          L1252
      simplexC.c   529            }
      simplexC.c   530        }
      simplexC.c   531        return 0;
    000009F6 E000                   MOV         #0,R0
      simplexC.c   532    }
    000009F8 917A                   MOV.W       L1474,R1   ; H'0484
    000009FA 3F1C                   ADD         R1,R15
    000009FC 4F26                   LDS.L       @R15+,PR
    000009FE 68F6                   MOV.L       @R15+,R8
    00000A00 69F6                   MOV.L       @R15+,R9
    00000A02 6AF6                   MOV.L       @R15+,R10
    00000A04 6BF6                   MOV.L       @R15+,R11
    00000A06 6CF6                   MOV.L       @R15+,R12
    00000A08 6DF6                   MOV.L       @R15+,R13
    00000A0A 000B                   RTS
    00000A0C 6EF6                   MOV.L       @R15+,R14
      simplexC.c   533    
      simplexC.c   534    int printAjVal(int varId)
    00000A0E              _printAjVal:                     ; function: printAjVal
                                                           ; frame size=824
                                                           ; used runtime library name:
                                                           ; __stod
      simplexC.c   535    {
      simplexC.c   536        char stroutBasicInfo[128],stroutVariable[128];
      simplexC.c   537        char *uselessSring[128];
      simplexC.c   538        int menuChoice;
      simplexC.c   539        menuChoice=INITIALIZE_VALUE_OPT;
      simplexC.c   540        sprintf(stroutBasicInfo, "Ax%d. nConstraints: %d, Exit %d",varId,ex.nConstraints,EXIT_OPT);
    00000A0E E300                   MOV         #0,R3
    00000A10 D13E                   MOV.L       L1474+28,R1; H'00000030+_ex




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A12 2FE6                   MOV.L       R14,@-R15
    00000A14 2FD6                   MOV.L       R13,@-R15
    00000A16 EEFF                   MOV         #-1,R14
    00000A18 906B                   MOV.W       L1474+2,R0 ; H'FCFC
    00000A1A 2FC6                   MOV.L       R12,@-R15
    00000A1C 2FB6                   MOV.L       R11,@-R15
    00000A1E 2FA6                   MOV.L       R10,@-R15
    00000A20 2F96                   MOV.L       R9,@-R15
    00000A22 6943                   MOV         R4,R9
    00000A24 2F86                   MOV.L       R8,@-R15
    00000A26 4F22                   STS.L       PR,@-R15
    00000A28 9864                   MOV.W       L1474+4,R8 ; H'0284
    00000A2A 3F0C                   ADD         R0,R15
    00000A2C 38FC                   ADD         R15,R8
    00000A2E 2F36                   MOV.L       R3,@-R15
    00000A30 6212                   MOV.L       @R1,R2
    00000A32 2F26                   MOV.L       R2,@-R15
    00000A34 2F96                   MOV.L       R9,@-R15
    00000A36 D236                   MOV.L       L1474+32,R2; L599
    00000A38 D336                   MOV.L       L1474+36,R3; _sprintf
    00000A3A 2F26                   MOV.L       R2,@-R15
    00000A3C 430B                   JSR         @R3
    00000A3E 6483                   MOV         R8,R4
    00000A40 DA35                   MOV.L       L1474+40,R10; _Bdisp_PutDisp_DD
    00000A42 6293                   MOV         R9,R2
    00000A44 DB35                   MOV.L       L1474+44,R11; _Bdisp_AllClr_DDVRAM
    00000A46 7F10                   ADD         #16,R15
    00000A48 9C55                   MOV.W       L1474+6,R12; H'0204
    00000A4A 72FF                   ADD         #-1,R2
    00000A4C DD34                   MOV.L       L1474+48,R13; _PrintMini
    00000A4E 3CFC                   ADD         R15,R12
    00000A50 4208                   SHLL2       R2
      simplexC.c   541        while(menuChoice!=EXIT_OPT)
    00000A52 A03F                   BRA         L1257
    00000A54 2F22                   MOV.L       R2,@R15
    00000A56              L1258:                            
      simplexC.c   542        {
      simplexC.c   543            Bdisp_AllClr_DDVRAM();
    00000A56 4B0B                   JSR         @R11
    00000A58 0009                   NOP
      simplexC.c   544            PrintMini(0, 0, (unsigned char*)stroutBasicInfo, MINI_OVER);
    00000A5A E710                   MOV         #16,R7
    00000A5C 6683                   MOV         R8,R6
    00000A5E E500                   MOV         #0,R5
    00000A60 4D0B                   JSR         @R13
    00000A62 6453                   MOV         R5,R4
      simplexC.c   545            menuChoice=InputI(0,7);
    00000A64 E507                   MOV         #7,R5
    00000A66 BAE2                   BSR         _InputI
    00000A68 E400                   MOV         #0,R4
      simplexC.c   546            Bdisp_PutDisp_DD();
    00000A6A 4A0B                   JSR         @R10
    00000A6C 6E03                   MOV         R0,R14
      simplexC.c   547            if(menuChoice!=EXIT_OPT && menuChoice<=ex.nConstraints)
    00000A6E 2EE8                   TST         R14,R14
    00000A70 8930                   BT          L1257
    00000A72 D326                   MOV.L       L1474+28,R3; H'00000030+_ex




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A74 6232                   MOV.L       @R3,R2
    00000A76 3E27                   CMP/GT      R2,R14
    00000A78 892C                   BT          L1257
      simplexC.c   548            {
      simplexC.c   549                Bdisp_AllClr_DDVRAM();
    00000A7A 4B0B                   JSR         @R11
    00000A7C 0009                   NOP
      simplexC.c   550                sprintf(stroutVariable, "Ax%d. %.2f Pos %d",varId,ex.ajVector[varId-1][menuChoice-1],menuChoic
                         +e);
    00000A7E 61E3                   MOV         R14,R1
    00000A80 2FE6                   MOV.L       R14,@-R15
    00000A82 71FF                   ADD         #-1,R1
    00000A84 D227                   MOV.L       L1474+52,R2; H'00000034+_ex
    00000A86 4108                   SHLL2       R1
    00000A88 53F1                   MOV.L       @(4,R15),R3
    00000A8A 6022                   MOV.L       @R2,R0
    00000A8C 003E                   MOV.L       @(R0,R3),R0
    00000A8E 001E                   MOV.L       @(R0,R1),R0
    00000A90 D11A                   MOV.L       L1474+12,R1; __stod
    00000A92 7FF8                   ADD         #-8,R15
    00000A94 410B                   JSR         @R1
    00000A96 2FF6                   MOV.L       R15,@-R15
    00000A98 2F96                   MOV.L       R9,@-R15
    00000A9A D023                   MOV.L       L1474+56,R0; L602
    00000A9C D31D                   MOV.L       L1474+36,R3; _sprintf
    00000A9E 2F06                   MOV.L       R0,@-R15
    00000AA0 430B                   JSR         @R3
    00000AA2 64C3                   MOV         R12,R4
    00000AA4 7F14                   ADD         #20,R15
      simplexC.c   551                PrintMini(0,0,(unsigned char*) stroutVariable,MINI_OVER);
    00000AA6 E710                   MOV         #16,R7
    00000AA8 66C3                   MOV         R12,R6
    00000AAA E500                   MOV         #0,R5
    00000AAC 4D0B                   JSR         @R13
    00000AAE 6453                   MOV         R5,R4
      simplexC.c   552                PrintMini(0, 7, (unsigned char*)"Press any key to continue", MINI_OVER);
    00000AB0 D614                   MOV.L       L1474+20,R6; L591
    00000AB2 E507                   MOV         #7,R5
    00000AB4 E710                   MOV         #16,R7
    00000AB6 4D0B                   JSR         @R13
    00000AB8 E400                   MOV         #0,R4
      simplexC.c   553                string_input(0, 14, uselessSring);
    00000ABA 66F3                   MOV         R15,R6
    00000ABC D212                   MOV.L       L1474+24,R2; _string_input
    00000ABE E50E                   MOV         #14,R5
    00000AC0 7604                   ADD         #4,R6
    00000AC2 420B                   JSR         @R2
    00000AC4 E400                   MOV         #0,R4
      simplexC.c   554                Bdisp_PutDisp_DD();
    00000AC6 4A0B                   JSR         @R10
    00000AC8 0009                   NOP
      simplexC.c   555                memset(stroutVariable,0,128);
    00000ACA E500                   MOV         #0,R5
    00000ACC D317                   MOV.L       L1474+60,R3; _memset
    00000ACE 9613                   MOV.W       L1474+8,R6 ; H'0080
    00000AD0 430B                   JSR         @R3
    00000AD2 64C3                   MOV         R12,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AD4              L1257:                            
    00000AD4 2EE8                   TST         R14,R14
    00000AD6 8BBE                   BF          L1258
      simplexC.c   556            }
      simplexC.c   557        }
      simplexC.c   558        return 0;
      simplexC.c   559    }
    00000AD8 910F                   MOV.W       L1474+10,R1; H'0304
    00000ADA E000                   MOV         #0,R0
    00000ADC 3F1C                   ADD         R1,R15
    00000ADE 4F26                   LDS.L       @R15+,PR
    00000AE0 68F6                   MOV.L       @R15+,R8
    00000AE2 69F6                   MOV.L       @R15+,R9
    00000AE4 6AF6                   MOV.L       @R15+,R10
    00000AE6 6BF6                   MOV.L       @R15+,R11
    00000AE8 6CF6                   MOV.L       @R15+,R12
    00000AEA 6DF6                   MOV.L       @R15+,R13
    00000AEC 000B                   RTS
    00000AEE 6EF6                   MOV.L       @R15+,R14
    00000AF0              L1474:                            
    00000AF0 0484                   .DATA.W     H'0484
    00000AF2 FCFC                   .DATA.W     H'FCFC
    00000AF4 0284                   .DATA.W     H'0284
    00000AF6 0204                   .DATA.W     H'0204
    00000AF8 0080                   .DATA.W     H'0080
    00000AFA 0304                   .DATA.W     H'0304
    00000AFC <00000000>             .DATA.L     __stod
    00000B00 <00000000>             .DATA.L     L589
    00000B04 <00000000>             .DATA.L     L591
    00000B08 <00000000>             .DATA.L     _string_input
    00000B0C <00000030>             .DATA.L     H'00000030+_ex
    00000B10 <00000000>             .DATA.L     L599
    00000B14 <00000000>             .DATA.L     _sprintf
    00000B18 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00000B1C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000B20 <00000000>             .DATA.L     _PrintMini
    00000B24 <00000034>             .DATA.L     H'00000034+_ex
    00000B28 <00000000>             .DATA.L     L602
    00000B2C <00000000>             .DATA.L     _memset
      simplexC.c   560    
      simplexC.c   561    int printAjVec()
    00000B30              _printAjVec:                     ; function: printAjVec
                                                           ; frame size=172
    00000B30 2FE6                   MOV.L       R14,@-R15
      simplexC.c   562    {
      simplexC.c   563        char stroutBasicInfo[128];
      simplexC.c   564        int menuChoice;
      simplexC.c   565        menuChoice=INITIALIZE_VALUE_OPT;
    00000B32 EEFF                   MOV         #-1,R14
    00000B34 2FD6                   MOV.L       R13,@-R15
    00000B36 2FC6                   MOV.L       R12,@-R15
    00000B38 2FB6                   MOV.L       R11,@-R15
    00000B3A 2FA6                   MOV.L       R10,@-R15
    00000B3C 2F96                   MOV.L       R9,@-R15
    00000B3E 2F86                   MOV.L       R8,@-R15
    00000B40 4F22                   STS.L       PR,@-R15
    00000B42 7F80                   ADD         #-128,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B44 D825                   MOV.L       L1475+6,R8 ; _PrintMini
    00000B46 D926                   MOV.L       L1475+10,R9; _sprintf
    00000B48 DA26                   MOV.L       L1475+14,R10; L609
    00000B4A DB27                   MOV.L       L1475+18,R11; _ex
    00000B4C DC27                   MOV.L       L1475+22,R12; _Bdisp_AllClr_DDVRAM
      simplexC.c   566        while(menuChoice!=EXIT_OPT)
    00000B4E A01D                   BRA         L1261
    00000B50 6DF3                   MOV         R15,R13
    00000B52              L1262:                            
      simplexC.c   567        {
      simplexC.c   568            Bdisp_AllClr_DDVRAM();
    00000B52 4C0B                   JSR         @R12
    00000B54 0009                   NOP
      simplexC.c   569            sprintf(stroutBasicInfo, "Axj pMenu Vars %d.  %d exit",ex.nVariables,EXIT_OPT);
    00000B56 E200                   MOV         #0,R2
    00000B58 2F26                   MOV.L       R2,@-R15
    00000B5A 53BB                   MOV.L       @(44,R11),R3
    00000B5C 2F36                   MOV.L       R3,@-R15
    00000B5E 2FA6                   MOV.L       R10,@-R15
    00000B60 490B                   JSR         @R9
    00000B62 64D3                   MOV         R13,R4
    00000B64 7F0C                   ADD         #12,R15
      simplexC.c   570            PrintMini(0, 0, (unsigned char*)stroutBasicInfo, MINI_OVER);
    00000B66 E710                   MOV         #16,R7
    00000B68 66D3                   MOV         R13,R6
    00000B6A E500                   MOV         #0,R5
    00000B6C 480B                   JSR         @R8
    00000B6E 6453                   MOV         R5,R4
      simplexC.c   571            menuChoice = InputI(0, 7);
    00000B70 E507                   MOV         #7,R5
    00000B72 BA5C                   BSR         _InputI
    00000B74 E400                   MOV         #0,R4
      simplexC.c   572            Bdisp_PutDisp_DD();
    00000B76 D31E                   MOV.L       L1475+26,R3; _Bdisp_PutDisp_DD
    00000B78 430B                   JSR         @R3
    00000B7A 6E03                   MOV         R0,R14
      simplexC.c   573            if(menuChoice!=EXIT_OPT && menuChoice<=ex.nVariables)
    00000B7C 2EE8                   TST         R14,R14
    00000B7E 8905                   BT          L1261
    00000B80 D21C                   MOV.L       L1475+30,R2; H'0000002C+_ex
    00000B82 6322                   MOV.L       @R2,R3
    00000B84 3E37                   CMP/GT      R3,R14
    00000B86 8901                   BT          L1261
      simplexC.c   574            {
      simplexC.c   575                printAjVal(menuChoice);
    00000B88 BF41                   BSR         _printAjVal
    00000B8A 64E3                   MOV         R14,R4
    00000B8C              L1261:                            
    00000B8C 2EE8                   TST         R14,R14
    00000B8E 8BE0                   BF          L1262
      simplexC.c   576            }
      simplexC.c   577        }
      simplexC.c   578        return 0;
      simplexC.c   579    }
    00000B90 9121                   MOV.W       L1475,R1   ; H'0080
    00000B92 E000                   MOV         #0,R0
    00000B94 3F1C                   ADD         R1,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B96 4F26                   LDS.L       @R15+,PR
    00000B98 68F6                   MOV.L       @R15+,R8
    00000B9A 69F6                   MOV.L       @R15+,R9
    00000B9C 6AF6                   MOV.L       @R15+,R10
    00000B9E 6BF6                   MOV.L       @R15+,R11
    00000BA0 6CF6                   MOV.L       @R15+,R12
    00000BA2 6DF6                   MOV.L       @R15+,R13
    00000BA4 000B                   RTS
    00000BA6 6EF6                   MOV.L       @R15+,R14
      simplexC.c   580    
      simplexC.c   581    int printVariablesProblemStatement(int contsId, struct problemStatement* pS)
    00000BA8              _printVariablesProblemStatement: ; function: printVariablesProblemStatement
                                                           ; frame size=828
                                                           ; used runtime library name:
                                                           ; __stod
    00000BA8 2FE6                   MOV.L       R14,@-R15
    00000BAA 6343                   MOV         R4,R3
    00000BAC 9014                   MOV.W       L1475+2,R0 ; H'FCF8
    00000BAE 73FF                   ADD         #-1,R3
    00000BB0 2FD6                   MOV.L       R13,@-R15
    00000BB2 4308                   SHLL2       R3
    00000BB4 9E11                   MOV.W       L1475+4,R14; H'0208
      simplexC.c   582    {
      simplexC.c   583        char stroutBasicInfo[128],stroutVariable[128];
      simplexC.c   584        char *uselessSring[128];
      simplexC.c   585        int menuChoice;
      simplexC.c   586        int lengthString;
      simplexC.c   587        lengthString=0;
    00000BB6 ED00                   MOV         #0,R13
    00000BB8 2FC6                   MOV.L       R12,@-R15
    00000BBA 2FB6                   MOV.L       R11,@-R15
    00000BBC 2FA6                   MOV.L       R10,@-R15
      simplexC.c   588        menuChoice=INITIALIZE_VALUE_OPT;
    00000BBE EBFF                   MOV         #-1,R11
    00000BC0 DC07                   MOV.L       L1475+10,R12; _sprintf
    00000BC2 6A53                   MOV         R5,R10
    00000BC4 2F96                   MOV.L       R9,@-R15
    00000BC6 2F86                   MOV.L       R8,@-R15
    00000BC8 4F22                   STS.L       PR,@-R15
    00000BCA 3F0C                   ADD         R0,R15
    00000BCC D903                   MOV.L       L1475+6,R9 ; _PrintMini
    00000BCE 3EFC                   ADD         R15,R14
    00000BD0 2F42                   MOV.L       R4,@R15
      simplexC.c   589        
      simplexC.c   590        while(menuChoice!=EXIT_OPT)
    00000BD2 A08A                   BRA         L1265
    00000BD4 1F31                   MOV.L       R3,@(4,R15)
    00000BD6              L1475:                            
    00000BD6 0080                   .DATA.W     H'0080
    00000BD8 FCF8                   .DATA.W     H'FCF8
    00000BDA 0208                   .DATA.W     H'0208
    00000BDC <00000000>             .DATA.L     _PrintMini
    00000BE0 <00000000>             .DATA.L     _sprintf
    00000BE4 <00000000>             .DATA.L     L609
    00000BE8 <00000000>             .DATA.L     _ex
    00000BEC <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000BF0 <00000000>             .DATA.L     _Bdisp_PutDisp_DD




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BF4 <0000002C>             .DATA.L     H'0000002C+_ex
    00000BF8              L1266:                            
      simplexC.c   591        {
      simplexC.c   592            Bdisp_AllClr_DDVRAM();
    00000BF8 D145                   MOV.L       L1476+10,R1; _Bdisp_AllClr_DDVRAM
    00000BFA 410B                   JSR         @R1
    00000BFC 0009                   NOP
      simplexC.c   593            sprintf(stroutBasicInfo, "Constraint %d. Vars: %d, Exit %d",contsId,pS->nVariables,EXIT_OPT);
    00000BFE E200                   MOV         #0,R2
    00000C00 9481                   MOV.W       L1476,R4   ; H'0298
    00000C02 2F26                   MOV.L       R2,@-R15
    00000C04 53A7                   MOV.L       @(28,R10),R3
    00000C06 2F36                   MOV.L       R3,@-R15
    00000C08 51F2                   MOV.L       @(8,R15),R1
    00000C0A 2F16                   MOV.L       R1,@-R15
    00000C0C D341                   MOV.L       L1476+14,R3; L621
    00000C0E 2F36                   MOV.L       R3,@-R15
    00000C10 4C0B                   JSR         @R12
    00000C12 34FC                   ADD         R15,R4
      simplexC.c   594            PrintMini(0, 0, (unsigned char*)stroutBasicInfo, MINI_OVER);
    00000C14 9678                   MOV.W       L1476+2,R6 ; H'0288
    00000C16 E500                   MOV         #0,R5
    00000C18 7F10                   ADD         #16,R15
    00000C1A E710                   MOV         #16,R7
    00000C1C 36FC                   ADD         R15,R6
    00000C1E 490B                   JSR         @R9
    00000C20 6453                   MOV         R5,R4
      simplexC.c   595            menuChoice=InputI(0,7);
    00000C22 E507                   MOV         #7,R5
    00000C24 BA03                   BSR         _InputI
    00000C26 E400                   MOV         #0,R4
      simplexC.c   596            Bdisp_PutDisp_DD();
    00000C28 D33B                   MOV.L       L1476+18,R3; _Bdisp_PutDisp_DD
    00000C2A 430B                   JSR         @R3
    00000C2C 6B03                   MOV         R0,R11
      simplexC.c   597            if(menuChoice!=EXIT_OPT && menuChoice<=pS->nVariables)
    00000C2E 2BB8                   TST         R11,R11
    00000C30 895B                   BT          L1265
    00000C32 53A7                   MOV.L       @(28,R10),R3
    00000C34 3B37                   CMP/GT      R3,R11
    00000C36 8958                   BT          L1265
      simplexC.c   598            {
      simplexC.c   599                Bdisp_AllClr_DDVRAM();
    00000C38 D135                   MOV.L       L1476+10,R1; _Bdisp_AllClr_DDVRAM
    00000C3A 410B                   JSR         @R1
    00000C3C 0009                   NOP
      simplexC.c   600                lengthString += lengthConcatenate(sprintf(stroutVariable+lengthString, "Const %d. %.2f x%d",co
                         +ntsId,pS->constraints[contsId-1][menuChoice-1],menuChoice));
    00000C3E 68B3                   MOV         R11,R8
    00000C40 D236                   MOV.L       L1476+22,R2; __stod
    00000C42 78FF                   ADD         #-1,R8
    00000C44 2FB6                   MOV.L       R11,@-R15
    00000C46 4808                   SHLL2       R8
    00000C48 53F2                   MOV.L       @(8,R15),R3
    00000C4A 50A4                   MOV.L       @(16,R10),R0
    00000C4C 003E                   MOV.L       @(R0,R3),R0
    00000C4E 008E                   MOV.L       @(R0,R8),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000C50 7FF8                   ADD         #-8,R15
    00000C52 420B                   JSR         @R2
    00000C54 2FF6                   MOV.L       R15,@-R15
    00000C56 64D3                   MOV         R13,R4
    00000C58 51F3                   MOV.L       @(12,R15),R1
    00000C5A 2F16                   MOV.L       R1,@-R15
    00000C5C D230                   MOV.L       L1476+26,R2; L623
    00000C5E 2F26                   MOV.L       R2,@-R15
    00000C60 4C0B                   JSR         @R12
    00000C62 34EC                   ADD         R14,R4
    00000C64 7F14                   ADD         #20,R15
    00000C66 BDAD                   BSR         _lengthConcatenate
    00000C68 6403                   MOV         R0,R4
    00000C6A 3D0C                   ADD         R0,R13
      simplexC.c   601    
      simplexC.c   602                if(pS->idSlopeVariables[menuChoice-1])
    00000C6C 50AD                   MOV.L       @(52,R10),R0
    00000C6E 028E                   MOV.L       @(R0,R8),R2
    00000C70 2228                   TST         R2,R2
    00000C72 8908                   BT          L1268
      simplexC.c   603                {
      simplexC.c   604                    lengthString += lengthConcatenate(sprintf(stroutVariable+lengthString, " Slope"));
    00000C74 D12B                   MOV.L       L1476+30,R1; L625
    00000C76 64D3                   MOV         R13,R4
    00000C78 2F16                   MOV.L       R1,@-R15
    00000C7A 4C0B                   JSR         @R12
    00000C7C 34EC                   ADD         R14,R4
    00000C7E 7F04                   ADD         #4,R15
    00000C80 BDA0                   BSR         _lengthConcatenate
    00000C82 6403                   MOV         R0,R4
    00000C84 3D0C                   ADD         R0,R13
    00000C86              L1268:                            
      simplexC.c   605                }
      simplexC.c   606                if(pS->id2fasesVariables[menuChoice-1])
    00000C86 50AE                   MOV.L       @(56,R10),R0
    00000C88 028E                   MOV.L       @(R0,R8),R2
    00000C8A 2228                   TST         R2,R2
    00000C8C 8908                   BT          L1269
      simplexC.c   607                {
      simplexC.c   608                    lengthString += lengthConcatenate(sprintf(stroutVariable+lengthString, " Dual"));
    00000C8E 64D3                   MOV         R13,R4
    00000C90 D125                   MOV.L       L1476+34,R1; L627
    00000C92 2F16                   MOV.L       R1,@-R15
    00000C94 4C0B                   JSR         @R12
    00000C96 34EC                   ADD         R14,R4
    00000C98 7F04                   ADD         #4,R15
    00000C9A BD93                   BSR         _lengthConcatenate
    00000C9C 6403                   MOV         R0,R4
    00000C9E 3D0C                   ADD         R0,R13
    00000CA0              L1269:                            
      simplexC.c   609                }
      simplexC.c   610                if(pS->idIntegerVariables[menuChoice-1])
    00000CA0 50AC                   MOV.L       @(48,R10),R0
    00000CA2 028E                   MOV.L       @(R0,R8),R2
    00000CA4 2228                   TST         R2,R2
    00000CA6 8907                   BT          L1270
      simplexC.c   611                {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   612                    lengthString += lengthConcatenate(sprintf(stroutVariable+lengthString, " Int"));
    00000CA8 D120                   MOV.L       L1476+38,R1; L629
    00000CAA 64D3                   MOV         R13,R4
    00000CAC 2F16                   MOV.L       R1,@-R15
    00000CAE 4C0B                   JSR         @R12
    00000CB0 34EC                   ADD         R14,R4
    00000CB2 7F04                   ADD         #4,R15
    00000CB4 BD86                   BSR         _lengthConcatenate
    00000CB6 6403                   MOV         R0,R4
    00000CB8              L1270:                            
      simplexC.c   613                }
      simplexC.c   614                PrintMini(0,0,(unsigned char*) stroutVariable,MINI_OVER);
    00000CB8 E710                   MOV         #16,R7
    00000CBA 66E3                   MOV         R14,R6
    00000CBC E500                   MOV         #0,R5
    00000CBE 490B                   JSR         @R9
    00000CC0 6453                   MOV         R5,R4
      simplexC.c   615                PrintMini(0, 7, (unsigned char*)"Press any key to continue", MINI_OVER);
    00000CC2 E710                   MOV         #16,R7
    00000CC4 D61A                   MOV.L       L1476+42,R6; L591
    00000CC6 E507                   MOV         #7,R5
    00000CC8 490B                   JSR         @R9
    00000CCA E400                   MOV         #0,R4
      simplexC.c   616                string_input(0, 14, uselessSring);
    00000CCC D219                   MOV.L       L1476+46,R2; _string_input
    00000CCE 66F3                   MOV         R15,R6
    00000CD0 7608                   ADD         #8,R6
    00000CD2 E50E                   MOV         #14,R5
    00000CD4 420B                   JSR         @R2
    00000CD6 E400                   MOV         #0,R4
      simplexC.c   617                Bdisp_PutDisp_DD();
    00000CD8 D30F                   MOV.L       L1476+18,R3; _Bdisp_PutDisp_DD
    00000CDA 430B                   JSR         @R3
    00000CDC 0009                   NOP
      simplexC.c   618                memset(stroutVariable,0,128);
    00000CDE E500                   MOV         #0,R5
    00000CE0 D215                   MOV.L       L1476+50,R2; _memset
    00000CE2 9612                   MOV.W       L1476+4,R6 ; H'0080
    00000CE4 420B                   JSR         @R2
    00000CE6 64E3                   MOV         R14,R4
      simplexC.c   619                lengthString=0;
    00000CE8 ED00                   MOV         #0,R13
    00000CEA              L1265:                            
    00000CEA 2BB8                   TST         R11,R11
    00000CEC 8B84                   BF          L1266
      simplexC.c   620            }
      simplexC.c   621        }
      simplexC.c   622        return 0;
    00000CEE E000                   MOV         #0,R0
      simplexC.c   623    }
    00000CF0 910C                   MOV.W       L1476+6,R1 ; H'0308
    00000CF2 3F1C                   ADD         R1,R15
    00000CF4 4F26                   LDS.L       @R15+,PR
    00000CF6 68F6                   MOV.L       @R15+,R8
    00000CF8 69F6                   MOV.L       @R15+,R9
    00000CFA 6AF6                   MOV.L       @R15+,R10
    00000CFC 6BF6                   MOV.L       @R15+,R11




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CFE 6CF6                   MOV.L       @R15+,R12
    00000D00 6DF6                   MOV.L       @R15+,R13
    00000D02 000B                   RTS
    00000D04 6EF6                   MOV.L       @R15+,R14
    00000D06              L1476:                            
    00000D06 0298                   .DATA.W     H'0298
    00000D08 0288                   .DATA.W     H'0288
    00000D0A 0080                   .DATA.W     H'0080
    00000D0C 0308                   .DATA.W     H'0308
    00000D0E 0000                   .DATA.W     0
    00000D10 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000D14 <00000000>             .DATA.L     L621
    00000D18 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00000D1C <00000000>             .DATA.L     __stod
    00000D20 <00000000>             .DATA.L     L623
    00000D24 <00000000>             .DATA.L     L625
    00000D28 <00000000>             .DATA.L     L627
    00000D2C <00000000>             .DATA.L     L629
    00000D30 <00000000>             .DATA.L     L591
    00000D34 <00000000>             .DATA.L     _string_input
    00000D38 <00000000>             .DATA.L     _memset
      simplexC.c   624    
      simplexC.c   625    int printIne(int contsId, struct problemStatement* pS)
    00000D3C              _printIne:                       ; function: printIne
                                                           ; frame size=664
    00000D3C 4F22                   STS.L       PR,@-R15
    00000D3E 9074                   MOV.W       L1477,R0   ; H'FD78
      simplexC.c   626    {
      simplexC.c   627        char stroutBasicInfo[128];
      simplexC.c   628        char *uselessSring[128];
      simplexC.c   629        Bdisp_AllClr_DDVRAM();
    00000D40 D33C                   MOV.L       L1477+10,R3; _Bdisp_AllClr_DDVRAM
    00000D42 3F0C                   ADD         R0,R15
    00000D44 2F42                   MOV.L       R4,@R15
    00000D46 430B                   JSR         @R3
    00000D48 1F51                   MOV.L       R5,@(4,R15)
      simplexC.c   630        sprintf(stroutBasicInfo, "Constraint %d. Ine: %s",contsId,getInequalityChar( pS->inequalitySigns[conts
                         +Id-1]));
    00000D4A 50F1                   MOV.L       @(4,R15),R0
    00000D4C 64F2                   MOV.L       @R15,R4
    00000D4E 74FF                   ADD         #-1,R4
    00000D50 5006                   MOV.L       @(24,R0),R0
    00000D52 4408                   SHLL2       R4
    00000D54 BD3D                   BSR         _getInequalityChar
    00000D56 044E                   MOV.L       @(R0,R4),R4
    00000D58 2F06                   MOV.L       R0,@-R15
    00000D5A 52F1                   MOV.L       @(4,R15),R2
    00000D5C D336                   MOV.L       L1477+14,R3; L636
    00000D5E 2F26                   MOV.L       R2,@-R15
    00000D60 2F36                   MOV.L       R3,@-R15
    00000D62 9463                   MOV.W       L1477+2,R4 ; H'0214
    00000D64 D235                   MOV.L       L1477+18,R2; _sprintf
    00000D66 420B                   JSR         @R2
    00000D68 34FC                   ADD         R15,R4
      simplexC.c   631        PrintMini(0, 0, (unsigned char*)stroutBasicInfo, MINI_OVER);
    00000D6A E710                   MOV         #16,R7
    00000D6C 965E                   MOV.W       L1477+2,R6 ; H'0214




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D6E E500                   MOV         #0,R5
    00000D70 D333                   MOV.L       L1477+22,R3; _PrintMini
    00000D72 36FC                   ADD         R15,R6
    00000D74 430B                   JSR         @R3
    00000D76 6453                   MOV         R5,R4
      simplexC.c   632        PrintMini(0, 7, (unsigned char*)"Press any key to continue", MINI_OVER);
    00000D78 D632                   MOV.L       L1477+26,R6; L591
    00000D7A E507                   MOV         #7,R5
    00000D7C D230                   MOV.L       L1477+22,R2; _PrintMini
    00000D7E E710                   MOV         #16,R7
    00000D80 420B                   JSR         @R2
    00000D82 E400                   MOV         #0,R4
      simplexC.c   633        string_input(0, 14, uselessSring);
    00000D84 D330                   MOV.L       L1477+30,R3; _string_input
    00000D86 66F3                   MOV         R15,R6
    00000D88 7614                   ADD         #20,R6
    00000D8A E50E                   MOV         #14,R5
    00000D8C 430B                   JSR         @R3
    00000D8E E400                   MOV         #0,R4
      simplexC.c   634        Bdisp_PutDisp_DD();
    00000D90 D22E                   MOV.L       L1477+34,R2; _Bdisp_PutDisp_DD
    00000D92 420B                   JSR         @R2
    00000D94 0009                   NOP
      simplexC.c   635        return 0;
      simplexC.c   636    }
    00000D96 914A                   MOV.W       L1477+4,R1 ; H'0294
    00000D98 3F1C                   ADD         R1,R15
    00000D9A 4F26                   LDS.L       @R15+,PR
    00000D9C 000B                   RTS
    00000D9E E000                   MOV         #0,R0
      simplexC.c   637    
      simplexC.c   638    int printRVal(int contsId, struct problemStatement* pS)
    00000DA0              _printRVal:                      ; function: printRVal
                                                           ; frame size=668
                                                           ; used runtime library name:
                                                           ; __stod
    00000DA0 4F22                   STS.L       PR,@-R15
    00000DA2 9042                   MOV.W       L1477,R0   ; H'FD78
      simplexC.c   639    {
      simplexC.c   640        char stroutBasicInfo[128];
      simplexC.c   641        char *uselessSring[128];
      simplexC.c   642        Bdisp_AllClr_DDVRAM();
    00000DA4 D323                   MOV.L       L1477+10,R3; _Bdisp_AllClr_DDVRAM
    00000DA6 3F0C                   ADD         R0,R15
    00000DA8 2F42                   MOV.L       R4,@R15
    00000DAA 430B                   JSR         @R3
    00000DAC 1F51                   MOV.L       R5,@(4,R15)
      simplexC.c   643        sprintf(stroutBasicInfo, "Constraint %d. Rval: %.2f",contsId,pS->rightValues[contsId-1]);
    00000DAE 50F1                   MOV.L       @(4,R15),R0
    00000DB0 63F2                   MOV.L       @R15,R3
    00000DB2 73FF                   ADD         #-1,R3
    00000DB4 5005                   MOV.L       @(20,R0),R0
    00000DB6 4308                   SHLL2       R3
    00000DB8 D225                   MOV.L       L1477+38,R2; __stod
    00000DBA 003E                   MOV.L       @(R0,R3),R0
    00000DBC 7FF8                   ADD         #-8,R15
    00000DBE 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DC0 2FF6                   MOV.L       R15,@-R15
    00000DC2 53F2                   MOV.L       @(8,R15),R3
    00000DC4 D223                   MOV.L       L1477+42,R2; L643
    00000DC6 2F36                   MOV.L       R3,@-R15
    00000DC8 2F26                   MOV.L       R2,@-R15
    00000DCA 9431                   MOV.W       L1477+6,R4 ; H'0218
    00000DCC D31B                   MOV.L       L1477+18,R3; _sprintf
    00000DCE 430B                   JSR         @R3
    00000DD0 34FC                   ADD         R15,R4
      simplexC.c   644        PrintMini(0, 0, (unsigned char*)stroutBasicInfo, MINI_OVER);
    00000DD2 E710                   MOV         #16,R7
    00000DD4 962C                   MOV.W       L1477+6,R6 ; H'0218
    00000DD6 E500                   MOV         #0,R5
    00000DD8 D219                   MOV.L       L1477+22,R2; _PrintMini
    00000DDA 36FC                   ADD         R15,R6
    00000DDC 420B                   JSR         @R2
    00000DDE 6453                   MOV         R5,R4
      simplexC.c   645        PrintMini(0, 7, (unsigned char*)"Press any key to continue", MINI_OVER);
    00000DE0 D618                   MOV.L       L1477+26,R6; L591
    00000DE2 E507                   MOV         #7,R5
    00000DE4 D316                   MOV.L       L1477+22,R3; _PrintMini
    00000DE6 E710                   MOV         #16,R7
    00000DE8 430B                   JSR         @R3
    00000DEA E400                   MOV         #0,R4
      simplexC.c   646        string_input(0, 14, uselessSring);
    00000DEC D216                   MOV.L       L1477+30,R2; _string_input
    00000DEE 66F3                   MOV         R15,R6
    00000DF0 7618                   ADD         #24,R6
    00000DF2 E50E                   MOV         #14,R5
    00000DF4 420B                   JSR         @R2
    00000DF6 E400                   MOV         #0,R4
      simplexC.c   647        Bdisp_PutDisp_DD();
    00000DF8 D314                   MOV.L       L1477+34,R3; _Bdisp_PutDisp_DD
    00000DFA 430B                   JSR         @R3
    00000DFC 0009                   NOP
      simplexC.c   648        return 0;
      simplexC.c   649    }
    00000DFE 9118                   MOV.W       L1477+8,R1 ; H'0298
    00000E00 3F1C                   ADD         R1,R15
    00000E02 4F26                   LDS.L       @R15+,PR
    00000E04 000B                   RTS
    00000E06 E000                   MOV         #0,R0
      simplexC.c   650    
      simplexC.c   651    
      simplexC.c   652    int printInfoConstraint(int contsId, struct problemStatement* pS)
    00000E08              _printInfoConstraint:            ; function: printInfoConstraint
                                                           ; frame size=172
    00000E08 2FE6                   MOV.L       R14,@-R15
    00000E0A 2FD6                   MOV.L       R13,@-R15
    00000E0C 2FC6                   MOV.L       R12,@-R15
      simplexC.c   653    {
      simplexC.c   654        char stroutBasicInfo[128];
      simplexC.c   655        int menuChoice;
      simplexC.c   656        menuChoice=INITIALIZE_VALUE_OPT;
    00000E0E EDFF                   MOV         #-1,R13
    00000E10 DE0B                   MOV.L       L1477+22,R14; _PrintMini
    00000E12 6C43                   MOV         R4,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E14 2FB6                   MOV.L       R11,@-R15
    00000E16 6B53                   MOV         R5,R11
    00000E18 2FA6                   MOV.L       R10,@-R15
    00000E1A 2F96                   MOV.L       R9,@-R15
    00000E1C 2F86                   MOV.L       R8,@-R15
    00000E1E 4F22                   STS.L       PR,@-R15
    00000E20 D80D                   MOV.L       L1477+46,R8; L651
    00000E22 7F80                   ADD         #-128,R15
    00000E24 D905                   MOV.L       L1477+18,R9; _sprintf
      simplexC.c   657        while(menuChoice!=EXIT_OPT)
    00000E26 A058                   BRA         L1274
    00000E28 6AF3                   MOV         R15,R10
    00000E2A              L1477:                            
    00000E2A FD78                   .DATA.W     H'FD78
    00000E2C 0214                   .DATA.W     H'0214
    00000E2E 0294                   .DATA.W     H'0294
    00000E30 0218                   .DATA.W     H'0218
    00000E32 0298                   .DATA.W     H'0298
    00000E34 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000E38 <00000000>             .DATA.L     L636
    00000E3C <00000000>             .DATA.L     _sprintf
    00000E40 <00000000>             .DATA.L     _PrintMini
    00000E44 <00000000>             .DATA.L     L591
    00000E48 <00000000>             .DATA.L     _string_input
    00000E4C <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00000E50 <00000000>             .DATA.L     __stod
    00000E54 <00000000>             .DATA.L     L643
    00000E58 <00000000>             .DATA.L     L651
    00000E5C              L1275:                            
      simplexC.c   658        {
      simplexC.c   659            Bdisp_AllClr_DDVRAM();
    00000E5C D22F                   MOV.L       L1478+4,R2 ; _Bdisp_AllClr_DDVRAM
    00000E5E 420B                   JSR         @R2
    00000E60 0009                   NOP
      simplexC.c   660            sprintf(stroutBasicInfo, "Constraint %d printMenu. %d exit",contsId,EXIT_OPT);
    00000E62 E300                   MOV         #0,R3
    00000E64 2F36                   MOV.L       R3,@-R15
    00000E66 2FC6                   MOV.L       R12,@-R15
    00000E68 2F86                   MOV.L       R8,@-R15
    00000E6A 490B                   JSR         @R9
    00000E6C 64A3                   MOV         R10,R4
    00000E6E 7F0C                   ADD         #12,R15
      simplexC.c   661            PrintMini(0, 0, (unsigned char*)stroutBasicInfo, MINI_OVER);
    00000E70 E710                   MOV         #16,R7
    00000E72 66A3                   MOV         R10,R6
    00000E74 E500                   MOV         #0,R5
    00000E76 4E0B                   JSR         @R14
    00000E78 6453                   MOV         R5,R4
      simplexC.c   662            PrintMini(0, 7, (unsigned char*)"1 Pinfo var", MINI_OVER);
    00000E7A E710                   MOV         #16,R7
    00000E7C D628                   MOV.L       L1478+8,R6 ; L652
    00000E7E E507                   MOV         #7,R5
    00000E80 4E0B                   JSR         @R14
    00000E82 E400                   MOV         #0,R4
      simplexC.c   663            PrintMini(0, 14, (unsigned char*)"2 Pinfo ine", MINI_OVER);
    00000E84 D627                   MOV.L       L1478+12,R6; L653
    00000E86 E50E                   MOV         #14,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E88 E710                   MOV         #16,R7
    00000E8A 4E0B                   JSR         @R14
    00000E8C E400                   MOV         #0,R4
      simplexC.c   664            PrintMini(0, 21, (unsigned char*)"3 Pinfo RVal", MINI_OVER);
    00000E8E E710                   MOV         #16,R7
    00000E90 D625                   MOV.L       L1478+16,R6; L654
    00000E92 E515                   MOV         #21,R5
    00000E94 4E0B                   JSR         @R14
    00000E96 E400                   MOV         #0,R4
      simplexC.c   665            menuChoice = InputI(0, 28);
    00000E98 E51C                   MOV         #28,R5
    00000E9A B8C8                   BSR         _InputI
    00000E9C E400                   MOV         #0,R4
      simplexC.c   666            Bdisp_PutDisp_DD();
    00000E9E D323                   MOV.L       L1478+20,R3; _Bdisp_PutDisp_DD
    00000EA0 430B                   JSR         @R3
    00000EA2 6D03                   MOV         R0,R13
      simplexC.c   667            if(menuChoice!=EXIT_OPT && menuChoice<=3)
    00000EA4 2DD8                   TST         R13,R13
    00000EA6 8918                   BT          L1274
    00000EA8 E303                   MOV         #3,R3
    00000EAA 3D37                   CMP/GT      R3,R13
    00000EAC 8915                   BT          L1274
      simplexC.c   668            {
      simplexC.c   669                switch (menuChoice)
    00000EAE 60D3                   MOV         R13,R0
    00000EB0 8801                   CMP/EQ      #1,R0
    00000EB2 8905                   BT          L1062
    00000EB4 8802                   CMP/EQ      #2,R0
    00000EB6 8908                   BT          L1063
    00000EB8 8803                   CMP/EQ      #3,R0
    00000EBA 890B                   BT          L1064
    00000EBC A00D                   BRA         L1274
    00000EBE 0009                   NOP
    00000EC0              L1062:                           ; case label 
      simplexC.c   670                {
      simplexC.c   671                case 1: printVariablesProblemStatement(contsId,pS);break;
    00000EC0 65B3                   MOV         R11,R5
    00000EC2 BE71                   BSR         _printVariablesProblemStatement
    00000EC4 64C3                   MOV         R12,R4
    00000EC6 A008                   BRA         L1274
    00000EC8 0009                   NOP
    00000ECA              L1063:                           ; case label 
      simplexC.c   672                case 2: printIne(contsId,pS);break;
    00000ECA 65B3                   MOV         R11,R5
    00000ECC BF36                   BSR         _printIne
    00000ECE 64C3                   MOV         R12,R4
    00000ED0 A003                   BRA         L1274
    00000ED2 0009                   NOP
    00000ED4              L1064:                           ; case label 
      simplexC.c   673                case 3: printRVal(contsId,pS);break;
    00000ED4 65B3                   MOV         R11,R5
    00000ED6 BF63                   BSR         _printRVal
    00000ED8 64C3                   MOV         R12,R4
      simplexC.c   674                default: break;
    00000EDA              L1274:                            
    00000EDA 2DD8                   TST         R13,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EDC 8BBE                   BF          L1275
      simplexC.c   675                }
      simplexC.c   676            }
      simplexC.c   677        }
      simplexC.c   678        return 0;
    00000EDE E000                   MOV         #0,R0
      simplexC.c   679    }
    00000EE0 911A                   MOV.W       L1478,R1   ; H'0080
    00000EE2 3F1C                   ADD         R1,R15
    00000EE4 4F26                   LDS.L       @R15+,PR
    00000EE6 68F6                   MOV.L       @R15+,R8
    00000EE8 69F6                   MOV.L       @R15+,R9
    00000EEA 6AF6                   MOV.L       @R15+,R10
    00000EEC 6BF6                   MOV.L       @R15+,R11
    00000EEE 6CF6                   MOV.L       @R15+,R12
    00000EF0 6DF6                   MOV.L       @R15+,R13
    00000EF2 000B                   RTS
    00000EF4 6EF6                   MOV.L       @R15+,R14
      simplexC.c   680    
      simplexC.c   681    int printAllConstraintsMenu(struct problemStatement* pS)
    00000EF6              _printAllConstraintsMenu:        ; function: printAllConstraintsMenu
                                                           ; frame size=172
    00000EF6 2FE6                   MOV.L       R14,@-R15
    00000EF8 2FD6                   MOV.L       R13,@-R15
      simplexC.c   682    {
      simplexC.c   683        char stroutBasicInfo[128];
      simplexC.c   684        int menuChoice;
      simplexC.c   685        menuChoice=INITIALIZE_VALUE_OPT;
    00000EFA EEFF                   MOV         #-1,R14
    00000EFC 2FC6                   MOV.L       R12,@-R15
    00000EFE 6D43                   MOV         R4,R13
    00000F00 2FB6                   MOV.L       R11,@-R15
    00000F02 2FA6                   MOV.L       R10,@-R15
    00000F04 2F96                   MOV.L       R9,@-R15
    00000F06 2F86                   MOV.L       R8,@-R15
    00000F08 4F22                   STS.L       PR,@-R15
    00000F0A 7F80                   ADD         #-128,R15
    00000F0C D808                   MOV.L       L1478+24,R8; _PrintMini
    00000F0E D909                   MOV.L       L1478+28,R9; _sprintf
    00000F10 DA09                   MOV.L       L1478+32,R10; L663
    00000F12 DB02                   MOV.L       L1478+4,R11; _Bdisp_AllClr_DDVRAM
      simplexC.c   686        while(menuChoice!=EXIT_OPT)
    00000F14 A02F                   BRA         L1279
    00000F16 6CF3                   MOV         R15,R12
    00000F18              L1478:                            
    00000F18 0080                   .DATA.W     H'0080
    00000F1A 0000                   .DATA.W     0
    00000F1C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000F20 <00000000>             .DATA.L     L652
    00000F24 <00000000>             .DATA.L     L653
    00000F28 <00000000>             .DATA.L     L654
    00000F2C <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00000F30 <00000000>             .DATA.L     _PrintMini
    00000F34 <00000000>             .DATA.L     _sprintf
    00000F38 <00000000>             .DATA.L     L663
    00000F3C              L1280:                            
      simplexC.c   687        {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   688            Bdisp_AllClr_DDVRAM();
    00000F3C 4B0B                   JSR         @R11
    00000F3E 0009                   NOP
      simplexC.c   689            sprintf(stroutBasicInfo, "pMenu Consts %d.  %d exit",pS->nConstraints,EXIT_OPT);
    00000F40 E200                   MOV         #0,R2
    00000F42 2F26                   MOV.L       R2,@-R15
    00000F44 53DB                   MOV.L       @(44,R13),R3
    00000F46 2F36                   MOV.L       R3,@-R15
    00000F48 2FA6                   MOV.L       R10,@-R15
    00000F4A 490B                   JSR         @R9
    00000F4C 64C3                   MOV         R12,R4
    00000F4E 7F0C                   ADD         #12,R15
      simplexC.c   690            PrintMini(0, 0, (unsigned char*)stroutBasicInfo, MINI_OVER);
    00000F50 E710                   MOV         #16,R7
    00000F52 66C3                   MOV         R12,R6
    00000F54 E500                   MOV         #0,R5
    00000F56 480B                   JSR         @R8
    00000F58 6453                   MOV         R5,R4
      simplexC.c   691            menuChoice = InputI(0, 7);
    00000F5A E507                   MOV         #7,R5
    00000F5C B867                   BSR         _InputI
    00000F5E E400                   MOV         #0,R4
      simplexC.c   692            Bdisp_PutDisp_DD();
    00000F60 D32B                   MOV.L       L1479+10,R3; _Bdisp_PutDisp_DD
    00000F62 430B                   JSR         @R3
    00000F64 6E03                   MOV         R0,R14
      simplexC.c   693            if(menuChoice!=EXIT_OPT && menuChoice<=pS->nConstraints)
    00000F66 2EE8                   TST         R14,R14
    00000F68 8905                   BT          L1279
    00000F6A 53DB                   MOV.L       @(44,R13),R3
    00000F6C 3E37                   CMP/GT      R3,R14
    00000F6E 8902                   BT          L1279
      simplexC.c   694            {
      simplexC.c   695                printInfoConstraint(menuChoice,pS);
    00000F70 65D3                   MOV         R13,R5
    00000F72 BF49                   BSR         _printInfoConstraint
    00000F74 64E3                   MOV         R14,R4
    00000F76              L1279:                            
    00000F76 2EE8                   TST         R14,R14
    00000F78 8BE0                   BF          L1280
      simplexC.c   696            }
      simplexC.c   697        }
      simplexC.c   698        return 0;
    00000F7A E000                   MOV         #0,R0
      simplexC.c   699    }
    00000F7C 9143                   MOV.W       L1479,R1   ; H'0080
    00000F7E 3F1C                   ADD         R1,R15
    00000F80 4F26                   LDS.L       @R15+,PR
    00000F82 68F6                   MOV.L       @R15+,R8
    00000F84 69F6                   MOV.L       @R15+,R9
    00000F86 6AF6                   MOV.L       @R15+,R10
    00000F88 6BF6                   MOV.L       @R15+,R11
    00000F8A 6CF6                   MOV.L       @R15+,R12
    00000F8C 6DF6                   MOV.L       @R15+,R13
    00000F8E 000B                   RTS
    00000F90 6EF6                   MOV.L       @R15+,R14
      simplexC.c   700    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   701    int printStatementMenu(struct problemStatement* pS)
    00000F92              _printStatementMenu:             ; function: printStatementMenu
                                                           ; frame size=440
      simplexC.c   702    {
      simplexC.c   703        char stroutTop[128],stroutBasicInfo[128],stroutObjInfo[128];
      simplexC.c   704        int menuChoice;
      simplexC.c   705        menuChoice=INITIALIZE_VALUE_OPT;
      simplexC.c   706        sprintf(stroutTop,"Problem statement %s, printMenu. Exit %d",(pS->modelType==TYPE_INPUT) ? "INPUT" :"S
                         +OLVE", EXIT_OPT);
    00000F92 E300                   MOV         #0,R3
    00000F94 2FE6                   MOV.L       R14,@-R15
    00000F96 6E43                   MOV         R4,R14
    00000F98 2FD6                   MOV.L       R13,@-R15
    00000F9A 2FC6                   MOV.L       R12,@-R15
    00000F9C 2FB6                   MOV.L       R11,@-R15
    00000F9E 2FA6                   MOV.L       R10,@-R15
    00000FA0 2F96                   MOV.L       R9,@-R15
    00000FA2 2F86                   MOV.L       R8,@-R15
    00000FA4 4F22                   STS.L       PR,@-R15
    00000FA6 902F                   MOV.W       L1479+2,R0 ; H'FE80
    00000FA8 DD1A                   MOV.L       L1479+14,R13; _sprintf
    00000FAA 3F0C                   ADD         R0,R15
    00000FAC 9A2D                   MOV.W       L1479+4,R10; H'0100
    00000FAE 3AFC                   ADD         R15,R10
    00000FB0 2F36                   MOV.L       R3,@-R15
    00000FB2 50E1                   MOV.L       @(4,R14),R0
    00000FB4 8801                   CMP/EQ      #1,R0
    00000FB6 8F03                   BF/S        L1283
    00000FB8 ECFF                   MOV         #-1,R12
    00000FBA D117                   MOV.L       L1479+18,R1; L578
    00000FBC A002                   BRA         L1284
    00000FBE 2F16                   MOV.L       R1,@-R15
    00000FC0              L1283:                            
    00000FC0 D216                   MOV.L       L1479+22,R2; L579
    00000FC2 2F26                   MOV.L       R2,@-R15
    00000FC4              L1284:                            
    00000FC4 D116                   MOV.L       L1479+26,R1; L672
    00000FC6 2F16                   MOV.L       R1,@-R15
    00000FC8 4D0B                   JSR         @R13
    00000FCA 64A3                   MOV         R10,R4
      simplexC.c   707        sprintf(stroutBasicInfo, "NConstraints: %d, NVariables: %d", pS->nConstraints, pS->nVariables);
    00000FCC 991E                   MOV.W       L1479+6,R9 ; H'008C
    00000FCE 39FC                   ADD         R15,R9
    00000FD0 53E7                   MOV.L       @(28,R14),R3
    00000FD2 2F36                   MOV.L       R3,@-R15
    00000FD4 52EB                   MOV.L       @(44,R14),R2
    00000FD6 2F26                   MOV.L       R2,@-R15
    00000FD8 D312                   MOV.L       L1479+30,R3; L580
    00000FDA 2F36                   MOV.L       R3,@-R15
    00000FDC 4D0B                   JSR         @R13
    00000FDE 6493                   MOV         R9,R4
    00000FE0 7F18                   ADD         #24,R15
      simplexC.c   708    
      simplexC.c   709        if(pS->modelType==TYPE_SOLVE && pS->is2fasesNeeded)
    00000FE2 50E1                   MOV.L       @(4,R14),R0
    00000FE4 8802                   CMP/EQ      #2,R0
    00000FE6 8F06                   BF/S        L1285




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FE8 6BF3                   MOV         R15,R11
    00000FEA 53E2                   MOV.L       @(8,R14),R3
    00000FEC 2338                   TST         R3,R3
    00000FEE 8902                   BT          L1285
      simplexC.c   710        {
      simplexC.c   711            sprintf(stroutObjInfo,"2 Pinfo obj func. 3 Pinfo 2fases");
    00000FF0 D30D                   MOV.L       L1479+34,R3; L674
    00000FF2 A001                   BRA         L1464
    00000FF4 0009                   NOP
    00000FF6              L1285:                            
      simplexC.c   712        }else
      simplexC.c   713        {
      simplexC.c   714            sprintf(stroutObjInfo,"2 Pinfo obj func.");
    00000FF6 D30D                   MOV.L       L1479+38,R3; L676
    00000FF8              L1464:                            
    00000FF8 2F36                   MOV.L       R3,@-R15
    00000FFA 4D0B                   JSR         @R13
    00000FFC 64B3                   MOV         R11,R4
    00000FFE D80C                   MOV.L       L1479+42,R8; _Bdisp_AllClr_DDVRAM
    00001000 DD0C                   MOV.L       L1479+46,R13; _PrintMini
      simplexC.c   715        }
      simplexC.c   716        
      simplexC.c   717        while(menuChoice!=EXIT_OPT)
    00001002 A05F                   BRA         L1287
    00001004 7F04                   ADD         #4,R15
    00001006              L1479:                            
    00001006 0080                   .DATA.W     H'0080
    00001008 FE80                   .DATA.W     H'FE80
    0000100A 0100                   .DATA.W     H'0100
    0000100C 008C                   .DATA.W     H'008C
    0000100E 0000                   .DATA.W     0
    00001010 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00001014 <00000000>             .DATA.L     _sprintf
    00001018 <00000000>             .DATA.L     L578
    0000101C <00000000>             .DATA.L     L579
    00001020 <00000000>             .DATA.L     L672
    00001024 <00000000>             .DATA.L     L580
    00001028 <00000000>             .DATA.L     L674
    0000102C <00000000>             .DATA.L     L676
    00001030 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001034 <00000000>             .DATA.L     _PrintMini
    00001038              L1288:                            
      simplexC.c   718        {
      simplexC.c   719            Bdisp_AllClr_DDVRAM();
    00001038 480B                   JSR         @R8
    0000103A 0009                   NOP
      simplexC.c   720            
      simplexC.c   721            PrintMini(0,0,  (unsigned char *)stroutTop, MINI_OVER);
    0000103C E710                   MOV         #16,R7
    0000103E 66A3                   MOV         R10,R6
    00001040 E500                   MOV         #0,R5
    00001042 4D0B                   JSR         @R13
    00001044 6453                   MOV         R5,R4
      simplexC.c   722            PrintMini(0,7,  (unsigned char *)stroutBasicInfo, MINI_OVER);
    00001046 E710                   MOV         #16,R7
    00001048 6693                   MOV         R9,R6
    0000104A E507                   MOV         #7,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000104C 4D0B                   JSR         @R13
    0000104E E400                   MOV         #0,R4
      simplexC.c   723            PrintMini(0, 14, (unsigned char*)"1 Pinfo constraint", MINI_OVER);
    00001050 D630                   MOV.L       L1480+8,R6 ; L678
    00001052 E50E                   MOV         #14,R5
    00001054 E710                   MOV         #16,R7
    00001056 4D0B                   JSR         @R13
    00001058 E400                   MOV         #0,R4
      simplexC.c   724            PrintMini(0, 21, (unsigned char*)stroutObjInfo, MINI_OVER);
    0000105A E710                   MOV         #16,R7
    0000105C 66B3                   MOV         R11,R6
    0000105E E515                   MOV         #21,R5
    00001060 4D0B                   JSR         @R13
    00001062 E400                   MOV         #0,R4
      simplexC.c   725            if(pS->modelType==TYPE_SOLVE)
    00001064 50E1                   MOV.L       @(4,R14),R0
    00001066 8802                   CMP/EQ      #2,R0
    00001068 8B04                   BF          L1289
      simplexC.c   726            {
      simplexC.c   727                PrintMini(0, 28, (unsigned char*)"4 Pinfo aj vec", MINI_OVER);
    0000106A E710                   MOV         #16,R7
    0000106C D62A                   MOV.L       L1480+12,R6; L680
    0000106E E51C                   MOV         #28,R5
    00001070 4D0B                   JSR         @R13
    00001072 E400                   MOV         #0,R4
    00001074              L1289:                            
      simplexC.c   728            }
      simplexC.c   729            menuChoice = InputI(0, 35);
    00001074 D229                   MOV.L       L1480+16,R2; _InputI
    00001076 E523                   MOV         #35,R5
    00001078 420B                   JSR         @R2
    0000107A E400                   MOV         #0,R4
      simplexC.c   730            Bdisp_PutDisp_DD();
    0000107C D328                   MOV.L       L1480+20,R3; _Bdisp_PutDisp_DD
    0000107E 430B                   JSR         @R3
    00001080 6C03                   MOV         R0,R12
      simplexC.c   731            switch (menuChoice)
    00001082 60C3                   MOV         R12,R0
    00001084 8801                   CMP/EQ      #1,R0
    00001086 8907                   BT          L1072
    00001088 8802                   CMP/EQ      #2,R0
    0000108A 8909                   BT          L1073
    0000108C 8803                   CMP/EQ      #3,R0
    0000108E 890C                   BT          L1074
    00001090 8804                   CMP/EQ      #4,R0
    00001092 8912                   BT          L1075
    00001094 A016                   BRA         L1287
    00001096 0009                   NOP
    00001098              L1072:                           ; case label 
      simplexC.c   732            {
      simplexC.c   733            case 1: printAllConstraintsMenu(pS);break;
    00001098 BF2D                   BSR         _printAllConstraintsMenu
    0000109A 64E3                   MOV         R14,R4
    0000109C A012                   BRA         L1287
    0000109E 0009                   NOP
    000010A0              L1073:                           ; case label 
      simplexC.c   734            case 2: printObjFunc(pS,TYPE_INPUT);break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000010A0 E501                   MOV         #1,R5
    000010A2 BBD7                   BSR         _printObjFunc
    000010A4 64E3                   MOV         R14,R4
    000010A6 A00D                   BRA         L1287
    000010A8 0009                   NOP
    000010AA              L1074:                           ; case label 
      simplexC.c   735            case 3: if(pS->modelType==TYPE_SOLVE){printObjFunc(pS,TYPE_SOLVE);};break;
    000010AA 50E1                   MOV.L       @(4,R14),R0
    000010AC 8802                   CMP/EQ      #2,R0
    000010AE 8B09                   BF          L1287
    000010B0 E502                   MOV         #2,R5
    000010B2 BBCF                   BSR         _printObjFunc
    000010B4 64E3                   MOV         R14,R4
    000010B6 A005                   BRA         L1287
    000010B8 0009                   NOP
    000010BA              L1075:                           ; case label 
      simplexC.c   736            case 4: if(pS->modelType==TYPE_SOLVE){printAjVec();};break;
    000010BA 50E1                   MOV.L       @(4,R14),R0
    000010BC 8802                   CMP/EQ      #2,R0
    000010BE 8B01                   BF          L1287
    000010C0 BD36                   BSR         _printAjVec
    000010C2 0009                   NOP
      simplexC.c   737            default: break;
    000010C4              L1287:                            
    000010C4 2CC8                   TST         R12,R12
    000010C6 8BB7                   BF          L1288
      simplexC.c   738            }
      simplexC.c   739        }
      simplexC.c   740        return 0;
      simplexC.c   741    }
    000010C8 9120                   MOV.W       L1480,R1   ; H'0180
    000010CA E000                   MOV         #0,R0
    000010CC 3F1C                   ADD         R1,R15
    000010CE 4F26                   LDS.L       @R15+,PR
    000010D0 68F6                   MOV.L       @R15+,R8
    000010D2 69F6                   MOV.L       @R15+,R9
    000010D4 6AF6                   MOV.L       @R15+,R10
    000010D6 6BF6                   MOV.L       @R15+,R11
    000010D8 6CF6                   MOV.L       @R15+,R12
    000010DA 6DF6                   MOV.L       @R15+,R13
    000010DC 000B                   RTS
    000010DE 6EF6                   MOV.L       @R15+,R14
      simplexC.c   742    
      simplexC.c   743    int printCtVecByIt(int itId)
    000010E0              _printCtVecByIt:                 ; function: printCtVecByIt
                                                           ; frame size=820
                                                           ; used runtime library name:
                                                           ; __stod
    000010E0 2FE6                   MOV.L       R14,@-R15
      simplexC.c   744    {
      simplexC.c   745        char stroutBasicInfo[128],stroutBasicInfo2[128];
      simplexC.c   746        int menuChoice;
      simplexC.c   747        char *uselessSring[128];
      simplexC.c   748        menuChoice=INITIALIZE_VALUE_OPT;
    000010E2 EEFF                   MOV         #-1,R14
    000010E4 2FD6                   MOV.L       R13,@-R15
    000010E6 2FC6                   MOV.L       R12,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000010E8 2FB6                   MOV.L       R11,@-R15
    000010EA 6B43                   MOV         R4,R11
    000010EC 9C11                   MOV.W       L1480+6,R12; H'0204
    000010EE 4B08                   SHLL2       R11
    000010F0 DD0E                   MOV.L       L1480+32,R13; _PrintMini
    000010F2 2FA6                   MOV.L       R10,@-R15
    000010F4 2F96                   MOV.L       R9,@-R15
    000010F6 2F86                   MOV.L       R8,@-R15
    000010F8 4F22                   STS.L       PR,@-R15
    000010FA 9008                   MOV.W       L1480+2,R0 ; H'FCFC
    000010FC D809                   MOV.L       L1480+24,R8; _ex
    000010FE 3F0C                   ADD         R0,R15
    00001100 D909                   MOV.L       L1480+28,R9; _sprintf
    00001102 2F42                   MOV.L       R4,@R15
    00001104 9A04                   MOV.W       L1480+4,R10; H'0284
    00001106 3AFC                   ADD         R15,R10
      simplexC.c   749        while(menuChoice!=EXIT_OPT)
    00001108 A05F                   BRA         L1294
    0000110A 3CFC                   ADD         R15,R12
    0000110C              L1480:                            
    0000110C 0180                   .DATA.W     H'0180
    0000110E FCFC                   .DATA.W     H'FCFC
    00001110 0284                   .DATA.W     H'0284
    00001112 0204                   .DATA.W     H'0204
    00001114 <00000000>             .DATA.L     L678
    00001118 <00000000>             .DATA.L     L680
    0000111C <00000000>             .DATA.L     _InputI
    00001120 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00001124 <00000000>             .DATA.L     _ex
    00001128 <00000000>             .DATA.L     _sprintf
    0000112C <00000000>             .DATA.L     _PrintMini
    00001130              L1295:                            
      simplexC.c   750        {
      simplexC.c   751            Bdisp_AllClr_DDVRAM();
    00001130 D23A                   MOV.L       L1481+10,R2; _Bdisp_AllClr_DDVRAM
    00001132 420B                   JSR         @R2
    00001134 0009                   NOP
      simplexC.c   752            sprintf(stroutBasicInfo, "Ct itId %d. S: %d.  %d exit",itId, ex.nodes.its[itId]->BinvSize,EXIT_OPT
                         +);
    00001136 E300                   MOV         #0,R3
    00001138 2F36                   MOV.L       R3,@-R15
    0000113A 5085                   MOV.L       @(20,R8),R0
    0000113C 02BE                   MOV.L       @(R0,R11),R2
    0000113E 5129                   MOV.L       @(36,R2),R1
    00001140 D237                   MOV.L       L1481+14,R2; L692
    00001142 2F16                   MOV.L       R1,@-R15
    00001144 50F2                   MOV.L       @(8,R15),R0
    00001146 2F06                   MOV.L       R0,@-R15
    00001148 2F26                   MOV.L       R2,@-R15
    0000114A 490B                   JSR         @R9
    0000114C 64A3                   MOV         R10,R4
    0000114E 7F10                   ADD         #16,R15
      simplexC.c   753            PrintMini(0, 0, (unsigned char*)stroutBasicInfo, MINI_OVER);
    00001150 E710                   MOV         #16,R7
    00001152 66A3                   MOV         R10,R6
    00001154 E500                   MOV         #0,R5
    00001156 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001158 6453                   MOV         R5,R4
      simplexC.c   754            menuChoice = InputI(0, 7);
    0000115A E507                   MOV         #7,R5
    0000115C D331                   MOV.L       L1481+18,R3; _InputI
    0000115E 430B                   JSR         @R3
    00001160 E400                   MOV         #0,R4
      simplexC.c   755            Bdisp_PutDisp_DD();
    00001162 D231                   MOV.L       L1481+22,R2; _Bdisp_PutDisp_DD
    00001164 420B                   JSR         @R2
    00001166 6E03                   MOV         R0,R14
      simplexC.c   756            if(menuChoice!=EXIT_OPT && menuChoice<= ex.nodes.its[itId]->BinvSize)
    00001168 2EE8                   TST         R14,R14
    0000116A 8929                   BT          L1296
    0000116C D22F                   MOV.L       L1481+26,R2; H'00000014+_ex
    0000116E 6022                   MOV.L       @R2,R0
    00001170 03BE                   MOV.L       @(R0,R11),R3
    00001172 5139                   MOV.L       @(36,R3),R1
    00001174 3E17                   CMP/GT      R1,R14
    00001176 8923                   BT          L1296
      simplexC.c   757            {
      simplexC.c   758                sprintf(stroutBasicInfo2, "Pos %d: %.2f",menuChoice,ex.nodes.its[itId]->ct[menuChoice-1]);
    00001178 5085                   MOV.L       @(20,R8),R0
    0000117A 63E3                   MOV         R14,R3
    0000117C D22C                   MOV.L       L1481+30,R2; __stod
    0000117E 73FF                   ADD         #-1,R3
    00001180 00BE                   MOV.L       @(R0,R11),R0
    00001182 4308                   SHLL2       R3
    00001184 500A                   MOV.L       @(40,R0),R0
    00001186 003E                   MOV.L       @(R0,R3),R0
    00001188 7FF8                   ADD         #-8,R15
    0000118A 420B                   JSR         @R2
    0000118C 2FF6                   MOV.L       R15,@-R15
    0000118E 2FE6                   MOV.L       R14,@-R15
    00001190 D328                   MOV.L       L1481+34,R3; L694
    00001192 2F36                   MOV.L       R3,@-R15
    00001194 490B                   JSR         @R9
    00001196 64C3                   MOV         R12,R4
    00001198 7F10                   ADD         #16,R15
      simplexC.c   759                PrintMini(0,14,(unsigned char*) stroutBasicInfo2,MINI_OVER);
    0000119A E710                   MOV         #16,R7
    0000119C 66C3                   MOV         R12,R6
    0000119E E50E                   MOV         #14,R5
    000011A0 4D0B                   JSR         @R13
    000011A2 E400                   MOV         #0,R4
      simplexC.c   760                PrintMini(0, 21, (unsigned char*)"Press any key to continue", MINI_OVER);
    000011A4 D624                   MOV.L       L1481+38,R6; L591
    000011A6 E515                   MOV         #21,R5
    000011A8 E710                   MOV         #16,R7
    000011AA 4D0B                   JSR         @R13
    000011AC E400                   MOV         #0,R4
      simplexC.c   761                string_input(0, 28, uselessSring);
    000011AE 66F3                   MOV         R15,R6
    000011B0 D222                   MOV.L       L1481+42,R2; _string_input
    000011B2 E51C                   MOV         #28,R5
    000011B4 7604                   ADD         #4,R6
    000011B6 420B                   JSR         @R2
    000011B8 E400                   MOV         #0,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   762                Bdisp_PutDisp_DD();
    000011BA D31B                   MOV.L       L1481+22,R3; _Bdisp_PutDisp_DD
    000011BC 430B                   JSR         @R3
    000011BE 0009                   NOP
    000011C0              L1296:                            
      simplexC.c   763            }
      simplexC.c   764            memset(stroutBasicInfo2,0,128);
    000011C0 9627                   MOV.W       L1481,R6   ; H'0080
    000011C2 E500                   MOV         #0,R5
    000011C4 D21E                   MOV.L       L1481+46,R2; _memset
    000011C6 420B                   JSR         @R2
    000011C8 64C3                   MOV         R12,R4
    000011CA              L1294:                            
    000011CA 2EE8                   TST         R14,R14
    000011CC 8BB0                   BF          L1295
      simplexC.c   765        }
      simplexC.c   766        return 0;
    000011CE E000                   MOV         #0,R0
      simplexC.c   767    }
    000011D0 9120                   MOV.W       L1481+2,R1 ; H'0304
    000011D2 3F1C                   ADD         R1,R15
    000011D4 4F26                   LDS.L       @R15+,PR
    000011D6 68F6                   MOV.L       @R15+,R8
    000011D8 69F6                   MOV.L       @R15+,R9
    000011DA 6AF6                   MOV.L       @R15+,R10
    000011DC 6BF6                   MOV.L       @R15+,R11
    000011DE 6CF6                   MOV.L       @R15+,R12
    000011E0 6DF6                   MOV.L       @R15+,R13
    000011E2 000B                   RTS
    000011E4 6EF6                   MOV.L       @R15+,R14
      simplexC.c   768    
      simplexC.c   769    
      simplexC.c   770    int printXbByIt(int itId)
    000011E6              _printXbByIt:                    ; function: printXbByIt
                                                           ; frame size=820
                                                           ; used runtime library name:
                                                           ; __stod
    000011E6 2FE6                   MOV.L       R14,@-R15
    000011E8 2FD6                   MOV.L       R13,@-R15
      simplexC.c   771    {
      simplexC.c   772        char stroutBasicInfo[128],stroutBasicInfo2[128];
      simplexC.c   773        int menuChoice;
      simplexC.c   774        char *uselessSring[128];
      simplexC.c   775        menuChoice=INITIALIZE_VALUE_OPT;
    000011EA EEFF                   MOV         #-1,R14
    000011EC 9013                   MOV.W       L1481+4,R0 ; H'FCFC
    000011EE 2FC6                   MOV.L       R12,@-R15
    000011F0 2FB6                   MOV.L       R11,@-R15
    000011F2 6B43                   MOV         R4,R11
    000011F4 9C11                   MOV.W       L1481+8,R12; H'0204
    000011F6 4B08                   SHLL2       R11
    000011F8 DD14                   MOV.L       L1481+58,R13; _PrintMini
    000011FA 2FA6                   MOV.L       R10,@-R15
    000011FC 2F96                   MOV.L       R9,@-R15
    000011FE 2F86                   MOV.L       R8,@-R15
    00001200 4F22                   STS.L       PR,@-R15
    00001202 3F0C                   ADD         R0,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001204 D80F                   MOV.L       L1481+50,R8; _ex
    00001206 2F42                   MOV.L       R4,@R15
    00001208 D90F                   MOV.L       L1481+54,R9; _sprintf
    0000120A 9A05                   MOV.W       L1481+6,R10; H'0284
    0000120C 3AFC                   ADD         R15,R10
      simplexC.c   776        while(menuChoice!=EXIT_OPT)
    0000120E A06C                   BRA         L1298
    00001210 3CFC                   ADD         R15,R12
    00001212              L1481:                            
    00001212 0080                   .DATA.W     H'0080
    00001214 0304                   .DATA.W     H'0304
    00001216 FCFC                   .DATA.W     H'FCFC
    00001218 0284                   .DATA.W     H'0284
    0000121A 0204                   .DATA.W     H'0204
    0000121C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001220 <00000000>             .DATA.L     L692
    00001224 <00000000>             .DATA.L     _InputI
    00001228 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    0000122C <00000014>             .DATA.L     H'00000014+_ex
    00001230 <00000000>             .DATA.L     __stod
    00001234 <00000000>             .DATA.L     L694
    00001238 <00000000>             .DATA.L     L591
    0000123C <00000000>             .DATA.L     _string_input
    00001240 <00000000>             .DATA.L     _memset
    00001244 <00000000>             .DATA.L     _ex
    00001248 <00000000>             .DATA.L     _sprintf
    0000124C <00000000>             .DATA.L     _PrintMini
    00001250              L1299:                            
      simplexC.c   777        {
      simplexC.c   778            Bdisp_AllClr_DDVRAM();
    00001250 D250                   MOV.L       L1482+14,R2; _Bdisp_AllClr_DDVRAM
    00001252 420B                   JSR         @R2
    00001254 0009                   NOP
      simplexC.c   779            sprintf(stroutBasicInfo, "Xb itId %d. S: %d.  %d exit",itId, ex.nodes.its[itId]->BinvSize,EXIT_OPT
                         +);
    00001256 E300                   MOV         #0,R3
    00001258 2F36                   MOV.L       R3,@-R15
    0000125A 5085                   MOV.L       @(20,R8),R0
    0000125C 02BE                   MOV.L       @(R0,R11),R2
    0000125E 5129                   MOV.L       @(36,R2),R1
    00001260 D24D                   MOV.L       L1482+18,R2; L703
    00001262 2F16                   MOV.L       R1,@-R15
    00001264 50F2                   MOV.L       @(8,R15),R0
    00001266 2F06                   MOV.L       R0,@-R15
    00001268 2F26                   MOV.L       R2,@-R15
    0000126A 490B                   JSR         @R9
    0000126C 64A3                   MOV         R10,R4
    0000126E 7F10                   ADD         #16,R15
      simplexC.c   780            PrintMini(0, 0, (unsigned char*)stroutBasicInfo, MINI_OVER);
    00001270 E710                   MOV         #16,R7
    00001272 66A3                   MOV         R10,R6
    00001274 E500                   MOV         #0,R5
    00001276 4D0B                   JSR         @R13
    00001278 6453                   MOV         R5,R4
      simplexC.c   781            menuChoice = InputI(0, 7);
    0000127A E507                   MOV         #7,R5
    0000127C D347                   MOV.L       L1482+22,R3; _InputI




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000127E 430B                   JSR         @R3
    00001280 E400                   MOV         #0,R4
      simplexC.c   782            Bdisp_PutDisp_DD();
    00001282 D247                   MOV.L       L1482+26,R2; _Bdisp_PutDisp_DD
    00001284 420B                   JSR         @R2
    00001286 6E03                   MOV         R0,R14
      simplexC.c   783            if(menuChoice!=EXIT_OPT && menuChoice<= ex.nodes.its[itId]->BinvSize)
    00001288 2EE8                   TST         R14,R14
    0000128A 8929                   BT          L1300
    0000128C D245                   MOV.L       L1482+30,R2; H'00000014+_ex
    0000128E 6022                   MOV.L       @R2,R0
    00001290 03BE                   MOV.L       @(R0,R11),R3
    00001292 5139                   MOV.L       @(36,R3),R1
    00001294 3E17                   CMP/GT      R1,R14
    00001296 8923                   BT          L1300
      simplexC.c   784            {
      simplexC.c   785                sprintf(stroutBasicInfo2, "Pos %d: %.2f",menuChoice,ex.nodes.its[itId]->xb[menuChoice-1]);
    00001298 5085                   MOV.L       @(20,R8),R0
    0000129A 63E3                   MOV         R14,R3
    0000129C D242                   MOV.L       L1482+34,R2; __stod
    0000129E 73FF                   ADD         #-1,R3
    000012A0 00BE                   MOV.L       @(R0,R11),R0
    000012A2 4308                   SHLL2       R3
    000012A4 500B                   MOV.L       @(44,R0),R0
    000012A6 003E                   MOV.L       @(R0,R3),R0
    000012A8 7FF8                   ADD         #-8,R15
    000012AA 420B                   JSR         @R2
    000012AC 2FF6                   MOV.L       R15,@-R15
    000012AE 2FE6                   MOV.L       R14,@-R15
    000012B0 D33E                   MOV.L       L1482+38,R3; L694
    000012B2 2F36                   MOV.L       R3,@-R15
    000012B4 490B                   JSR         @R9
    000012B6 64C3                   MOV         R12,R4
    000012B8 7F10                   ADD         #16,R15
      simplexC.c   786                PrintMini(0,14,(unsigned char*) stroutBasicInfo2,MINI_OVER);
    000012BA E710                   MOV         #16,R7
    000012BC 66C3                   MOV         R12,R6
    000012BE E50E                   MOV         #14,R5
    000012C0 4D0B                   JSR         @R13
    000012C2 E400                   MOV         #0,R4
      simplexC.c   787                PrintMini(0, 21, (unsigned char*)"Press any key to continue", MINI_OVER);
    000012C4 D63A                   MOV.L       L1482+42,R6; L591
    000012C6 E515                   MOV         #21,R5
    000012C8 E710                   MOV         #16,R7
    000012CA 4D0B                   JSR         @R13
    000012CC E400                   MOV         #0,R4
      simplexC.c   788                string_input(0, 28, uselessSring);
    000012CE 66F3                   MOV         R15,R6
    000012D0 D238                   MOV.L       L1482+46,R2; _string_input
    000012D2 E51C                   MOV         #28,R5
    000012D4 7604                   ADD         #4,R6
    000012D6 420B                   JSR         @R2
    000012D8 E400                   MOV         #0,R4
      simplexC.c   789                Bdisp_PutDisp_DD();
    000012DA D331                   MOV.L       L1482+26,R3; _Bdisp_PutDisp_DD
    000012DC 430B                   JSR         @R3
    000012DE 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000012E0              L1300:                            
      simplexC.c   790            }
      simplexC.c   791            memset(stroutBasicInfo2,0,128);
    000012E0 9651                   MOV.W       L1482,R6   ; H'0080
    000012E2 E500                   MOV         #0,R5
    000012E4 D234                   MOV.L       L1482+50,R2; _memset
    000012E6 420B                   JSR         @R2
    000012E8 64C3                   MOV         R12,R4
    000012EA              L1298:                            
    000012EA 2EE8                   TST         R14,R14
    000012EC 8BB0                   BF          L1299
      simplexC.c   792        }
      simplexC.c   793        return 0;
    000012EE E000                   MOV         #0,R0
      simplexC.c   794    }
    000012F0 914A                   MOV.W       L1482+2,R1 ; H'0304
    000012F2 3F1C                   ADD         R1,R15
    000012F4 4F26                   LDS.L       @R15+,PR
    000012F6 68F6                   MOV.L       @R15+,R8
    000012F8 69F6                   MOV.L       @R15+,R9
    000012FA 6AF6                   MOV.L       @R15+,R10
    000012FC 6BF6                   MOV.L       @R15+,R11
    000012FE 6CF6                   MOV.L       @R15+,R12
    00001300 6DF6                   MOV.L       @R15+,R13
    00001302 000B                   RTS
    00001304 6EF6                   MOV.L       @R15+,R14
      simplexC.c   795    
      simplexC.c   796    int printYandXbDivYByIt(int itId)
    00001306              _printYandXbDivYByIt:            ; function: printYandXbDivYByIt
                                                           ; frame size=968
                                                           ; used runtime library name:
                                                           ; __stod
      simplexC.c   797    {
      simplexC.c   798        char stroutBasicInfo[128],stroutBasicInfo2[128],stroutBasicInfo3[128];
      simplexC.c   799        int menuChoice,menuChoice2;
      simplexC.c   800        char *uselessSring[128];
      simplexC.c   801        sprintf(stroutBasicInfo, "Y & xb/y itId %d. S: %d.  %d exit",itId, ex.nodes.its[itId]->BinvSize,EXIT_O
                         +PT);
    00001306 E300                   MOV         #0,R3
    00001308 D226                   MOV.L       L1482+30,R2; H'00000014+_ex
    0000130A 2FE6                   MOV.L       R14,@-R15
    0000130C 2FD6                   MOV.L       R13,@-R15
    0000130E 2FC6                   MOV.L       R12,@-R15
    00001310 2FB6                   MOV.L       R11,@-R15
    00001312 2FA6                   MOV.L       R10,@-R15
    00001314 2F96                   MOV.L       R9,@-R15
    00001316 2F86                   MOV.L       R8,@-R15
    00001318 4F22                   STS.L       PR,@-R15
    0000131A 9036                   MOV.W       L1482+4,R0 ; H'FC74
    0000131C D927                   MOV.L       L1482+54,R9; _sprintf
    0000131E 3F0C                   ADD         R0,R15
    00001320 2F42                   MOV.L       R4,@R15
    00001322 2F36                   MOV.L       R3,@-R15
    00001324 5BF1                   MOV.L       @(4,R15),R11
    00001326 4B08                   SHLL2       R11
    00001328 6022                   MOV.L       @R2,R0
    0000132A 01BE                   MOV.L       @(R0,R11),R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000132C 942E                   MOV.W       L1482+6,R4 ; H'031C
    0000132E 5019                   MOV.L       @(36,R1),R0
    00001330 2F06                   MOV.L       R0,@-R15
    00001332 51F2                   MOV.L       @(8,R15),R1
    00001334 2F16                   MOV.L       R1,@-R15
    00001336 D122                   MOV.L       L1482+58,R1; L714
    00001338 2F16                   MOV.L       R1,@-R15
    0000133A 490B                   JSR         @R9
    0000133C 34FC                   ADD         R15,R4
      simplexC.c   802        if(ex.nodes.its[itId]->idVarIn==-1)
    0000133E D319                   MOV.L       L1482+30,R3; H'00000014+_ex
    00001340 6032                   MOV.L       @R3,R0
    00001342 00BE                   MOV.L       @(R0,R11),R0
    00001344 5005                   MOV.L       @(20,R0),R0
    00001346 88FF                   CMP/EQ      #-1,R0
    00001348 8F07                   BF/S        L1302
    0000134A 7F10                   ADD         #16,R15
      simplexC.c   803        {
      simplexC.c   804            sprintf(stroutBasicInfo2, "No VarIn and VarOut");
    0000134C D11D                   MOV.L       L1482+62,R1; L716
    0000134E 2F16                   MOV.L       R1,@-R15
    00001350 941D                   MOV.W       L1482+8,R4 ; H'0290
    00001352 490B                   JSR         @R9
    00001354 34FC                   ADD         R15,R4
    00001356 A011                   BRA         L1303
    00001358 7F04                   ADD         #4,R15
    0000135A              L1302:                            
      simplexC.c   805    
      simplexC.c   806        }else
      simplexC.c   807        {
      simplexC.c   808            sprintf(stroutBasicInfo2, "IdVarIn: %d, IdVarOut %d",ex.nodes.its[itId]->idVarIn+1,ex.nodes.its[it
                         +Id]->idVarOut+1);
    0000135A D212                   MOV.L       L1482+30,R2; H'00000014+_ex
    0000135C 9418                   MOV.W       L1482+10,R4; H'0298
    0000135E 6022                   MOV.L       @R2,R0
    00001360 01BE                   MOV.L       @(R0,R11),R1
    00001362 2F12                   MOV.L       R1,@R15
    00001364 5316                   MOV.L       @(24,R1),R3
    00001366 7301                   ADD         #1,R3
    00001368 2F36                   MOV.L       R3,@-R15
    0000136A 51F1                   MOV.L       @(4,R15),R1
    0000136C 5315                   MOV.L       @(20,R1),R3
    0000136E 7301                   ADD         #1,R3
    00001370 2F36                   MOV.L       R3,@-R15
    00001372 D115                   MOV.L       L1482+66,R1; L718
    00001374 2F16                   MOV.L       R1,@-R15
    00001376 490B                   JSR         @R9
    00001378 34FC                   ADD         R15,R4
    0000137A 7F0C                   ADD         #12,R15
    0000137C              L1303:                            
    0000137C 9C09                   MOV.W       L1482+12,R12; H'020C
      simplexC.c   809        }
      simplexC.c   810        
      simplexC.c   811        menuChoice=INITIALIZE_VALUE_OPT;
    0000137E EDFF                   MOV         #-1,R13
    00001380 DE12                   MOV.L       L1482+70,R14; _PrintMini
      simplexC.c   812        menuChoice2=INITIALIZE_VALUE_OPT;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   813        while(menuChoice!=EXIT_OPT)
    00001382 A0A9                   BRA         L1304
    00001384 3CFC                   ADD         R15,R12
    00001386              L1482:                            
    00001386 0080                   .DATA.W     H'0080
    00001388 0304                   .DATA.W     H'0304
    0000138A FC74                   .DATA.W     H'FC74
    0000138C 031C                   .DATA.W     H'031C
    0000138E 0290                   .DATA.W     H'0290
    00001390 0298                   .DATA.W     H'0298
    00001392 020C                   .DATA.W     H'020C
    00001394 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001398 <00000000>             .DATA.L     L703
    0000139C <00000000>             .DATA.L     _InputI
    000013A0 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000013A4 <00000014>             .DATA.L     H'00000014+_ex
    000013A8 <00000000>             .DATA.L     __stod
    000013AC <00000000>             .DATA.L     L694
    000013B0 <00000000>             .DATA.L     L591
    000013B4 <00000000>             .DATA.L     _string_input
    000013B8 <00000000>             .DATA.L     _memset
    000013BC <00000000>             .DATA.L     _sprintf
    000013C0 <00000000>             .DATA.L     L714
    000013C4 <00000000>             .DATA.L     L716
    000013C8 <00000000>             .DATA.L     L718
    000013CC <00000000>             .DATA.L     _PrintMini
    000013D0              L1305:                            
      simplexC.c   814        {
      simplexC.c   815            Bdisp_AllClr_DDVRAM();
    000013D0 D24B                   MOV.L       L1483+8,R2 ; _Bdisp_AllClr_DDVRAM
    000013D2 420B                   JSR         @R2
    000013D4 0009                   NOP
      simplexC.c   816            
      simplexC.c   817            PrintMini(0, 0, (unsigned char*)stroutBasicInfo, MINI_OVER);
    000013D6 E710                   MOV         #16,R7
    000013D8 968E                   MOV.W       L1483,R6   ; H'030C
    000013DA E500                   MOV         #0,R5
    000013DC 36FC                   ADD         R15,R6
    000013DE 4E0B                   JSR         @R14
    000013E0 6453                   MOV         R5,R4
      simplexC.c   818            PrintMini(0, 7, (unsigned char*)stroutBasicInfo2, MINI_OVER);
    000013E2 E710                   MOV         #16,R7
    000013E4 9689                   MOV.W       L1483+2,R6 ; H'028C
    000013E6 E507                   MOV         #7,R5
    000013E8 36FC                   ADD         R15,R6
    000013EA 4E0B                   JSR         @R14
    000013EC E400                   MOV         #0,R4
      simplexC.c   819            PrintMini(0, 14, (unsigned char*)"Var:", MINI_OVER);
    000013EE E710                   MOV         #16,R7
    000013F0 D644                   MOV.L       L1483+12,R6; L720
    000013F2 E50E                   MOV         #14,R5
    000013F4 4E0B                   JSR         @R14
    000013F6 E400                   MOV         #0,R4
      simplexC.c   820            PrintMini(0, 21, (unsigned char*)"Pos:", MINI_OVER);
    000013F8 D643                   MOV.L       L1483+16,R6; L721
    000013FA E515                   MOV         #21,R5
    000013FC E710                   MOV         #16,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000013FE 4E0B                   JSR         @R14
    00001400 E400                   MOV         #0,R4
      simplexC.c   821    
      simplexC.c   822            menuChoice = InputI(28, 14);
    00001402 E50E                   MOV         #14,R5
    00001404 D341                   MOV.L       L1483+20,R3; _InputI
    00001406 430B                   JSR         @R3
    00001408 E41C                   MOV         #28,R4
    0000140A 6D03                   MOV         R0,R13
      simplexC.c   823            menuChoice2 = InputI(28, 21);
    0000140C D23F                   MOV.L       L1483+20,R2; _InputI
    0000140E E515                   MOV         #21,R5
    00001410 420B                   JSR         @R2
    00001412 E41C                   MOV         #28,R4
      simplexC.c   824            Bdisp_PutDisp_DD();
    00001414 D33E                   MOV.L       L1483+24,R3; _Bdisp_PutDisp_DD
    00001416 430B                   JSR         @R3
    00001418 6A03                   MOV         R0,R10
      simplexC.c   825            if(menuChoice!=EXIT_OPT && menuChoice2!=EXIT_OPT && menuChoice<= ex.nodes.its[itId]->BinvSize)
    0000141A 2DD8                   TST         R13,R13
    0000141C 8957                   BT          L1306
    0000141E 2AA8                   TST         R10,R10
    00001420 8955                   BT          L1306
    00001422 D23C                   MOV.L       L1483+28,R2; H'00000014+_ex
    00001424 6022                   MOV.L       @R2,R0
    00001426 03BE                   MOV.L       @(R0,R11),R3
    00001428 5139                   MOV.L       @(36,R3),R1
    0000142A 3D17                   CMP/GT      R1,R13
    0000142C 894F                   BT          L1306
    0000142E 68D3                   MOV         R13,R8
    00001430 D338                   MOV.L       L1483+28,R3; H'00000014+_ex
    00001432 61A3                   MOV         R10,R1
    00001434 6232                   MOV.L       @R3,R2
    00001436 78FF                   ADD         #-1,R8
    00001438 1F21                   MOV.L       R2,@(4,R15)
    0000143A 71FF                   ADD         #-1,R1
    0000143C 4108                   SHLL2       R1
    0000143E 2F12                   MOV.L       R1,@R15
    00001440 50F1                   MOV.L       @(4,R15),R0
    00001442 03BE                   MOV.L       @(R0,R11),R3
    00001444 5235                   MOV.L       @(20,R3),R2
    00001446 3820                   CMP/EQ      R2,R8
    00001448 8B1C                   BF          L1307
      simplexC.c   826            {
      simplexC.c   827                if(menuChoice-1==ex.nodes.its[itId]->idVarIn)
      simplexC.c   828                {
      simplexC.c   829                    sprintf(stroutBasicInfo3, "Var:%d.Pos:%d:Y:%.2f xb/y:%.2f",menuChoice,menuChoice2,ex.nodes
                         +.its[itId]->yj[menuChoice-1][menuChoice2-1],ex.nodes.its[itId]->xbDivYj[menuChoice2-1]);
    0000144A E140                   MOV         #64,R1
    0000144C D232                   MOV.L       L1483+32,R2; __stod
    0000144E 50F1                   MOV.L       @(4,R15),R0
    00001450 00BE                   MOV.L       @(R0,R11),R0
    00001452 1F02                   MOV.L       R0,@(8,R15)
    00001454 63F2                   MOV.L       @R15,R3
    00001456 001E                   MOV.L       @(R0,R1),R0
    00001458 003E                   MOV.L       @(R0,R3),R0
    0000145A 7FF8                   ADD         #-8,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000145C 420B                   JSR         @R2
    0000145E 2FF6                   MOV.L       R15,@-R15
    00001460 50F4                   MOV.L       @(16,R15),R0
    00001462 4808                   SHLL2       R8
    00001464 53F2                   MOV.L       @(8,R15),R3
    00001466 500F                   MOV.L       @(60,R0),R0
    00001468 D22B                   MOV.L       L1483+32,R2; __stod
    0000146A 008E                   MOV.L       @(R0,R8),R0
    0000146C 003E                   MOV.L       @(R0,R3),R0
    0000146E 7FF8                   ADD         #-8,R15
    00001470 420B                   JSR         @R2
    00001472 2FF6                   MOV.L       R15,@-R15
    00001474 2FA6                   MOV.L       R10,@-R15
    00001476 2FD6                   MOV.L       R13,@-R15
    00001478 D028                   MOV.L       L1483+36,R0; L724
    0000147A 2F06                   MOV.L       R0,@-R15
    0000147C 490B                   JSR         @R9
    0000147E 64C3                   MOV         R12,R4
    00001480 A012                   BRA         L1308
    00001482 7F1C                   ADD         #28,R15
    00001484              L1307:                            
      simplexC.c   830                }else
      simplexC.c   831                {
      simplexC.c   832                    sprintf(stroutBasicInfo3, "Var:%d.Pos %d:Y:%.2f xb/y: NDisp",menuChoice,menuChoice2,ex.nod
                         +es.its[itId]->yj[menuChoice-1][menuChoice2-1]);
    00001484 50F1                   MOV.L       @(4,R15),R0
    00001486 4808                   SHLL2       R8
    00001488 63F2                   MOV.L       @R15,R3
    0000148A 00BE                   MOV.L       @(R0,R11),R0
    0000148C D222                   MOV.L       L1483+32,R2; __stod
    0000148E 500F                   MOV.L       @(60,R0),R0
    00001490 008E                   MOV.L       @(R0,R8),R0
    00001492 003E                   MOV.L       @(R0,R3),R0
    00001494 7FF8                   ADD         #-8,R15
    00001496 420B                   JSR         @R2
    00001498 2FF6                   MOV.L       R15,@-R15
    0000149A 2FA6                   MOV.L       R10,@-R15
    0000149C 2FD6                   MOV.L       R13,@-R15
    0000149E D120                   MOV.L       L1483+40,R1; L726
    000014A0 2F16                   MOV.L       R1,@-R15
    000014A2 490B                   JSR         @R9
    000014A4 64C3                   MOV         R12,R4
    000014A6 7F14                   ADD         #20,R15
    000014A8              L1308:                            
      simplexC.c   833                }
      simplexC.c   834                
      simplexC.c   835                PrintMini(0,28,(unsigned char*) stroutBasicInfo3,MINI_OVER);
    000014A8 E710                   MOV         #16,R7
    000014AA 66C3                   MOV         R12,R6
    000014AC E51C                   MOV         #28,R5
    000014AE 4E0B                   JSR         @R14
    000014B0 E400                   MOV         #0,R4
      simplexC.c   836                PrintMini(0, 35, (unsigned char*)"Press any key to continue", MINI_OVER);
    000014B2 E710                   MOV         #16,R7
    000014B4 D61B                   MOV.L       L1483+44,R6; L591
    000014B6 E523                   MOV         #35,R5
    000014B8 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000014BA E400                   MOV         #0,R4
      simplexC.c   837                string_input(0, 42, uselessSring);
    000014BC D31A                   MOV.L       L1483+48,R3; _string_input
    000014BE 66F3                   MOV         R15,R6
    000014C0 760C                   ADD         #12,R6
    000014C2 E52A                   MOV         #42,R5
    000014C4 430B                   JSR         @R3
    000014C6 E400                   MOV         #0,R4
      simplexC.c   838                Bdisp_PutDisp_DD();
    000014C8 D211                   MOV.L       L1483+24,R2; _Bdisp_PutDisp_DD
    000014CA 420B                   JSR         @R2
    000014CC 0009                   NOP
    000014CE              L1306:                            
      simplexC.c   839            }
      simplexC.c   840            memset(stroutBasicInfo3,0,128);
    000014CE E500                   MOV         #0,R5
    000014D0 D316                   MOV.L       L1483+52,R3; _memset
    000014D2 9613                   MOV.W       L1483+4,R6 ; H'0080
    000014D4 430B                   JSR         @R3
    000014D6 64C3                   MOV         R12,R4
    000014D8              L1304:                            
    000014D8 2DD8                   TST         R13,R13
    000014DA 8901                   BT          L1484
    000014DC AF78                   BRA         L1305
    000014DE 0009                   NOP
    000014E0              L1484:                            
      simplexC.c   841        }
      simplexC.c   842        return 0;
      simplexC.c   843    }
    000014E0 910D                   MOV.W       L1483+6,R1 ; H'038C
    000014E2 E000                   MOV         #0,R0
    000014E4 3F1C                   ADD         R1,R15
    000014E6 4F26                   LDS.L       @R15+,PR
    000014E8 68F6                   MOV.L       @R15+,R8
    000014EA 69F6                   MOV.L       @R15+,R9
    000014EC 6AF6                   MOV.L       @R15+,R10
    000014EE 6BF6                   MOV.L       @R15+,R11
    000014F0 6CF6                   MOV.L       @R15+,R12
    000014F2 6DF6                   MOV.L       @R15+,R13
    000014F4 000B                   RTS
    000014F6 6EF6                   MOV.L       @R15+,R14
    000014F8              L1483:                            
    000014F8 030C                   .DATA.W     H'030C
    000014FA 028C                   .DATA.W     H'028C
    000014FC 0080                   .DATA.W     H'0080
    000014FE 038C                   .DATA.W     H'038C
    00001500 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001504 <00000000>             .DATA.L     L720
    00001508 <00000000>             .DATA.L     L721
    0000150C <00000000>             .DATA.L     _InputI
    00001510 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00001514 <00000014>             .DATA.L     H'00000014+_ex
    00001518 <00000000>             .DATA.L     __stod
    0000151C <00000000>             .DATA.L     L724
    00001520 <00000000>             .DATA.L     L726
    00001524 <00000000>             .DATA.L     L591
    00001528 <00000000>             .DATA.L     _string_input




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000152C <00000000>             .DATA.L     _memset
      simplexC.c   844    
      simplexC.c   845    
      simplexC.c   846    int printCtBinvByIt(int itId)
    00001530              _printCtBinvByIt:                ; function: printCtBinvByIt
                                                           ; frame size=820
                                                           ; used runtime library name:
                                                           ; __stod
    00001530 2FE6                   MOV.L       R14,@-R15
      simplexC.c   847    {
      simplexC.c   848        char stroutBasicInfo[128],stroutBasicInfo2[128];
      simplexC.c   849        int menuChoice;
      simplexC.c   850        char *uselessSring[128];
      simplexC.c   851        menuChoice=INITIALIZE_VALUE_OPT;
    00001532 EEFF                   MOV         #-1,R14
    00001534 2FD6                   MOV.L       R13,@-R15
    00001536 2FC6                   MOV.L       R12,@-R15
    00001538 2FB6                   MOV.L       R11,@-R15
    0000153A 6B43                   MOV         R4,R11
    0000153C 9C81                   MOV.W       L1485+4,R12; H'0204
    0000153E 4B08                   SHLL2       R11
    00001540 DD43                   MOV.L       L1485+18,R13; _PrintMini
    00001542 2FA6                   MOV.L       R10,@-R15
    00001544 2F96                   MOV.L       R9,@-R15
    00001546 2F86                   MOV.L       R8,@-R15
    00001548 4F22                   STS.L       PR,@-R15
    0000154A 9078                   MOV.W       L1485,R0   ; H'FCFC
    0000154C D83E                   MOV.L       L1485+10,R8; _ex
    0000154E 3F0C                   ADD         R0,R15
    00001550 D93E                   MOV.L       L1485+14,R9; _sprintf
    00001552 2F42                   MOV.L       R4,@R15
    00001554 9A74                   MOV.W       L1485+2,R10; H'0284
    00001556 3AFC                   ADD         R15,R10
      simplexC.c   852        while(menuChoice!=EXIT_OPT)
    00001558 A04D                   BRA         L1310
    0000155A 3CFC                   ADD         R15,R12
    0000155C              L1311:                            
      simplexC.c   853        {
      simplexC.c   854            Bdisp_AllClr_DDVRAM();
    0000155C D23D                   MOV.L       L1485+22,R2; _Bdisp_AllClr_DDVRAM
    0000155E 420B                   JSR         @R2
    00001560 0009                   NOP
      simplexC.c   855            sprintf(stroutBasicInfo, "CtBinv itId %d. S: %d.  %d exit",itId, ex.nodes.its[itId]->BinvSize,EXIT
                         +_OPT);
    00001562 E300                   MOV         #0,R3
    00001564 2F36                   MOV.L       R3,@-R15
    00001566 5085                   MOV.L       @(20,R8),R0
    00001568 02BE                   MOV.L       @(R0,R11),R2
    0000156A 5129                   MOV.L       @(36,R2),R1
    0000156C D23A                   MOV.L       L1485+26,R2; L735
    0000156E 2F16                   MOV.L       R1,@-R15
    00001570 50F2                   MOV.L       @(8,R15),R0
    00001572 2F06                   MOV.L       R0,@-R15
    00001574 2F26                   MOV.L       R2,@-R15
    00001576 490B                   JSR         @R9
    00001578 64A3                   MOV         R10,R4
    0000157A 7F10                   ADD         #16,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   856            PrintMini(0, 0, (unsigned char*)stroutBasicInfo, MINI_OVER);
    0000157C E710                   MOV         #16,R7
    0000157E 66A3                   MOV         R10,R6
    00001580 E500                   MOV         #0,R5
    00001582 4D0B                   JSR         @R13
    00001584 6453                   MOV         R5,R4
      simplexC.c   857            menuChoice = InputI(0, 7);
    00001586 E507                   MOV         #7,R5
    00001588 D334                   MOV.L       L1485+30,R3; _InputI
    0000158A 430B                   JSR         @R3
    0000158C E400                   MOV         #0,R4
      simplexC.c   858            Bdisp_PutDisp_DD();
    0000158E D234                   MOV.L       L1485+34,R2; _Bdisp_PutDisp_DD
    00001590 420B                   JSR         @R2
    00001592 6E03                   MOV         R0,R14
      simplexC.c   859            if(menuChoice!=EXIT_OPT && menuChoice<= ex.nodes.its[itId]->BinvSize)
    00001594 2EE8                   TST         R14,R14
    00001596 8929                   BT          L1312
    00001598 D232                   MOV.L       L1485+38,R2; H'00000014+_ex
    0000159A 6022                   MOV.L       @R2,R0
    0000159C 03BE                   MOV.L       @(R0,R11),R3
    0000159E 5139                   MOV.L       @(36,R3),R1
    000015A0 3E17                   CMP/GT      R1,R14
    000015A2 8923                   BT          L1312
      simplexC.c   860            {
      simplexC.c   861                sprintf(stroutBasicInfo2, "Pos %d: %.2f",menuChoice,ex.nodes.its[itId]->ctBinv[menuChoice-1]);
    000015A4 5085                   MOV.L       @(20,R8),R0
    000015A6 63E3                   MOV         R14,R3
    000015A8 D22F                   MOV.L       L1485+42,R2; __stod
    000015AA 73FF                   ADD         #-1,R3
    000015AC 00BE                   MOV.L       @(R0,R11),R0
    000015AE 4308                   SHLL2       R3
    000015B0 500C                   MOV.L       @(48,R0),R0
    000015B2 003E                   MOV.L       @(R0,R3),R0
    000015B4 7FF8                   ADD         #-8,R15
    000015B6 420B                   JSR         @R2
    000015B8 2FF6                   MOV.L       R15,@-R15
    000015BA 2FE6                   MOV.L       R14,@-R15
    000015BC D32B                   MOV.L       L1485+46,R3; L694
    000015BE 2F36                   MOV.L       R3,@-R15
    000015C0 490B                   JSR         @R9
    000015C2 64C3                   MOV         R12,R4
    000015C4 7F10                   ADD         #16,R15
      simplexC.c   862                PrintMini(0,14,(unsigned char*) stroutBasicInfo2,MINI_OVER);
    000015C6 E710                   MOV         #16,R7
    000015C8 66C3                   MOV         R12,R6
    000015CA E50E                   MOV         #14,R5
    000015CC 4D0B                   JSR         @R13
    000015CE E400                   MOV         #0,R4
      simplexC.c   863                PrintMini(0, 21, (unsigned char*)"Press any key to continue", MINI_OVER);
    000015D0 D627                   MOV.L       L1485+50,R6; L591
    000015D2 E515                   MOV         #21,R5
    000015D4 E710                   MOV         #16,R7
    000015D6 4D0B                   JSR         @R13
    000015D8 E400                   MOV         #0,R4
      simplexC.c   864                string_input(0, 28, uselessSring);
    000015DA 66F3                   MOV         R15,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   67


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000015DC D225                   MOV.L       L1485+54,R2; _string_input
    000015DE E51C                   MOV         #28,R5
    000015E0 7604                   ADD         #4,R6
    000015E2 420B                   JSR         @R2
    000015E4 E400                   MOV         #0,R4
      simplexC.c   865                Bdisp_PutDisp_DD();
    000015E6 D31E                   MOV.L       L1485+34,R3; _Bdisp_PutDisp_DD
    000015E8 430B                   JSR         @R3
    000015EA 0009                   NOP
    000015EC              L1312:                            
      simplexC.c   866            }
      simplexC.c   867            memset(stroutBasicInfo2,0,128);
    000015EC 962A                   MOV.W       L1485+6,R6 ; H'0080
    000015EE E500                   MOV         #0,R5
    000015F0 D221                   MOV.L       L1485+58,R2; _memset
    000015F2 420B                   JSR         @R2
    000015F4 64C3                   MOV         R12,R4
    000015F6              L1310:                            
    000015F6 2EE8                   TST         R14,R14
    000015F8 8BB0                   BF          L1311
      simplexC.c   868        }
      simplexC.c   869        return 0;
    000015FA E000                   MOV         #0,R0
      simplexC.c   870    }
    000015FC 9123                   MOV.W       L1485+8,R1 ; H'0304
    000015FE 3F1C                   ADD         R1,R15
    00001600 4F26                   LDS.L       @R15+,PR
    00001602 68F6                   MOV.L       @R15+,R8
    00001604 69F6                   MOV.L       @R15+,R9
    00001606 6AF6                   MOV.L       @R15+,R10
    00001608 6BF6                   MOV.L       @R15+,R11
    0000160A 6CF6                   MOV.L       @R15+,R12
    0000160C 6DF6                   MOV.L       @R15+,R13
    0000160E 000B                   RTS
    00001610 6EF6                   MOV.L       @R15+,R14
      simplexC.c   871    
      simplexC.c   872    int printBasicVarsBbyIt(int itId)
    00001612              _printBasicVarsBbyIt:            ; function: printBasicVarsBbyIt
                                                           ; frame size=820
    00001612 2FE6                   MOV.L       R14,@-R15
    00001614 2FD6                   MOV.L       R13,@-R15
      simplexC.c   873    {
      simplexC.c   874        char stroutBasicInfo[128],stroutBasicInfo2[128];
      simplexC.c   875        int menuChoice;
      simplexC.c   876        char *uselessSring[128];
      simplexC.c   877        menuChoice=INITIALIZE_VALUE_OPT;
    00001616 EEFF                   MOV         #-1,R14
    00001618 9011                   MOV.W       L1485,R0   ; H'FCFC
    0000161A 2FC6                   MOV.L       R12,@-R15
    0000161C 2FB6                   MOV.L       R11,@-R15
    0000161E 6B43                   MOV         R4,R11
    00001620 9C0F                   MOV.W       L1485+4,R12; H'0204
    00001622 4B08                   SHLL2       R11
    00001624 DD0A                   MOV.L       L1485+18,R13; _PrintMini
    00001626 2FA6                   MOV.L       R10,@-R15
    00001628 2F96                   MOV.L       R9,@-R15
    0000162A 2F86                   MOV.L       R8,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   68


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000162C 4F22                   STS.L       PR,@-R15
    0000162E 3F0C                   ADD         R0,R15
    00001630 D805                   MOV.L       L1485+10,R8; _ex
    00001632 2F42                   MOV.L       R4,@R15
    00001634 D905                   MOV.L       L1485+14,R9; _sprintf
    00001636 9A03                   MOV.W       L1485+2,R10; H'0284
    00001638 3AFC                   ADD         R15,R10
      simplexC.c   878        while(menuChoice!=EXIT_OPT)
    0000163A A06A                   BRA         L1314
    0000163C 3CFC                   ADD         R15,R12
    0000163E              L1485:                            
    0000163E FCFC                   .DATA.W     H'FCFC
    00001640 0284                   .DATA.W     H'0284
    00001642 0204                   .DATA.W     H'0204
    00001644 0080                   .DATA.W     H'0080
    00001646 0304                   .DATA.W     H'0304
    00001648 <00000000>             .DATA.L     _ex
    0000164C <00000000>             .DATA.L     _sprintf
    00001650 <00000000>             .DATA.L     _PrintMini
    00001654 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001658 <00000000>             .DATA.L     L735
    0000165C <00000000>             .DATA.L     _InputI
    00001660 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00001664 <00000014>             .DATA.L     H'00000014+_ex
    00001668 <00000000>             .DATA.L     __stod
    0000166C <00000000>             .DATA.L     L694
    00001670 <00000000>             .DATA.L     L591
    00001674 <00000000>             .DATA.L     _string_input
    00001678 <00000000>             .DATA.L     _memset
    0000167C              L1315:                            
      simplexC.c   879        {
      simplexC.c   880            Bdisp_AllClr_DDVRAM();
    0000167C D245                   MOV.L       L1486+16,R2; _Bdisp_AllClr_DDVRAM
    0000167E 420B                   JSR         @R2
    00001680 0009                   NOP
      simplexC.c   881            sprintf(stroutBasicInfo, "BVars itId %d. S: %d.  %d exit",itId, ex.nodes.its[itId]->BinvSize,EXIT_
                         +OPT);
    00001682 E300                   MOV         #0,R3
    00001684 2F36                   MOV.L       R3,@-R15
    00001686 5085                   MOV.L       @(20,R8),R0
    00001688 02BE                   MOV.L       @(R0,R11),R2
    0000168A 5129                   MOV.L       @(36,R2),R1
    0000168C D242                   MOV.L       L1486+20,R2; L745
    0000168E 2F16                   MOV.L       R1,@-R15
    00001690 50F2                   MOV.L       @(8,R15),R0
    00001692 2F06                   MOV.L       R0,@-R15
    00001694 2F26                   MOV.L       R2,@-R15
    00001696 490B                   JSR         @R9
    00001698 64A3                   MOV         R10,R4
    0000169A 7F10                   ADD         #16,R15
      simplexC.c   882            PrintMini(0, 0, (unsigned char*)stroutBasicInfo, MINI_OVER);
    0000169C E710                   MOV         #16,R7
    0000169E 66A3                   MOV         R10,R6
    000016A0 E500                   MOV         #0,R5
    000016A2 4D0B                   JSR         @R13
    000016A4 6453                   MOV         R5,R4
      simplexC.c   883            menuChoice = InputI(0, 7);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   69


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000016A6 E507                   MOV         #7,R5
    000016A8 D33C                   MOV.L       L1486+24,R3; _InputI
    000016AA 430B                   JSR         @R3
    000016AC E400                   MOV         #0,R4
      simplexC.c   884            Bdisp_PutDisp_DD();
    000016AE D23C                   MOV.L       L1486+28,R2; _Bdisp_PutDisp_DD
    000016B0 420B                   JSR         @R2
    000016B2 6E03                   MOV         R0,R14
      simplexC.c   885            if(menuChoice!=EXIT_OPT && menuChoice<= ex.nodes.its[itId]->BinvSize)
    000016B4 2EE8                   TST         R14,R14
    000016B6 8927                   BT          L1316
    000016B8 D23A                   MOV.L       L1486+32,R2; H'00000014+_ex
    000016BA 6022                   MOV.L       @R2,R0
    000016BC 03BE                   MOV.L       @(R0,R11),R3
    000016BE 5139                   MOV.L       @(36,R3),R1
    000016C0 3E17                   CMP/GT      R1,R14
    000016C2 8921                   BT          L1316
      simplexC.c   886            {
      simplexC.c   887                sprintf(stroutBasicInfo2, "Pos %d: %d",menuChoice,ex.nodes.its[itId]->idByRowOfBasicVarsInBInv
                         +[menuChoice-1]+1);
    000016C4 5085                   MOV.L       @(20,R8),R0
    000016C6 63E3                   MOV         R14,R3
    000016C8 00BE                   MOV.L       @(R0,R11),R0
    000016CA 73FF                   ADD         #-1,R3
    000016CC 5003                   MOV.L       @(12,R0),R0
    000016CE 4308                   SHLL2       R3
    000016D0 023E                   MOV.L       @(R0,R3),R2
    000016D2 7201                   ADD         #1,R2
    000016D4 2F26                   MOV.L       R2,@-R15
    000016D6 2FE6                   MOV.L       R14,@-R15
    000016D8 D333                   MOV.L       L1486+36,R3; L747
    000016DA 2F36                   MOV.L       R3,@-R15
    000016DC 490B                   JSR         @R9
    000016DE 64C3                   MOV         R12,R4
    000016E0 7F0C                   ADD         #12,R15
      simplexC.c   888                PrintMini(0,14,(unsigned char*) stroutBasicInfo2,MINI_OVER);
    000016E2 E710                   MOV         #16,R7
    000016E4 66C3                   MOV         R12,R6
    000016E6 E50E                   MOV         #14,R5
    000016E8 4D0B                   JSR         @R13
    000016EA E400                   MOV         #0,R4
      simplexC.c   889                PrintMini(0, 21, (unsigned char*)"Press any key to continue", MINI_OVER);
    000016EC D62F                   MOV.L       L1486+40,R6; L591
    000016EE E515                   MOV         #21,R5
    000016F0 E710                   MOV         #16,R7
    000016F2 4D0B                   JSR         @R13
    000016F4 E400                   MOV         #0,R4
      simplexC.c   890                string_input(0, 28, uselessSring);
    000016F6 66F3                   MOV         R15,R6
    000016F8 D22D                   MOV.L       L1486+44,R2; _string_input
    000016FA E51C                   MOV         #28,R5
    000016FC 7604                   ADD         #4,R6
    000016FE 420B                   JSR         @R2
    00001700 E400                   MOV         #0,R4
      simplexC.c   891                Bdisp_PutDisp_DD();
    00001702 D327                   MOV.L       L1486+28,R3; _Bdisp_PutDisp_DD
    00001704 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   70


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001706 0009                   NOP
    00001708              L1316:                            
      simplexC.c   892            }
      simplexC.c   893            memset(stroutBasicInfo2,0,128);
    00001708 963C                   MOV.W       L1486,R6   ; H'0080
    0000170A E500                   MOV         #0,R5
    0000170C D229                   MOV.L       L1486+48,R2; _memset
    0000170E 420B                   JSR         @R2
    00001710 64C3                   MOV         R12,R4
    00001712              L1314:                            
    00001712 2EE8                   TST         R14,R14
    00001714 8BB2                   BF          L1315
      simplexC.c   894        }
      simplexC.c   895        return 0;
    00001716 E000                   MOV         #0,R0
      simplexC.c   896    }
    00001718 9135                   MOV.W       L1486+2,R1 ; H'0304
    0000171A 3F1C                   ADD         R1,R15
    0000171C 4F26                   LDS.L       @R15+,PR
    0000171E 68F6                   MOV.L       @R15+,R8
    00001720 69F6                   MOV.L       @R15+,R9
    00001722 6AF6                   MOV.L       @R15+,R10
    00001724 6BF6                   MOV.L       @R15+,R11
    00001726 6CF6                   MOV.L       @R15+,R12
    00001728 6DF6                   MOV.L       @R15+,R13
    0000172A 000B                   RTS
    0000172C 6EF6                   MOV.L       @R15+,R14
      simplexC.c   897    
      simplexC.c   898    int printResVariables()
    0000172E              _printResVariables:              ; function: printResVariables
                                                           ; frame size=1084
                                                           ; used runtime library name:
                                                           ; __stod
      simplexC.c   899    {
      simplexC.c   900        char stroutTop[128],stroutBasicInfo[128],stroutBasicInfo2[128],stroutVariable[128];
      simplexC.c   901        char *uselessSring[128];
      simplexC.c   902        int menuChoice,i,idBasicVar;
      simplexC.c   903        menuChoice=INITIALIZE_VALUE_OPT;
      simplexC.c   904        sprintf(stroutTop,"Var res, printMenu. Exit %d", EXIT_OPT);
    0000172E E300                   MOV         #0,R3
    00001730 D222                   MOV.L       L1486+56,R2; L758
    00001732 2FE6                   MOV.L       R14,@-R15
    00001734 2FD6                   MOV.L       R13,@-R15
    00001736 EDFF                   MOV         #-1,R13
    00001738 9427                   MOV.W       L1486+6,R4 ; H'038C
    0000173A 2FC6                   MOV.L       R12,@-R15
    0000173C 2FB6                   MOV.L       R11,@-R15
    0000173E 2FA6                   MOV.L       R10,@-R15
    00001740 2F96                   MOV.L       R9,@-R15
    00001742 2F86                   MOV.L       R8,@-R15
    00001744 4F22                   STS.L       PR,@-R15
    00001746 901F                   MOV.W       L1486+4,R0 ; H'FBFC
    00001748 D81B                   MOV.L       L1486+52,R8; _sprintf
    0000174A 3F0C                   ADD         R0,R15
    0000174C 2F36                   MOV.L       R3,@-R15
    0000174E 2F26                   MOV.L       R2,@-R15
    00001750 480B                   JSR         @R8




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   71


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001752 34FC                   ADD         R15,R4
      simplexC.c   905        sprintf(stroutBasicInfo, "Nvars: %d, NVB: %d",ex.nVariables,ex.nodes.its[ex.nodes.nIterations]->BinvSi
                         +ze);
    00001754 DC1A                   MOV.L       L1486+60,R12; _ex
    00001756 53C4                   MOV.L       @(16,R12),R3
    00001758 50C5                   MOV.L       @(20,R12),R0
    0000175A 4308                   SHLL2       R3
    0000175C 9416                   MOV.W       L1486+8,R4 ; H'0318
    0000175E 023E                   MOV.L       @(R0,R3),R2
    00001760 5129                   MOV.L       @(36,R2),R1
    00001762 2F16                   MOV.L       R1,@-R15
    00001764 53CB                   MOV.L       @(44,R12),R3
    00001766 2F36                   MOV.L       R3,@-R15
    00001768 D216                   MOV.L       L1486+64,R2; L759
    0000176A 2F26                   MOV.L       R2,@-R15
    0000176C 480B                   JSR         @R8
    0000176E 34FC                   ADD         R15,R4
      simplexC.c   906        sprintf(stroutBasicInfo2, "Select a var:");
    00001770 D315                   MOV.L       L1486+68,R3; L760
    00001772 2F36                   MOV.L       R3,@-R15
    00001774 940B                   MOV.W       L1486+10,R4; H'029C
    00001776 480B                   JSR         @R8
    00001778 34FC                   ADD         R15,R4
    0000177A 7F18                   ADD         #24,R15
    0000177C 9A08                   MOV.W       L1486+12,R10; H'0204
    0000177E DE13                   MOV.L       L1486+72,R14; _PrintMini
      simplexC.c   907    
      simplexC.c   908        while(menuChoice!=EXIT_OPT)
    00001780 A094                   BRA         L1318
    00001782 3AFC                   ADD         R15,R10
    00001784              L1486:                            
    00001784 0080                   .DATA.W     H'0080
    00001786 0304                   .DATA.W     H'0304
    00001788 FBFC                   .DATA.W     H'FBFC
    0000178A 038C                   .DATA.W     H'038C
    0000178C 0318                   .DATA.W     H'0318
    0000178E 029C                   .DATA.W     H'029C
    00001790 0204                   .DATA.W     H'0204
    00001792 0000                   .DATA.W     0
    00001794 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001798 <00000000>             .DATA.L     L745
    0000179C <00000000>             .DATA.L     _InputI
    000017A0 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000017A4 <00000014>             .DATA.L     H'00000014+_ex
    000017A8 <00000000>             .DATA.L     L747
    000017AC <00000000>             .DATA.L     L591
    000017B0 <00000000>             .DATA.L     _string_input
    000017B4 <00000000>             .DATA.L     _memset
    000017B8 <00000000>             .DATA.L     _sprintf
    000017BC <00000000>             .DATA.L     L758
    000017C0 <00000000>             .DATA.L     _ex
    000017C4 <00000000>             .DATA.L     L759
    000017C8 <00000000>             .DATA.L     L760
    000017CC <00000000>             .DATA.L     _PrintMini
    000017D0              L1319:                            
      simplexC.c   909        {
      simplexC.c   910            Bdisp_AllClr_DDVRAM();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   72


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000017D0 D34D                   MOV.L       L1487+16,R3; _Bdisp_AllClr_DDVRAM
    000017D2 430B                   JSR         @R3
    000017D4 0009                   NOP
      simplexC.c   911            
      simplexC.c   912            PrintMini(0,0,  (unsigned char *)stroutTop, MINI_OVER);
    000017D6 E710                   MOV         #16,R7
    000017D8 968E                   MOV.W       L1487,R6   ; H'0384
    000017DA E500                   MOV         #0,R5
    000017DC 36FC                   ADD         R15,R6
    000017DE 4E0B                   JSR         @R14
    000017E0 6453                   MOV         R5,R4
      simplexC.c   913            PrintMini(0,7,  (unsigned char *)stroutBasicInfo, MINI_OVER);
    000017E2 E710                   MOV         #16,R7
    000017E4 9689                   MOV.W       L1487+2,R6 ; H'0304
    000017E6 E507                   MOV         #7,R5
    000017E8 36FC                   ADD         R15,R6
    000017EA 4E0B                   JSR         @R14
    000017EC E400                   MOV         #0,R4
      simplexC.c   914            PrintMini(0,14,  (unsigned char *)stroutBasicInfo2, MINI_OVER);
    000017EE E710                   MOV         #16,R7
    000017F0 9684                   MOV.W       L1487+4,R6 ; H'0284
    000017F2 E50E                   MOV         #14,R5
    000017F4 36FC                   ADD         R15,R6
    000017F6 4E0B                   JSR         @R14
    000017F8 E400                   MOV         #0,R4
      simplexC.c   915            menuChoice = InputI(0, 21);
    000017FA E515                   MOV         #21,R5
    000017FC D243                   MOV.L       L1487+20,R2; _InputI
    000017FE 420B                   JSR         @R2
    00001800 E400                   MOV         #0,R4
      simplexC.c   916            Bdisp_PutDisp_DD();
    00001802 D343                   MOV.L       L1487+24,R3; _Bdisp_PutDisp_DD
    00001804 430B                   JSR         @R3
    00001806 6D03                   MOV         R0,R13
      simplexC.c   917            if(menuChoice<=ex.nVariables)
    00001808 52CB                   MOV.L       @(44,R12),R2
    0000180A 3D27                   CMP/GT      R2,R13
    0000180C 8936                   BT          L1320
    0000180E 69D3                   MOV         R13,R9
    00001810 5BC4                   MOV.L       @(16,R12),R11
    00001812 79FF                   ADD         #-1,R9
    00001814 53C5                   MOV.L       @(20,R12),R3
    00001816 4B08                   SHLL2       R11
    00001818 3B3C                   ADD         R3,R11
    0000181A 6393                   MOV         R9,R3
    0000181C 60B2                   MOV.L       @R11,R0
    0000181E 4308                   SHLL2       R3
    00001820 5002                   MOV.L       @(8,R0),R0
    00001822 023E                   MOV.L       @(R0,R3),R2
    00001824 2228                   TST         R2,R2
    00001826 891E                   BT          L1321
      simplexC.c   918            {
      simplexC.c   919                if(ex.nodes.its[ex.nodes.nIterations]->idBasicVariables[menuChoice-1])
      simplexC.c   920                {
      simplexC.c   921                    for(i=0;i<ex.nodes.its[ex.nodes.nIterations]->BinvSize;i++)
    00001828 A009                   BRA         L1322
    0000182A E400                   MOV         #0,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   73


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000182C              L1323:                            
      simplexC.c   922                    {
      simplexC.c   923                        if(ex.nodes.its[ex.nodes.nIterations]->idByRowOfBasicVarsInBInv[i]==menuChoice-1)
    0000182C 60B2                   MOV.L       @R11,R0
    0000182E 6343                   MOV         R4,R3
    00001830 5003                   MOV.L       @(12,R0),R0
    00001832 4308                   SHLL2       R3
    00001834 023E                   MOV.L       @(R0,R3),R2
    00001836 3290                   CMP/EQ      R9,R2
    00001838 8B00                   BF          L1324
      simplexC.c   924                        {
      simplexC.c   925                            idBasicVar=i;
    0000183A 2F42                   MOV.L       R4,@R15
    0000183C              L1324:                            
    0000183C 7401                   ADD         #1,R4
    0000183E              L1322:                            
    0000183E 63B2                   MOV.L       @R11,R3
    00001840 5239                   MOV.L       @(36,R3),R2
    00001842 3423                   CMP/GE      R2,R4
    00001844 8BF2                   BF          L1323
      simplexC.c   926                        }
      simplexC.c   927                    }
      simplexC.c   928                    sprintf(stroutVariable, "x%d: %.2f",menuChoice,ex.nodes.its[ex.nodes.nIterations]->xb[idBa
                         +sicVar]);
    00001846 60B2                   MOV.L       @R11,R0
    00001848 63F2                   MOV.L       @R15,R3
    0000184A 4308                   SHLL2       R3
    0000184C 500B                   MOV.L       @(44,R0),R0
    0000184E 003E                   MOV.L       @(R0,R3),R0
    00001850 D230                   MOV.L       L1487+28,R2; __stod
    00001852 7FF8                   ADD         #-8,R15
    00001854 420B                   JSR         @R2
    00001856 2FF6                   MOV.L       R15,@-R15
    00001858 2FD6                   MOV.L       R13,@-R15
    0000185A D32F                   MOV.L       L1487+32,R3; L766
    0000185C 2F36                   MOV.L       R3,@-R15
    0000185E 480B                   JSR         @R8
    00001860 64A3                   MOV         R10,R4
    00001862 A008                   BRA         L1325
    00001864 7F10                   ADD         #16,R15
    00001866              L1321:                            
      simplexC.c   929                }else
      simplexC.c   930                {
      simplexC.c   931                    sprintf(stroutVariable, "x%d: %.2f",menuChoice,0);
    00001866 E300                   MOV         #0,R3
    00001868 D22B                   MOV.L       L1487+32,R2; L766
    0000186A 2F36                   MOV.L       R3,@-R15
    0000186C 2FD6                   MOV.L       R13,@-R15
    0000186E 2F26                   MOV.L       R2,@-R15
    00001870 480B                   JSR         @R8
    00001872 64A3                   MOV         R10,R4
    00001874 7F0C                   ADD         #12,R15
    00001876              L1325:                            
      simplexC.c   932                }
      simplexC.c   933                PrintMini(0,28,(unsigned char*) stroutVariable,MINI_OVER);
    00001876 E710                   MOV         #16,R7
    00001878 A002                   BRA         L1465




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   74


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000187A 66A3                   MOV         R10,R6
    0000187C              L1320:                            
      simplexC.c   934            }else
      simplexC.c   935            {
      simplexC.c   936                PrintMini(0,28,  (unsigned char *)"No var found", MINI_OVER);
    0000187C D627                   MOV.L       L1487+36,R6; L769
    0000187E E710                   MOV         #16,R7
    00001880              L1465:                            
    00001880 E51C                   MOV         #28,R5
    00001882 4E0B                   JSR         @R14
    00001884 E400                   MOV         #0,R4
      simplexC.c   937            }
      simplexC.c   938            PrintMini(0, 35, (unsigned char*)"Press any key to continue", MINI_OVER);
    00001886 E710                   MOV         #16,R7
    00001888 D625                   MOV.L       L1487+40,R6; L591
    0000188A E523                   MOV         #35,R5
    0000188C 4E0B                   JSR         @R14
    0000188E E400                   MOV         #0,R4
      simplexC.c   939            string_input(0, 42, uselessSring);
    00001890 D224                   MOV.L       L1487+44,R2; _string_input
    00001892 66F3                   MOV         R15,R6
    00001894 7604                   ADD         #4,R6
    00001896 E52A                   MOV         #42,R5
    00001898 420B                   JSR         @R2
    0000189A E400                   MOV         #0,R4
      simplexC.c   940            Bdisp_PutDisp_DD();
    0000189C D31C                   MOV.L       L1487+24,R3; _Bdisp_PutDisp_DD
    0000189E 430B                   JSR         @R3
    000018A0 0009                   NOP
      simplexC.c   941            memset(stroutVariable,0,128);
    000018A2 E500                   MOV         #0,R5
    000018A4 D220                   MOV.L       L1487+48,R2; _memset
    000018A6 962A                   MOV.W       L1487+6,R6 ; H'0080
    000018A8 420B                   JSR         @R2
    000018AA 64A3                   MOV         R10,R4
    000018AC              L1318:                            
    000018AC 2DD8                   TST         R13,R13
    000018AE 8B8F                   BF          L1319
      simplexC.c   942            
      simplexC.c   943        }
      simplexC.c   944        return 0;
      simplexC.c   945    }
    000018B0 9126                   MOV.W       L1487+8,R1 ; H'0404
    000018B2 E000                   MOV         #0,R0
    000018B4 3F1C                   ADD         R1,R15
    000018B6 4F26                   LDS.L       @R15+,PR
    000018B8 68F6                   MOV.L       @R15+,R8
    000018BA 69F6                   MOV.L       @R15+,R9
    000018BC 6AF6                   MOV.L       @R15+,R10
    000018BE 6BF6                   MOV.L       @R15+,R11
    000018C0 6CF6                   MOV.L       @R15+,R12
    000018C2 6DF6                   MOV.L       @R15+,R13
    000018C4 000B                   RTS
    000018C6 6EF6                   MOV.L       @R15+,R14
      simplexC.c   946    
      simplexC.c   947    int printCValuesByIt(int itId)
    000018C8              _printCValuesByIt:               ; function: printCValuesByIt




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   75


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=824
                                                           ; used runtime library name:
                                                           ; __stod
    000018C8 2FE6                   MOV.L       R14,@-R15
    000018CA 6343                   MOV         R4,R3
    000018CC 9019                   MOV.W       L1487+10,R0; H'FCF8
      simplexC.c   948    {
      simplexC.c   949        char stroutBasicInfo[128],stroutBasicInfo2[128];
      simplexC.c   950        int menuChoice;
      simplexC.c   951        char *uselessSring[128];
      simplexC.c   952        menuChoice=INITIALIZE_VALUE_OPT;
    000018CE EEFF                   MOV         #-1,R14
    000018D0 2FD6                   MOV.L       R13,@-R15
    000018D2 4308                   SHLL2       R3
    000018D4 2FC6                   MOV.L       R12,@-R15
    000018D6 2FB6                   MOV.L       R11,@-R15
    000018D8 2FA6                   MOV.L       R10,@-R15
    000018DA 2F96                   MOV.L       R9,@-R15
    000018DC 2F86                   MOV.L       R8,@-R15
    000018DE 4F22                   STS.L       PR,@-R15
    000018E0 D812                   MOV.L       L1487+52,R8; _ex
    000018E2 3F0C                   ADD         R0,R15
    000018E4 D912                   MOV.L       L1487+56,R9; _sprintf
    000018E6 2F42                   MOV.L       R4,@R15
    000018E8 DA09                   MOV.L       L1487+24,R10; _Bdisp_PutDisp_DD
    000018EA 9B0B                   MOV.W       L1487+12,R11; H'0288
    000018EC 9C0B                   MOV.W       L1487+14,R12; H'0208
    000018EE 3BFC                   ADD         R15,R11
    000018F0 DD10                   MOV.L       L1487+60,R13; _PrintMini
    000018F2 3CFC                   ADD         R15,R12
      simplexC.c   953        while(menuChoice!=EXIT_OPT)
    000018F4 A069                   BRA         L1328
    000018F6 1F31                   MOV.L       R3,@(4,R15)
    000018F8              L1487:                            
    000018F8 0384                   .DATA.W     H'0384
    000018FA 0304                   .DATA.W     H'0304
    000018FC 0284                   .DATA.W     H'0284
    000018FE 0080                   .DATA.W     H'0080
    00001900 0404                   .DATA.W     H'0404
    00001902 FCF8                   .DATA.W     H'FCF8
    00001904 0288                   .DATA.W     H'0288
    00001906 0208                   .DATA.W     H'0208
    00001908 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    0000190C <00000000>             .DATA.L     _InputI
    00001910 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00001914 <00000000>             .DATA.L     __stod
    00001918 <00000000>             .DATA.L     L766
    0000191C <00000000>             .DATA.L     L769
    00001920 <00000000>             .DATA.L     L591
    00001924 <00000000>             .DATA.L     _string_input
    00001928 <00000000>             .DATA.L     _memset
    0000192C <00000000>             .DATA.L     _ex
    00001930 <00000000>             .DATA.L     _sprintf
    00001934 <00000000>             .DATA.L     _PrintMini
    00001938              L1329:                            
      simplexC.c   954        {
      simplexC.c   955            Bdisp_AllClr_DDVRAM();




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   76


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001938 D140                   MOV.L       L1488+10,R1; _Bdisp_AllClr_DDVRAM
    0000193A 410B                   JSR         @R1
    0000193C 0009                   NOP
      simplexC.c   956            sprintf(stroutBasicInfo, "Cvals itId %d. Vars: %d.  %d exit",itId, ex.nVariables,EXIT_OPT);
    0000193E E200                   MOV         #0,R2
    00001940 2F26                   MOV.L       R2,@-R15
    00001942 538B                   MOV.L       @(44,R8),R3
    00001944 2F36                   MOV.L       R3,@-R15
    00001946 51F2                   MOV.L       @(8,R15),R1
    00001948 D33D                   MOV.L       L1488+14,R3; L778
    0000194A 2F16                   MOV.L       R1,@-R15
    0000194C 2F36                   MOV.L       R3,@-R15
    0000194E 490B                   JSR         @R9
    00001950 64B3                   MOV         R11,R4
    00001952 7F10                   ADD         #16,R15
      simplexC.c   957            PrintMini(0, 0, (unsigned char*)stroutBasicInfo, MINI_OVER);
    00001954 E710                   MOV         #16,R7
    00001956 66B3                   MOV         R11,R6
    00001958 E500                   MOV         #0,R5
    0000195A 4D0B                   JSR         @R13
    0000195C 6453                   MOV         R5,R4
      simplexC.c   958            menuChoice = InputI(0, 7);
    0000195E E507                   MOV         #7,R5
    00001960 D238                   MOV.L       L1488+18,R2; _InputI
    00001962 420B                   JSR         @R2
    00001964 E400                   MOV         #0,R4
      simplexC.c   959            Bdisp_PutDisp_DD();
    00001966 4A0B                   JSR         @R10
    00001968 6E03                   MOV         R0,R14
      simplexC.c   960            if(menuChoice!=EXIT_OPT && menuChoice<= ex.nVariables)
    0000196A 2EE8                   TST         R14,R14
    0000196C 8928                   BT          L1330
    0000196E D336                   MOV.L       L1488+22,R3; H'0000002C+_ex
    00001970 6232                   MOV.L       @R3,R2
    00001972 3E27                   CMP/GT      R2,R14
    00001974 8924                   BT          L1330
      simplexC.c   961            {
      simplexC.c   962                sprintf(stroutBasicInfo2, "Pos %d: %.2f",menuChoice,getCurrentCvectorValues(ex.nodes.its[itId]
                         +)[menuChoice-1]);
    00001976 53F1                   MOV.L       @(4,R15),R3
    00001978 5085                   MOV.L       @(20,R8),R0
    0000197A D234                   MOV.L       L1488+26,R2; _getCurrentCvectorValues
    0000197C 420B                   JSR         @R2
    0000197E 043E                   MOV.L       @(R0,R3),R4
    00001980 D233                   MOV.L       L1488+30,R2; __stod
    00001982 63E3                   MOV         R14,R3
    00001984 73FF                   ADD         #-1,R3
    00001986 4308                   SHLL2       R3
    00001988 003E                   MOV.L       @(R0,R3),R0
    0000198A 7FF8                   ADD         #-8,R15
    0000198C 420B                   JSR         @R2
    0000198E 2FF6                   MOV.L       R15,@-R15
    00001990 2FE6                   MOV.L       R14,@-R15
    00001992 D330                   MOV.L       L1488+34,R3; L694
    00001994 2F36                   MOV.L       R3,@-R15
    00001996 490B                   JSR         @R9
    00001998 64C3                   MOV         R12,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   77


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000199A 7F10                   ADD         #16,R15
      simplexC.c   963                PrintMini(0,14,(unsigned char*) stroutBasicInfo2,MINI_OVER);
    0000199C E710                   MOV         #16,R7
    0000199E 66C3                   MOV         R12,R6
    000019A0 E50E                   MOV         #14,R5
    000019A2 4D0B                   JSR         @R13
    000019A4 E400                   MOV         #0,R4
      simplexC.c   964                PrintMini(0, 21, (unsigned char*)"Press any key to continue", MINI_OVER);
    000019A6 E710                   MOV         #16,R7
    000019A8 D62B                   MOV.L       L1488+38,R6; L591
    000019AA E515                   MOV         #21,R5
    000019AC 4D0B                   JSR         @R13
    000019AE E400                   MOV         #0,R4
      simplexC.c   965                string_input(0, 28, uselessSring);
    000019B0 D22A                   MOV.L       L1488+42,R2; _string_input
    000019B2 66F3                   MOV         R15,R6
    000019B4 7608                   ADD         #8,R6
    000019B6 E51C                   MOV         #28,R5
    000019B8 420B                   JSR         @R2
    000019BA E400                   MOV         #0,R4
      simplexC.c   966                Bdisp_PutDisp_DD();
    000019BC 4A0B                   JSR         @R10
    000019BE 0009                   NOP
    000019C0              L1330:                            
      simplexC.c   967            }
      simplexC.c   968            memset(stroutBasicInfo2,0,128);
    000019C0 9637                   MOV.W       L1488,R6   ; H'0080
    000019C2 E500                   MOV         #0,R5
    000019C4 D326                   MOV.L       L1488+46,R3; _memset
    000019C6 430B                   JSR         @R3
    000019C8 64C3                   MOV         R12,R4
    000019CA              L1328:                            
    000019CA 2EE8                   TST         R14,R14
    000019CC 8BB4                   BF          L1329
      simplexC.c   969        }
      simplexC.c   970        return 0;
    000019CE E000                   MOV         #0,R0
      simplexC.c   971    }
    000019D0 9130                   MOV.W       L1488+2,R1 ; H'0308
    000019D2 3F1C                   ADD         R1,R15
    000019D4 4F26                   LDS.L       @R15+,PR
    000019D6 68F6                   MOV.L       @R15+,R8
    000019D8 69F6                   MOV.L       @R15+,R9
    000019DA 6AF6                   MOV.L       @R15+,R10
    000019DC 6BF6                   MOV.L       @R15+,R11
    000019DE 6CF6                   MOV.L       @R15+,R12
    000019E0 6DF6                   MOV.L       @R15+,R13
    000019E2 000B                   RTS
    000019E4 6EF6                   MOV.L       @R15+,R14
      simplexC.c   972    
      simplexC.c   973    int printBinvByIt(int itId)
    000019E6              _printBinvByIt:                  ; function: printBinvByIt
                                                           ; frame size=824
                                                           ; used runtime library name:
                                                           ; __stod
      simplexC.c   974    {
      simplexC.c   975        char stroutBasicInfo[128],stroutBasicInfo2[128];




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   78


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   976        int menuChoiceRow,menuChoiceColumn;
      simplexC.c   977        char *uselessSring[128];
      simplexC.c   978        menuChoiceRow=INITIALIZE_VALUE_OPT;
      simplexC.c   979        menuChoiceColumn=INITIALIZE_VALUE_OPT;
      simplexC.c   980        sprintf(stroutBasicInfo, "Binv itId %d. S: %d.  %d exit",itId, ex.nodes.its[itId]->BinvSize,EXIT_OPT);
    000019E6 E300                   MOV         #0,R3
    000019E8 D21E                   MOV.L       L1488+50,R2; H'00000014+_ex
    000019EA 2FE6                   MOV.L       R14,@-R15
    000019EC 2FD6                   MOV.L       R13,@-R15
    000019EE 2FC6                   MOV.L       R12,@-R15
    000019F0 2FB6                   MOV.L       R11,@-R15
    000019F2 2FA6                   MOV.L       R10,@-R15
    000019F4 2F96                   MOV.L       R9,@-R15
    000019F6 2F86                   MOV.L       R8,@-R15
    000019F8 4F22                   STS.L       PR,@-R15
    000019FA 901C                   MOV.W       L1488+4,R0 ; H'FCFC
    000019FC 3F0C                   ADD         R0,R15
    000019FE 2F42                   MOV.L       R4,@R15
    00001A00 2F36                   MOV.L       R3,@-R15
    00001A02 E4FF                   MOV         #-1,R4
    00001A04 59F1                   MOV.L       @(4,R15),R9
    00001A06 6D43                   MOV         R4,R13
    00001A08 6022                   MOV.L       @R2,R0
    00001A0A 6C43                   MOV         R4,R12
    00001A0C D317                   MOV.L       L1488+58,R3; _sprintf
    00001A0E 4908                   SHLL2       R9
    00001A10 9412                   MOV.W       L1488+6,R4 ; H'0294
    00001A12 019E                   MOV.L       @(R0,R9),R1
    00001A14 5019                   MOV.L       @(36,R1),R0
    00001A16 2F06                   MOV.L       R0,@-R15
    00001A18 51F2                   MOV.L       @(8,R15),R1
    00001A1A 2F16                   MOV.L       R1,@-R15
    00001A1C D112                   MOV.L       L1488+54,R1; L788
    00001A1E 2F16                   MOV.L       R1,@-R15
    00001A20 430B                   JSR         @R3
    00001A22 34FC                   ADD         R15,R4
    00001A24 9805                   MOV.W       L1488,R8   ; H'0080
    00001A26 7F10                   ADD         #16,R15
    00001A28 9A07                   MOV.W       L1488+8,R10; H'0204
    00001A2A DB11                   MOV.L       L1488+62,R11; _Bdisp_PutDisp_DD
    00001A2C DE11                   MOV.L       L1488+66,R14; _PrintMini
      simplexC.c   981    
      simplexC.c   982        while(menuChoiceRow!=EXIT_OPT && menuChoiceColumn!=EXIT_OPT)
    00001A2E A081                   BRA         L1332
    00001A30 3AFC                   ADD         R15,R10
    00001A32              L1488:                            
    00001A32 0080                   .DATA.W     H'0080
    00001A34 0308                   .DATA.W     H'0308
    00001A36 FCFC                   .DATA.W     H'FCFC
    00001A38 0294                   .DATA.W     H'0294
    00001A3A 0204                   .DATA.W     H'0204
    00001A3C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001A40 <00000000>             .DATA.L     L778
    00001A44 <00000000>             .DATA.L     _InputI
    00001A48 <0000002C>             .DATA.L     H'0000002C+_ex
    00001A4C <00000000>             .DATA.L     _getCurrentCvectorValues
    00001A50 <00000000>             .DATA.L     __stod




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   79


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001A54 <00000000>             .DATA.L     L694
    00001A58 <00000000>             .DATA.L     L591
    00001A5C <00000000>             .DATA.L     _string_input
    00001A60 <00000000>             .DATA.L     _memset
    00001A64 <00000014>             .DATA.L     H'00000014+_ex
    00001A68 <00000000>             .DATA.L     L788
    00001A6C <00000000>             .DATA.L     _sprintf
    00001A70 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00001A74 <00000000>             .DATA.L     _PrintMini
    00001A78              L1333:                            
      simplexC.c   983        {
      simplexC.c   984            Bdisp_AllClr_DDVRAM();
    00001A78 D34A                   MOV.L       L1489+12,R3; _Bdisp_AllClr_DDVRAM
    00001A7A 430B                   JSR         @R3
    00001A7C 0009                   NOP
      simplexC.c   985            PrintMini(0, 0, (unsigned char*)stroutBasicInfo, MINI_OVER);
    00001A7E E710                   MOV         #16,R7
    00001A80 968A                   MOV.W       L1489,R6   ; H'0284
    00001A82 E500                   MOV         #0,R5
    00001A84 36FC                   ADD         R15,R6
    00001A86 4E0B                   JSR         @R14
    00001A88 6453                   MOV         R5,R4
      simplexC.c   986            PrintMini(0, 7, (unsigned char*)"Row: ", MINI_OVER);
    00001A8A E710                   MOV         #16,R7
    00001A8C D646                   MOV.L       L1489+16,R6; L790
    00001A8E E507                   MOV         #7,R5
    00001A90 4E0B                   JSR         @R14
    00001A92 E400                   MOV         #0,R4
      simplexC.c   987            menuChoiceRow = InputI(0, 14);
    00001A94 D245                   MOV.L       L1489+20,R2; _InputI
    00001A96 E50E                   MOV         #14,R5
    00001A98 420B                   JSR         @R2
    00001A9A E400                   MOV         #0,R4
      simplexC.c   988            Bdisp_PutDisp_DD();
    00001A9C 4B0B                   JSR         @R11
    00001A9E 6D03                   MOV         R0,R13
      simplexC.c   989            PrintMini(0, 21, (unsigned char*)"Column: ", MINI_OVER);
    00001AA0 D643                   MOV.L       L1489+24,R6; L791
    00001AA2 E515                   MOV         #21,R5
    00001AA4 E710                   MOV         #16,R7
    00001AA6 4E0B                   JSR         @R14
    00001AA8 E400                   MOV         #0,R4
      simplexC.c   990            menuChoiceColumn = InputI(0, 28);
    00001AAA E51C                   MOV         #28,R5
    00001AAC D33F                   MOV.L       L1489+20,R3; _InputI
    00001AAE 430B                   JSR         @R3
    00001AB0 E400                   MOV         #0,R4
      simplexC.c   991            Bdisp_PutDisp_DD();
    00001AB2 4B0B                   JSR         @R11
    00001AB4 6C03                   MOV         R0,R12
      simplexC.c   992            if(menuChoiceRow!=EXIT_OPT && menuChoiceRow <= ex.nodes.its[itId]->BinvSize
      simplexC.c   993                && menuChoiceColumn!=EXIT_OPT && menuChoiceColumn <= ex.nodes.its[itId]->BinvSize)
    00001AB6 2DD8                   TST         R13,R13
    00001AB8 8937                   BT          L1334
    00001ABA D33E                   MOV.L       L1489+28,R3; H'00000014+_ex
    00001ABC 6032                   MOV.L       @R3,R0
    00001ABE 029E                   MOV.L       @(R0,R9),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   80


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001AC0 5129                   MOV.L       @(36,R2),R1
    00001AC2 3D17                   CMP/GT      R1,R13
    00001AC4 8931                   BT          L1334
    00001AC6 2CC8                   TST         R12,R12
    00001AC8 892F                   BT          L1334
    00001ACA D23A                   MOV.L       L1489+28,R2; H'00000014+_ex
    00001ACC 6022                   MOV.L       @R2,R0
    00001ACE 019E                   MOV.L       @(R0,R9),R1
    00001AD0 5119                   MOV.L       @(36,R1),R1
    00001AD2 3C17                   CMP/GT      R1,R12
    00001AD4 8929                   BT          L1334
      simplexC.c   994            {
      simplexC.c   995                sprintf(stroutBasicInfo2, "B[%d][%d]: %.2f",menuChoiceRow,menuChoiceColumn,ex.nodes.its[itId]-
                         +>Binv[menuChoiceRow-1][menuChoiceColumn-1]);
    00001AD6 62D3                   MOV         R13,R2
    00001AD8 D336                   MOV.L       L1489+28,R3; H'00000014+_ex
    00001ADA 61C3                   MOV         R12,R1
    00001ADC 6032                   MOV.L       @R3,R0
    00001ADE 72FF                   ADD         #-1,R2
    00001AE0 009E                   MOV.L       @(R0,R9),R0
    00001AE2 71FF                   ADD         #-1,R1
    00001AE4 5008                   MOV.L       @(32,R0),R0
    00001AE6 4208                   SHLL2       R2
    00001AE8 002E                   MOV.L       @(R0,R2),R0
    00001AEA 4108                   SHLL2       R1
    00001AEC D232                   MOV.L       L1489+32,R2; __stod
    00001AEE 001E                   MOV.L       @(R0,R1),R0
    00001AF0 7FF8                   ADD         #-8,R15
    00001AF2 420B                   JSR         @R2
    00001AF4 2FF6                   MOV.L       R15,@-R15
    00001AF6 2FC6                   MOV.L       R12,@-R15
    00001AF8 2FD6                   MOV.L       R13,@-R15
    00001AFA D130                   MOV.L       L1489+36,R1; L793
    00001AFC D230                   MOV.L       L1489+40,R2; _sprintf
    00001AFE 2F16                   MOV.L       R1,@-R15
    00001B00 420B                   JSR         @R2
    00001B02 64A3                   MOV         R10,R4
    00001B04 7F14                   ADD         #20,R15
      simplexC.c   996                PrintMini(0,35,(unsigned char*) stroutBasicInfo2,MINI_OVER);
    00001B06 E710                   MOV         #16,R7
    00001B08 66A3                   MOV         R10,R6
    00001B0A E523                   MOV         #35,R5
    00001B0C 4E0B                   JSR         @R14
    00001B0E E400                   MOV         #0,R4
      simplexC.c   997                PrintMini(0, 42, (unsigned char*)"Press any key to continue", MINI_OVER);
    00001B10 D62C                   MOV.L       L1489+44,R6; L591
    00001B12 E52A                   MOV         #42,R5
    00001B14 E710                   MOV         #16,R7
    00001B16 4E0B                   JSR         @R14
    00001B18 E400                   MOV         #0,R4
      simplexC.c   998                string_input(0, 49, uselessSring);
    00001B1A 66F3                   MOV         R15,R6
    00001B1C D32A                   MOV.L       L1489+48,R3; _string_input
    00001B1E E531                   MOV         #49,R5
    00001B20 7604                   ADD         #4,R6
    00001B22 430B                   JSR         @R3
    00001B24 E400                   MOV         #0,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   81


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c   999                Bdisp_PutDisp_DD();
    00001B26 4B0B                   JSR         @R11
    00001B28 0009                   NOP
    00001B2A              L1334:                            
      simplexC.c  1000            }
      simplexC.c  1001            memset(stroutBasicInfo2,0,128);
    00001B2A 6683                   MOV         R8,R6
    00001B2C D227                   MOV.L       L1489+52,R2; _memset
    00001B2E E500                   MOV         #0,R5
    00001B30 420B                   JSR         @R2
    00001B32 64A3                   MOV         R10,R4
    00001B34              L1332:                            
    00001B34 2DD8                   TST         R13,R13
    00001B36 8901                   BT          L1335
    00001B38 2CC8                   TST         R12,R12
    00001B3A 8B9D                   BF          L1333
    00001B3C              L1335:                            
      simplexC.c  1002        }
      simplexC.c  1003        return 0;
      simplexC.c  1004    }
    00001B3C 912D                   MOV.W       L1489+2,R1 ; H'0304
    00001B3E E000                   MOV         #0,R0
    00001B40 3F1C                   ADD         R1,R15
    00001B42 4F26                   LDS.L       @R15+,PR
    00001B44 68F6                   MOV.L       @R15+,R8
    00001B46 69F6                   MOV.L       @R15+,R9
    00001B48 6AF6                   MOV.L       @R15+,R10
    00001B4A 6BF6                   MOV.L       @R15+,R11
    00001B4C 6CF6                   MOV.L       @R15+,R12
    00001B4E 6DF6                   MOV.L       @R15+,R13
    00001B50 000B                   RTS
    00001B52 6EF6                   MOV.L       @R15+,R14
      simplexC.c  1005    
      simplexC.c  1006    int printZjAndCjMinusZj(int itId)
    00001B54              _printZjAndCjMinusZj:            ; function: printZjAndCjMinusZj
                                                           ; frame size=1092
                                                           ; used runtime library name:
                                                           ; __stod
    00001B54 2FE6                   MOV.L       R14,@-R15
      simplexC.c  1007    {
      simplexC.c  1008        char stroutTop[128],stroutBasicInfo[128],stroutBasicInfo2[128],stroutVariable[128];
      simplexC.c  1009        char *uselessSring[128];
      simplexC.c  1010        int menuChoice,i,idBasicVar;
      simplexC.c  1011        menuChoice=INITIALIZE_VALUE_OPT;
      simplexC.c  1012        sprintf(stroutBasicInfo, "Zj & cj-zj itId %d. S: %d.  %d exit",itId, ex.nVariables,EXIT_OPT);
    00001B56 E300                   MOV         #0,R3
    00001B58 9020                   MOV.W       L1489+4,R0 ; H'FBF4
    00001B5A EEFF                   MOV         #-1,R14
    00001B5C 2FD6                   MOV.L       R13,@-R15
    00001B5E 2FC6                   MOV.L       R12,@-R15
    00001B60 2FB6                   MOV.L       R11,@-R15
    00001B62 2FA6                   MOV.L       R10,@-R15
    00001B64 2F96                   MOV.L       R9,@-R15
    00001B66 2F86                   MOV.L       R8,@-R15
    00001B68 4F22                   STS.L       PR,@-R15
    00001B6A 3F0C                   ADD         R0,R15
    00001B6C D918                   MOV.L       L1489+56,R9; _ex




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   82


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001B6E 2F42                   MOV.L       R4,@R15
    00001B70 DA13                   MOV.L       L1489+40,R10; _sprintf
    00001B72 2F36                   MOV.L       R3,@-R15
    00001B74 529B                   MOV.L       @(44,R9),R2
    00001B76 2F26                   MOV.L       R2,@-R15
    00001B78 51F2                   MOV.L       @(8,R15),R1
    00001B7A 2F16                   MOV.L       R1,@-R15
    00001B7C D215                   MOV.L       L1489+60,R2; L805
    00001B7E 2F26                   MOV.L       R2,@-R15
    00001B80 940D                   MOV.W       L1489+6,R4 ; H'031C
    00001B82 4A0B                   JSR         @R10
    00001B84 34FC                   ADD         R15,R4
    00001B86 7F10                   ADD         #16,R15
    00001B88 D813                   MOV.L       L1489+64,R8; _Bdisp_PutDisp_DD
    00001B8A 63F2                   MOV.L       @R15,R3
    00001B8C DC13                   MOV.L       L1489+68,R12; _PrintMini
    00001B8E 4308                   SHLL2       R3
    00001B90 9D06                   MOV.W       L1489+8,R13; H'020C
    00001B92 1F31                   MOV.L       R3,@(4,R15)
      simplexC.c  1013    
      simplexC.c  1014    
      simplexC.c  1015        while(menuChoice!=EXIT_OPT)
    00001B94 A079                   BRA         L1337
    00001B96 3DFC                   ADD         R15,R13
    00001B98              L1489:                            
    00001B98 0284                   .DATA.W     H'0284
    00001B9A 0304                   .DATA.W     H'0304
    00001B9C FBF4                   .DATA.W     H'FBF4
    00001B9E 031C                   .DATA.W     H'031C
    00001BA0 020C                   .DATA.W     H'020C
    00001BA2 0000                   .DATA.W     0
    00001BA4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001BA8 <00000000>             .DATA.L     L790
    00001BAC <00000000>             .DATA.L     _InputI
    00001BB0 <00000000>             .DATA.L     L791
    00001BB4 <00000014>             .DATA.L     H'00000014+_ex
    00001BB8 <00000000>             .DATA.L     __stod
    00001BBC <00000000>             .DATA.L     L793
    00001BC0 <00000000>             .DATA.L     _sprintf
    00001BC4 <00000000>             .DATA.L     L591
    00001BC8 <00000000>             .DATA.L     _string_input
    00001BCC <00000000>             .DATA.L     _memset
    00001BD0 <00000000>             .DATA.L     _ex
    00001BD4 <00000000>             .DATA.L     L805
    00001BD8 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00001BDC <00000000>             .DATA.L     _PrintMini
    00001BE0              L1338:                            
      simplexC.c  1016        {
      simplexC.c  1017            Bdisp_AllClr_DDVRAM();
    00001BE0 D34B                   MOV.L       L1490+12,R3; _Bdisp_AllClr_DDVRAM
    00001BE2 430B                   JSR         @R3
    00001BE4 0009                   NOP
      simplexC.c  1018            
      simplexC.c  1019            PrintMini(0,0,  (unsigned char *)stroutBasicInfo, MINI_OVER);
    00001BE6 E710                   MOV         #16,R7
    00001BE8 968C                   MOV.W       L1490,R6   ; H'030C
    00001BEA E500                   MOV         #0,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   83


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001BEC 36FC                   ADD         R15,R6
    00001BEE 4C0B                   JSR         @R12
    00001BF0 6453                   MOV         R5,R4
      simplexC.c  1020            menuChoice = InputI(0, 7);
    00001BF2 E507                   MOV         #7,R5
    00001BF4 D247                   MOV.L       L1490+16,R2; _InputI
    00001BF6 420B                   JSR         @R2
    00001BF8 E400                   MOV         #0,R4
      simplexC.c  1021            Bdisp_PutDisp_DD();
    00001BFA 480B                   JSR         @R8
    00001BFC 6E03                   MOV         R0,R14
      simplexC.c  1022            if(menuChoice<=ex.nVariables && menuChoice!=EXIT_OPT)
    00001BFE 539B                   MOV.L       @(44,R9),R3
    00001C00 3E37                   CMP/GT      R3,R14
    00001C02 8930                   BT          L1339
    00001C04 2EE8                   TST         R14,R14
    00001C06 892E                   BT          L1339
    00001C08 5295                   MOV.L       @(20,R9),R2
    00001C0A 6BE3                   MOV         R14,R11
    00001C0C 2F22                   MOV.L       R2,@R15
    00001C0E 6023                   MOV         R2,R0
    00001C10 53F1                   MOV.L       @(4,R15),R3
    00001C12 7BFF                   ADD         #-1,R11
    00001C14 003E                   MOV.L       @(R0,R3),R0
    00001C16 4B08                   SHLL2       R11
    00001C18 5002                   MOV.L       @(8,R0),R0
    00001C1A 03BE                   MOV.L       @(R0,R11),R3
    00001C1C 2338                   TST         R3,R3
    00001C1E 8B17                   BF          L1340
      simplexC.c  1023            {
      simplexC.c  1024                if(!ex.nodes.its[itId]->idBasicVariables[menuChoice-1])
      simplexC.c  1025                {
      simplexC.c  1026                    sprintf(stroutVariable, "Zj%d: %.2f. Cj-Zj: %.2f",menuChoice,
      simplexC.c  1027                        ex.nodes.its[itId]->zj[menuChoice-1],ex.nodes.its[itId]->cjMinusZj[menuChoice-1]);
    00001C20 51F1                   MOV.L       @(4,R15),R1
    00001C22 60F2                   MOV.L       @R15,R0
    00001C24 D33C                   MOV.L       L1490+20,R3; __stod
    00001C26 001E                   MOV.L       @(R0,R1),R0
    00001C28 1F02                   MOV.L       R0,@(8,R15)
    00001C2A 500E                   MOV.L       @(56,R0),R0
    00001C2C 00BE                   MOV.L       @(R0,R11),R0
    00001C2E 7FF8                   ADD         #-8,R15
    00001C30 430B                   JSR         @R3
    00001C32 2FF6                   MOV.L       R15,@-R15
    00001C34 50F4                   MOV.L       @(16,R15),R0
    00001C36 500D                   MOV.L       @(52,R0),R0
    00001C38 D337                   MOV.L       L1490+20,R3; __stod
    00001C3A 00BE                   MOV.L       @(R0,R11),R0
    00001C3C 7FF8                   ADD         #-8,R15
    00001C3E 430B                   JSR         @R3
    00001C40 2FF6                   MOV.L       R15,@-R15
    00001C42 2FE6                   MOV.L       R14,@-R15
    00001C44 D235                   MOV.L       L1490+24,R2; L809
    00001C46 2F26                   MOV.L       R2,@-R15
    00001C48 4A0B                   JSR         @R10
    00001C4A 64D3                   MOV         R13,R4
    00001C4C A006                   BRA         L1341




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   84


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001C4E 7F18                   ADD         #24,R15
    00001C50              L1340:                            
      simplexC.c  1028                }else
      simplexC.c  1029                {
      simplexC.c  1030                    sprintf(stroutVariable, "x%d: is a basic var",menuChoice);
    00001C50 2FE6                   MOV.L       R14,@-R15
    00001C52 D233                   MOV.L       L1490+28,R2; L811
    00001C54 2F26                   MOV.L       R2,@-R15
    00001C56 4A0B                   JSR         @R10
    00001C58 64D3                   MOV         R13,R4
    00001C5A 7F08                   ADD         #8,R15
    00001C5C              L1341:                            
      simplexC.c  1031                }
      simplexC.c  1032                PrintMini(0,14,(unsigned char*) stroutVariable,MINI_OVER);
    00001C5C E710                   MOV         #16,R7
    00001C5E 66D3                   MOV         R13,R6
    00001C60 E50E                   MOV         #14,R5
    00001C62 4C0B                   JSR         @R12
    00001C64 E400                   MOV         #0,R4
    00001C66              L1339:                            
      simplexC.c  1033            }
      simplexC.c  1034            PrintMini(0, 21, (unsigned char*)"Press any key to continue", MINI_OVER);
    00001C66 E710                   MOV         #16,R7
    00001C68 D62E                   MOV.L       L1490+32,R6; L591
    00001C6A E515                   MOV         #21,R5
    00001C6C 4C0B                   JSR         @R12
    00001C6E E400                   MOV         #0,R4
      simplexC.c  1035            string_input(0, 28, uselessSring);
    00001C70 D32D                   MOV.L       L1490+36,R3; _string_input
    00001C72 66F3                   MOV         R15,R6
    00001C74 760C                   ADD         #12,R6
    00001C76 E51C                   MOV         #28,R5
    00001C78 430B                   JSR         @R3
    00001C7A E400                   MOV         #0,R4
      simplexC.c  1036            Bdisp_PutDisp_DD();
    00001C7C 480B                   JSR         @R8
    00001C7E 0009                   NOP
      simplexC.c  1037            memset(stroutVariable,0,128);
    00001C80 9641                   MOV.W       L1490+2,R6 ; H'0080
    00001C82 E500                   MOV         #0,R5
    00001C84 D229                   MOV.L       L1490+40,R2; _memset
    00001C86 420B                   JSR         @R2
    00001C88 64D3                   MOV         R13,R4
    00001C8A              L1337:                            
    00001C8A 2EE8                   TST         R14,R14
    00001C8C 8BA8                   BF          L1338
      simplexC.c  1038            
      simplexC.c  1039        }
      simplexC.c  1040        return 0;
    00001C8E E000                   MOV         #0,R0
      simplexC.c  1041    }
    00001C90 913A                   MOV.W       L1490+4,R1 ; H'040C
    00001C92 3F1C                   ADD         R1,R15
    00001C94 4F26                   LDS.L       @R15+,PR
    00001C96 68F6                   MOV.L       @R15+,R8
    00001C98 69F6                   MOV.L       @R15+,R9
    00001C9A 6AF6                   MOV.L       @R15+,R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   85


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001C9C 6BF6                   MOV.L       @R15+,R11
    00001C9E 6CF6                   MOV.L       @R15+,R12
    00001CA0 6DF6                   MOV.L       @R15+,R13
    00001CA2 000B                   RTS
    00001CA4 6EF6                   MOV.L       @R15+,R14
      simplexC.c  1042    
      simplexC.c  1043    int printIteration(int itId)
    00001CA6              _printIteration:                 ; function: printIteration
                                                           ; frame size=312
                                                           ; used runtime library name:
                                                           ; __stod
      simplexC.c  1044    {
      simplexC.c  1045        char stroutTop[128],stroutTop2[128];
      simplexC.c  1046        int menuChoice;
      simplexC.c  1047        menuChoice=INITIALIZE_VALUE_OPT;
      simplexC.c  1048        sprintf(stroutTop,"It %d.ZSol: %.2f Exit %d", itId,ex.nodes.its[itId]->zSol, EXIT_OPT);
    00001CA6 E300                   MOV         #0,R3
    00001CA8 D121                   MOV.L       L1490+44,R1; H'00000014+_ex
    00001CAA 2FE6                   MOV.L       R14,@-R15
    00001CAC 2FD6                   MOV.L       R13,@-R15
    00001CAE 6D43                   MOV         R4,R13
    00001CB0 2FC6                   MOV.L       R12,@-R15
    00001CB2 ECFF                   MOV         #-1,R12
    00001CB4 2FB6                   MOV.L       R11,@-R15
    00001CB6 2FA6                   MOV.L       R10,@-R15
    00001CB8 2F96                   MOV.L       R9,@-R15
    00001CBA 2F86                   MOV.L       R8,@-R15
    00001CBC 4F22                   STS.L       PR,@-R15
    00001CBE 9024                   MOV.W       L1490+6,R0 ; H'FEFC
    00001CC0 9B24                   MOV.W       L1490+8,R11; H'0084
    00001CC2 3F0C                   ADD         R0,R15
    00001CC4 3BFC                   ADD         R15,R11
    00001CC6 60D3                   MOV         R13,R0
    00001CC8 2F36                   MOV.L       R3,@-R15
    00001CCA 4008                   SHLL2       R0
    00001CCC 1F01                   MOV.L       R0,@(4,R15)
    00001CCE E344                   MOV         #68,R3
    00001CD0 6212                   MOV.L       @R1,R2
    00001CD2 002E                   MOV.L       @(R0,R2),R0
    00001CD4 003E                   MOV.L       @(R0,R3),R0
    00001CD6 7FF8                   ADD         #-8,R15
    00001CD8 D30F                   MOV.L       L1490+20,R3; __stod
    00001CDA 430B                   JSR         @R3
    00001CDC 2FF6                   MOV.L       R15,@-R15
    00001CDE 2FD6                   MOV.L       R13,@-R15
    00001CE0 D214                   MOV.L       L1490+48,R2; L818
    00001CE2 2F26                   MOV.L       R2,@-R15
    00001CE4 D314                   MOV.L       L1490+52,R3; _sprintf
    00001CE6 430B                   JSR         @R3
    00001CE8 64B3                   MOV         R11,R4
    00001CEA 7F14                   ADD         #20,R15
      simplexC.c  1049        sprintf(stroutTop2,"VarIn: %d, VarOut: %d. %s",ex.nodes.its[itId]->idVarIn,ex.nodes.its[itId]->idVarOu
                         +t,ex.nodes.its[itId]->is2FasesActive ? "2fases": "");
    00001CEC D310                   MOV.L       L1490+44,R3; H'00000014+_ex
    00001CEE 6AF3                   MOV         R15,R10
    00001CF0 62F2                   MOV.L       @R15,R2
    00001CF2 6032                   MOV.L       @R3,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   86


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001CF4 0E2E                   MOV.L       @(R0,R2),R14
    00001CF6 51E1                   MOV.L       @(4,R14),R1
    00001CF8 2118                   TST         R1,R1
    00001CFA 8D21                   BT/S        L1343
    00001CFC 7A04                   ADD         #4,R10
    00001CFE D10F                   MOV.L       L1490+56,R1; L820
    00001D00 A020                   BRA         L1344
    00001D02 2F16                   MOV.L       R1,@-R15
    00001D04              L1490:                            
    00001D04 030C                   .DATA.W     H'030C
    00001D06 0080                   .DATA.W     H'0080
    00001D08 040C                   .DATA.W     H'040C
    00001D0A FEFC                   .DATA.W     H'FEFC
    00001D0C 0084                   .DATA.W     H'0084
    00001D0E 0000                   .DATA.W     0
    00001D10 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001D14 <00000000>             .DATA.L     _InputI
    00001D18 <00000000>             .DATA.L     __stod
    00001D1C <00000000>             .DATA.L     L809
    00001D20 <00000000>             .DATA.L     L811
    00001D24 <00000000>             .DATA.L     L591
    00001D28 <00000000>             .DATA.L     _string_input
    00001D2C <00000000>             .DATA.L     _memset
    00001D30 <00000014>             .DATA.L     H'00000014+_ex
    00001D34 <00000000>             .DATA.L     L818
    00001D38 <00000000>             .DATA.L     _sprintf
    00001D3C <00000000>             .DATA.L     L820
    00001D40              L1343:                            
    00001D40 D23B                   MOV.L       L1491+2,R2 ; L821
    00001D42 2F26                   MOV.L       R2,@-R15
    00001D44              L1344:                            
    00001D44 51E6                   MOV.L       @(24,R14),R1
    00001D46 2F16                   MOV.L       R1,@-R15
    00001D48 53E5                   MOV.L       @(20,R14),R3
    00001D4A 2F36                   MOV.L       R3,@-R15
    00001D4C D239                   MOV.L       L1491+6,R2 ; L819
    00001D4E 2F26                   MOV.L       R2,@-R15
    00001D50 D339                   MOV.L       L1491+10,R3; _sprintf
    00001D52 430B                   JSR         @R3
    00001D54 64A3                   MOV         R10,R4
    00001D56 D839                   MOV.L       L1491+14,R8; L823
    00001D58 D939                   MOV.L       L1491+18,R9; _Bdisp_AllClr_DDVRAM
    00001D5A DE3A                   MOV.L       L1491+22,R14; _PrintMini
      simplexC.c  1050        while(menuChoice!=EXIT_OPT)
    00001D5C A086                   BRA         L1345
    00001D5E 7F10                   ADD         #16,R15
    00001D60              L1346:                            
      simplexC.c  1051        {
      simplexC.c  1052            Bdisp_AllClr_DDVRAM();
    00001D60 490B                   JSR         @R9
    00001D62 0009                   NOP
      simplexC.c  1053            
      simplexC.c  1054            PrintMini(0,0,  (unsigned char *)stroutTop, MINI_OVER);
    00001D64 E710                   MOV         #16,R7
    00001D66 66B3                   MOV         R11,R6
    00001D68 E500                   MOV         #0,R5
    00001D6A 4E0B                   JSR         @R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   87


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001D6C 6453                   MOV         R5,R4
      simplexC.c  1055            PrintMini(0,7,  (unsigned char *)stroutTop2, MINI_OVER);
    00001D6E E710                   MOV         #16,R7
    00001D70 66A3                   MOV         R10,R6
    00001D72 E507                   MOV         #7,R5
    00001D74 4E0B                   JSR         @R14
    00001D76 E400                   MOV         #0,R4
      simplexC.c  1056            PrintMini(0,14, (unsigned char*)"1 Binv. 2 xb. 3 ct", MINI_OVER);
    00001D78 E710                   MOV         #16,R7
    00001D7A 6683                   MOV         R8,R6
    00001D7C E50E                   MOV         #14,R5
    00001D7E 4E0B                   JSR         @R14
    00001D80 E400                   MOV         #0,R4
      simplexC.c  1057            PrintMini(0, 21, (unsigned char*)"4 CtBinv", MINI_OVER);
    00001D82 E710                   MOV         #16,R7
    00001D84 D630                   MOV.L       L1491+26,R6; L824
    00001D86 E515                   MOV         #21,R5
    00001D88 4E0B                   JSR         @R14
    00001D8A E400                   MOV         #0,R4
      simplexC.c  1058            PrintMini(0, 28, (unsigned char*)"5 zj and cj-zj", MINI_OVER);
    00001D8C D62F                   MOV.L       L1491+30,R6; L825
    00001D8E E51C                   MOV         #28,R5
    00001D90 E710                   MOV         #16,R7
    00001D92 4E0B                   JSR         @R14
    00001D94 E400                   MOV         #0,R4
      simplexC.c  1059            PrintMini(0, 35, (unsigned char*)"6 yj & xb/yj", MINI_OVER);
    00001D96 E710                   MOV         #16,R7
    00001D98 D62D                   MOV.L       L1491+34,R6; L826
    00001D9A E523                   MOV         #35,R5
    00001D9C 4E0B                   JSR         @R14
    00001D9E E400                   MOV         #0,R4
      simplexC.c  1060            PrintMini(0, 42, (unsigned char*)"7 aj. 8 Cv", MINI_OVER);
    00001DA0 D62C                   MOV.L       L1491+38,R6; L827
    00001DA2 E52A                   MOV         #42,R5
    00001DA4 E710                   MOV         #16,R7
    00001DA6 4E0B                   JSR         @R14
    00001DA8 E400                   MOV         #0,R4
      simplexC.c  1061            PrintMini(0, 49, (unsigned char*)"9 basic vars B", MINI_OVER);
    00001DAA E710                   MOV         #16,R7
    00001DAC D62A                   MOV.L       L1491+42,R6; L828
    00001DAE E531                   MOV         #49,R5
    00001DB0 4E0B                   JSR         @R14
    00001DB2 E400                   MOV         #0,R4
      simplexC.c  1062            menuChoice = InputI(0, 56);
    00001DB4 D329                   MOV.L       L1491+46,R3; _InputI
    00001DB6 E538                   MOV         #56,R5
    00001DB8 430B                   JSR         @R3
    00001DBA E400                   MOV         #0,R4
      simplexC.c  1063            Bdisp_PutDisp_DD();
    00001DBC D228                   MOV.L       L1491+50,R2; _Bdisp_PutDisp_DD
    00001DBE 420B                   JSR         @R2
    00001DC0 6C03                   MOV         R0,R12
      simplexC.c  1064            switch (menuChoice)
    00001DC2 60C3                   MOV         R12,R0
    00001DC4 8801                   CMP/EQ      #1,R0
    00001DC6 8911                   BT          L1113
    00001DC8 8802                   CMP/EQ      #2,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   88


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001DCA 8913                   BT          L1114
    00001DCC 8803                   CMP/EQ      #3,R0
    00001DCE 8915                   BT          L1115
    00001DD0 8804                   CMP/EQ      #4,R0
    00001DD2 8917                   BT          L1116
    00001DD4 8805                   CMP/EQ      #5,R0
    00001DD6 8919                   BT          L1117
    00001DD8 8806                   CMP/EQ      #6,R0
    00001DDA 891B                   BT          L1118
    00001DDC 8807                   CMP/EQ      #7,R0
    00001DDE 891D                   BT          L1119
    00001DE0 8808                   CMP/EQ      #8,R0
    00001DE2 8920                   BT          L1120
    00001DE4 8809                   CMP/EQ      #9,R0
    00001DE6 893F                   BT          L1121
    00001DE8 A040                   BRA         L1345
    00001DEA 0009                   NOP
    00001DEC              L1113:                           ; case label 
      simplexC.c  1065            {
      simplexC.c  1066                case 1: printBinvByIt(itId);break;
    00001DEC BDFB                   BSR         _printBinvByIt
    00001DEE 64D3                   MOV         R13,R4
    00001DF0 A03C                   BRA         L1345
    00001DF2 0009                   NOP
    00001DF4              L1114:                           ; case label 
      simplexC.c  1067                case 2: printXbByIt(itId);break;
    00001DF4 B9F7                   BSR         _printXbByIt
    00001DF6 64D3                   MOV         R13,R4
    00001DF8 A038                   BRA         L1345
    00001DFA 0009                   NOP
    00001DFC              L1115:                           ; case label 
      simplexC.c  1068                case 3: printCtVecByIt(itId);break;
    00001DFC B970                   BSR         _printCtVecByIt
    00001DFE 64D3                   MOV         R13,R4
    00001E00 A034                   BRA         L1345
    00001E02 0009                   NOP
    00001E04              L1116:                           ; case label 
      simplexC.c  1069                case 4: printCtBinvByIt(itId);break;
    00001E04 BB94                   BSR         _printCtBinvByIt
    00001E06 64D3                   MOV         R13,R4
    00001E08 A030                   BRA         L1345
    00001E0A 0009                   NOP
    00001E0C              L1117:                           ; case label 
      simplexC.c  1070                case 5: printZjAndCjMinusZj(itId);break;
    00001E0C BEA2                   BSR         _printZjAndCjMinusZj
    00001E0E 64D3                   MOV         R13,R4
    00001E10 A02C                   BRA         L1345
    00001E12 0009                   NOP
    00001E14              L1118:                           ; case label 
      simplexC.c  1071                case 6: printYandXbDivYByIt(itId);break;
    00001E14 BA77                   BSR         _printYandXbDivYByIt
    00001E16 64D3                   MOV         R13,R4
    00001E18 A028                   BRA         L1345
    00001E1A 0009                   NOP
    00001E1C              L1119:                           ; case label 
      simplexC.c  1072                case 7: printAjVec();break;
    00001E1C D311                   MOV.L       L1491+54,R3; _printAjVec




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   89


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001E1E 430B                   JSR         @R3
    00001E20 0009                   NOP
    00001E22 A023                   BRA         L1345
    00001E24 0009                   NOP
    00001E26              L1120:                           ; case label 
      simplexC.c  1073                case 8: printCValuesByIt(itId);break;
    00001E26 BD4F                   BSR         _printCValuesByIt
    00001E28 64D3                   MOV         R13,R4
    00001E2A A01F                   BRA         L1345
    00001E2C 0009                   NOP
    00001E2E              L1491:                            
    00001E2E 0000                   .DATA.W     0
    00001E30 <00000000>             .DATA.L     L821
    00001E34 <00000000>             .DATA.L     L819
    00001E38 <00000000>             .DATA.L     _sprintf
    00001E3C <00000000>             .DATA.L     L823
    00001E40 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001E44 <00000000>             .DATA.L     _PrintMini
    00001E48 <00000000>             .DATA.L     L824
    00001E4C <00000000>             .DATA.L     L825
    00001E50 <00000000>             .DATA.L     L826
    00001E54 <00000000>             .DATA.L     L827
    00001E58 <00000000>             .DATA.L     L828
    00001E5C <00000000>             .DATA.L     _InputI
    00001E60 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00001E64 <00000000>             .DATA.L     _printAjVec
    00001E68              L1121:                           ; case label 
      simplexC.c  1074                case 9: printBasicVarsBbyIt(itId);break;
    00001E68 BBD3                   BSR         _printBasicVarsBbyIt
    00001E6A 64D3                   MOV         R13,R4
      simplexC.c  1075                default: break;
    00001E6C              L1345:                            
    00001E6C 2CC8                   TST         R12,R12
    00001E6E 8901                   BT          L1492
    00001E70 AF76                   BRA         L1346
    00001E72 0009                   NOP
    00001E74              L1492:                            
      simplexC.c  1076            }
      simplexC.c  1077        }
      simplexC.c  1078        return 0;
      simplexC.c  1079    }
    00001E74 9179                   MOV.W       L1493,R1   ; H'0104
    00001E76 E000                   MOV         #0,R0
    00001E78 3F1C                   ADD         R1,R15
    00001E7A 4F26                   LDS.L       @R15+,PR
    00001E7C 68F6                   MOV.L       @R15+,R8
    00001E7E 69F6                   MOV.L       @R15+,R9
    00001E80 6AF6                   MOV.L       @R15+,R10
    00001E82 6BF6                   MOV.L       @R15+,R11
    00001E84 6CF6                   MOV.L       @R15+,R12
    00001E86 6DF6                   MOV.L       @R15+,R13
    00001E88 000B                   RTS
    00001E8A 6EF6                   MOV.L       @R15+,R14
      simplexC.c  1080    
      simplexC.c  1081    int printIts()
    00001E8C              _printIts:                       ; function: printIts
                                                           ; frame size=428




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   90


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001E8C 2FE6                   MOV.L       R14,@-R15
      simplexC.c  1082    {
      simplexC.c  1083    
      simplexC.c  1084        char stroutTop[128],stroutBasicInfo[128],stroutBasicInfo2[128];
      simplexC.c  1085        int menuChoice;
      simplexC.c  1086        menuChoice=INITIALIZE_VALUE_OPT_ITS_MENU;
    00001E8E E3FE                   MOV         #-2,R3
      simplexC.c  1087        sprintf(stroutTop,"Its sel. Nits: %d. Exit %d", ex.nodes.nIterations, EXIT_OPT_ITS_MENU);
    00001E90 D139                   MOV.L       L1493+14,R1; L836
    00001E92 2FD6                   MOV.L       R13,@-R15
    00001E94 2FC6                   MOV.L       R12,@-R15
    00001E96 2FB6                   MOV.L       R11,@-R15
    00001E98 2FA6                   MOV.L       R10,@-R15
    00001E9A 2F96                   MOV.L       R9,@-R15
    00001E9C 4F22                   STS.L       PR,@-R15
    00001E9E 9065                   MOV.W       L1493+2,R0 ; H'FE7C
    00001EA0 9C63                   MOV.W       L1493,R12  ; H'0104
    00001EA2 3F0C                   ADD         R0,R15
    00001EA4 DD33                   MOV.L       L1493+10,R13; _ex
    00001EA6 3CFC                   ADD         R15,R12
    00001EA8 2F32                   MOV.L       R3,@R15
    00001EAA E3FF                   MOV         #-1,R3
    00001EAC 2F36                   MOV.L       R3,@-R15
    00001EAE 52D4                   MOV.L       @(16,R13),R2
    00001EB0 2F26                   MOV.L       R2,@-R15
    00001EB2 2F16                   MOV.L       R1,@-R15
    00001EB4 D231                   MOV.L       L1493+18,R2; _sprintf
    00001EB6 420B                   JSR         @R2
    00001EB8 64C3                   MOV         R12,R4
    00001EBA 7F0C                   ADD         #12,R15
      simplexC.c  1088    
      simplexC.c  1089        while(menuChoice!=EXIT_OPT_ITS_MENU)
    00001EBC D930                   MOV.L       L1493+22,R9; _Bdisp_PutDisp_DD
    00001EBE DA31                   MOV.L       L1493+26,R10; _PrintMini
    00001EC0 DB31                   MOV.L       L1493+30,R11; _Bdisp_AllClr_DDVRAM
    00001EC2              L1350:                            
      simplexC.c  1090        {
      simplexC.c  1091            Bdisp_AllClr_DDVRAM();
    00001EC2 4B0B                   JSR         @R11
    00001EC4 0009                   NOP
      simplexC.c  1092            
      simplexC.c  1093            PrintMini(0,0,  (unsigned char *)stroutTop, MINI_OVER);
    00001EC6 E710                   MOV         #16,R7
    00001EC8 66C3                   MOV         R12,R6
    00001ECA E500                   MOV         #0,R5
    00001ECC 4A0B                   JSR         @R10
    00001ECE 6453                   MOV         R5,R4
      simplexC.c  1094            menuChoice = InputI(0, 7);
    00001ED0 D32E                   MOV.L       L1493+34,R3; _InputI
    00001ED2 E507                   MOV         #7,R5
    00001ED4 430B                   JSR         @R3
    00001ED6 E400                   MOV         #0,R4
      simplexC.c  1095            Bdisp_PutDisp_DD();
    00001ED8 490B                   JSR         @R9
    00001EDA 6E03                   MOV         R0,R14
      simplexC.c  1096            if(menuChoice<=ex.nodes.nIterations && menuChoice!=EXIT_OPT_ITS_MENU)
    00001EDC 52D4                   MOV.L       @(16,R13),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   91


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001EDE 3E27                   CMP/GT      R2,R14
    00001EE0 8904                   BT          L1351
    00001EE2 60E3                   MOV         R14,R0
    00001EE4 88FF                   CMP/EQ      #-1,R0
    00001EE6 8901                   BT          L1351
      simplexC.c  1097            {
      simplexC.c  1098                printIteration(menuChoice);
    00001EE8 BEDD                   BSR         _printIteration
    00001EEA 64E3                   MOV         R14,R4
    00001EEC              L1351:                            
    00001EEC 60E3                   MOV         R14,R0
    00001EEE 88FF                   CMP/EQ      #-1,R0
    00001EF0 8BE7                   BF          L1350
      simplexC.c  1099            }
      simplexC.c  1100        }
      simplexC.c  1101        return 0;
    00001EF2 E000                   MOV         #0,R0
      simplexC.c  1102    }
    00001EF4 913B                   MOV.W       L1493+4,R1 ; H'0184
    00001EF6 3F1C                   ADD         R1,R15
    00001EF8 4F26                   LDS.L       @R15+,PR
    00001EFA 69F6                   MOV.L       @R15+,R9
    00001EFC 6AF6                   MOV.L       @R15+,R10
    00001EFE 6BF6                   MOV.L       @R15+,R11
    00001F00 6CF6                   MOV.L       @R15+,R12
    00001F02 6DF6                   MOV.L       @R15+,R13
    00001F04 000B                   RTS
    00001F06 6EF6                   MOV.L       @R15+,R14
      simplexC.c  1103    
      simplexC.c  1104    int printSolMenu()
    00001F08              _printSolMenu:                   ; function: printSolMenu
                                                           ; frame size=436
                                                           ; used runtime library name:
                                                           ; __stod
    00001F08 2FE6                   MOV.L       R14,@-R15
      simplexC.c  1105    {
      simplexC.c  1106        char stroutTop[128],stroutBasicInfo[128],stroutBasicInfo2[128];
      simplexC.c  1107        int menuChoice;
      simplexC.c  1108        menuChoice=INITIALIZE_VALUE_OPT;
      simplexC.c  1109        sprintf(stroutTop,"Problem solution, printMenu. Exit %d", EXIT_OPT);
    00001F0A E300                   MOV         #0,R3
    00001F0C D220                   MOV.L       L1493+38,R2; L845
    00001F0E 2FD6                   MOV.L       R13,@-R15
    00001F10 2FC6                   MOV.L       R12,@-R15
    00001F12 EDFF                   MOV         #-1,R13
    00001F14 D119                   MOV.L       L1493+18,R1; _sprintf
    00001F16 2FB6                   MOV.L       R11,@-R15
    00001F18 2FA6                   MOV.L       R10,@-R15
    00001F1A 2F96                   MOV.L       R9,@-R15
    00001F1C 2F86                   MOV.L       R8,@-R15
    00001F1E 4F22                   STS.L       PR,@-R15
    00001F20 9024                   MOV.W       L1493+2,R0 ; H'FE7C
    00001F22 3F0C                   ADD         R0,R15
    00001F24 9B21                   MOV.W       L1493,R11  ; H'0104
    00001F26 3BFC                   ADD         R15,R11
    00001F28 2F36                   MOV.L       R3,@-R15
    00001F2A 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   92


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001F2C 410B                   JSR         @R1
    00001F2E 64B3                   MOV         R11,R4
      simplexC.c  1110        sprintf(stroutBasicInfo, "Nits: %d, ZSol: %.2f",ex.nodes.nIterations,ex.nodes.its[ex.nodes.nIterations
                         +]->zSol);
    00001F30 9C1E                   MOV.W       L1493+6,R12; H'0084
    00001F32 7F08                   ADD         #8,R15
    00001F34 D317                   MOV.L       L1493+42,R3; H'00000010+_ex
    00001F36 3CFC                   ADD         R15,R12
    00001F38 D117                   MOV.L       L1493+46,R1; H'00000014+_ex
    00001F3A 6032                   MOV.L       @R3,R0
    00001F3C 2F02                   MOV.L       R0,@R15
    00001F3E 4008                   SHLL2       R0
    00001F40 6212                   MOV.L       @R1,R2
    00001F42 002E                   MOV.L       @(R0,R2),R0
    00001F44 E244                   MOV         #68,R2
    00001F46 002E                   MOV.L       @(R0,R2),R0
    00001F48 D214                   MOV.L       L1493+50,R2; __stod
    00001F4A 7FF8                   ADD         #-8,R15
    00001F4C 420B                   JSR         @R2
    00001F4E 2FF6                   MOV.L       R15,@-R15
    00001F50 53F2                   MOV.L       @(8,R15),R3
    00001F52 2F36                   MOV.L       R3,@-R15
    00001F54 D212                   MOV.L       L1493+54,R2; L846
    00001F56 2F26                   MOV.L       R2,@-R15
    00001F58 D308                   MOV.L       L1493+18,R3; _sprintf
    00001F5A 430B                   JSR         @R3
    00001F5C 64C3                   MOV         R12,R4
    00001F5E D811                   MOV.L       L1493+58,R8; L849
    00001F60 D911                   MOV.L       L1493+62,R9; L848
    00001F62 DA09                   MOV.L       L1493+30,R10; _Bdisp_AllClr_DDVRAM
    00001F64 DE07                   MOV.L       L1493+26,R14; _PrintMini
      simplexC.c  1111    
      simplexC.c  1112        while(menuChoice!=EXIT_OPT)
    00001F66 A04B                   BRA         L1353
    00001F68 7F10                   ADD         #16,R15
    00001F6A              L1493:                            
    00001F6A 0104                   .DATA.W     H'0104
    00001F6C FE7C                   .DATA.W     H'FE7C
    00001F6E 0184                   .DATA.W     H'0184
    00001F70 0084                   .DATA.W     H'0084
    00001F72 0000                   .DATA.W     0
    00001F74 <00000000>             .DATA.L     _ex
    00001F78 <00000000>             .DATA.L     L836
    00001F7C <00000000>             .DATA.L     _sprintf
    00001F80 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00001F84 <00000000>             .DATA.L     _PrintMini
    00001F88 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00001F8C <00000000>             .DATA.L     _InputI
    00001F90 <00000000>             .DATA.L     L845
    00001F94 <00000010>             .DATA.L     H'00000010+_ex
    00001F98 <00000014>             .DATA.L     H'00000014+_ex
    00001F9C <00000000>             .DATA.L     __stod
    00001FA0 <00000000>             .DATA.L     L846
    00001FA4 <00000000>             .DATA.L     L849
    00001FA8 <00000000>             .DATA.L     L848
    00001FAC              L1354:                            
      simplexC.c  1113        {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   93


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c  1114            Bdisp_AllClr_DDVRAM();
    00001FAC 4A0B                   JSR         @R10
    00001FAE 0009                   NOP
      simplexC.c  1115            
      simplexC.c  1116            PrintMini(0,0,  (unsigned char *)stroutTop, MINI_OVER);
    00001FB0 E710                   MOV         #16,R7
    00001FB2 66B3                   MOV         R11,R6
    00001FB4 E500                   MOV         #0,R5
    00001FB6 4E0B                   JSR         @R14
    00001FB8 6453                   MOV         R5,R4
      simplexC.c  1117            PrintMini(0,7,  (unsigned char *)stroutBasicInfo, MINI_OVER);
    00001FBA E710                   MOV         #16,R7
    00001FBC 66C3                   MOV         R12,R6
    00001FBE E507                   MOV         #7,R5
    00001FC0 4E0B                   JSR         @R14
    00001FC2 E400                   MOV         #0,R4
      simplexC.c  1118            PrintMini(0, 14, (unsigned char*)"1 Pinfo res vars", MINI_OVER);
    00001FC4 E710                   MOV         #16,R7
    00001FC6 6693                   MOV         R9,R6
    00001FC8 E50E                   MOV         #14,R5
    00001FCA 4E0B                   JSR         @R14
    00001FCC E400                   MOV         #0,R4
      simplexC.c  1119            PrintMini(0, 21, (unsigned char*)"2 Pinfo its", MINI_OVER);
    00001FCE E710                   MOV         #16,R7
    00001FD0 6683                   MOV         R8,R6
    00001FD2 E515                   MOV         #21,R5
    00001FD4 4E0B                   JSR         @R14
    00001FD6 E400                   MOV         #0,R4
      simplexC.c  1120            menuChoice = InputI(0, 28);
    00001FD8 D33C                   MOV.L       L1494+8,R3 ; _InputI
    00001FDA E51C                   MOV         #28,R5
    00001FDC 430B                   JSR         @R3
    00001FDE E400                   MOV         #0,R4
      simplexC.c  1121            Bdisp_PutDisp_DD();
    00001FE0 D23B                   MOV.L       L1494+12,R2; _Bdisp_PutDisp_DD
    00001FE2 420B                   JSR         @R2
    00001FE4 6D03                   MOV         R0,R13
      simplexC.c  1122            switch (menuChoice)
    00001FE6 60D3                   MOV         R13,R0
    00001FE8 8801                   CMP/EQ      #1,R0
    00001FEA 8903                   BT          L1128
    00001FEC 8802                   CMP/EQ      #2,R0
    00001FEE 8905                   BT          L1129
    00001FF0 A006                   BRA         L1353
    00001FF2 0009                   NOP
    00001FF4              L1128:                           ; case label 
      simplexC.c  1123            {
      simplexC.c  1124                case 1: printResVariables();break;
    00001FF4 BB9B                   BSR         _printResVariables
    00001FF6 0009                   NOP
    00001FF8 A002                   BRA         L1353
    00001FFA 0009                   NOP
    00001FFC              L1129:                           ; case label 
      simplexC.c  1125                case 2: printIts();break;
    00001FFC BF46                   BSR         _printIts
    00001FFE 0009                   NOP
      simplexC.c  1126                default: break;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   94


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002000              L1353:                            
    00002000 2DD8                   TST         R13,R13
    00002002 8BD3                   BF          L1354
      simplexC.c  1127            }
      simplexC.c  1128        }
      simplexC.c  1129        return 0;
      simplexC.c  1130    }
    00002004 915E                   MOV.W       L1494,R1   ; H'0184
    00002006 E000                   MOV         #0,R0
    00002008 3F1C                   ADD         R1,R15
    0000200A 4F26                   LDS.L       @R15+,PR
    0000200C 68F6                   MOV.L       @R15+,R8
    0000200E 69F6                   MOV.L       @R15+,R9
    00002010 6AF6                   MOV.L       @R15+,R10
    00002012 6BF6                   MOV.L       @R15+,R11
    00002014 6CF6                   MOV.L       @R15+,R12
    00002016 6DF6                   MOV.L       @R15+,R13
    00002018 000B                   RTS
    0000201A 6EF6                   MOV.L       @R15+,R14
      simplexC.c  1131    
      simplexC.c  1132    int getInequalitySign(int nConstraint, int *nVariablesSlope, int * nVariables2fases)
    0000201C              _getInequalitySign:              ; function: getInequalitySign
                                                           ; frame size=172
    0000201C 2FE6                   MOV.L       R14,@-R15
    0000201E 4F22                   STS.L       PR,@-R15
    00002020 9051                   MOV.W       L1494+2,R0 ; H'FF74
    00002022 3F0C                   ADD         R0,R15
    00002024 2F42                   MOV.L       R4,@R15
    00002026 1F51                   MOV.L       R5,@(4,R15)
      simplexC.c  1133    {   
      simplexC.c  1134        char strout[128];
      simplexC.c  1135        int res;
      simplexC.c  1136        Bdisp_AllClr_DDVRAM();
    00002028 D32A                   MOV.L       L1494+16,R3; _Bdisp_AllClr_DDVRAM
    0000202A 430B                   JSR         @R3
    0000202C 1F62                   MOV.L       R6,@(8,R15)
      simplexC.c  1137        sprintf(strout, "Constraint: %d, Choose Inequality", nConstraint);
    0000202E 6EF3                   MOV         R15,R14
    00002030 62F2                   MOV.L       @R15,R2
    00002032 7E0C                   ADD         #12,R14
    00002034 D328                   MOV.L       L1494+20,R3; L858
    00002036 2F26                   MOV.L       R2,@-R15
    00002038 2F36                   MOV.L       R3,@-R15
    0000203A D228                   MOV.L       L1494+24,R2; _sprintf
    0000203C 420B                   JSR         @R2
    0000203E 64E3                   MOV         R14,R4
      simplexC.c  1138        PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
    00002040 1FE2                   MOV.L       R14,@(8,R15)
    00002042 66E3                   MOV         R14,R6
    00002044 D326                   MOV.L       L1494+28,R3; _PrintMini
    00002046 E710                   MOV         #16,R7
    00002048 E500                   MOV         #0,R5
    0000204A 430B                   JSR         @R3
    0000204C 6453                   MOV         R5,R4
      simplexC.c  1139        sprintf(strout, "Press E: %d, LET %d,  GET %d", 
      simplexC.c  1140            INE_EQUAL ,INE_LESS_OR_EQUAL_THAN,INE_GREATER_OR_EQUAL_THAN);
    0000204E E202                   MOV         #2,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   95


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002050 2F26                   MOV.L       R2,@-R15
    00002052 E301                   MOV         #1,R3
    00002054 D221                   MOV.L       L1494+24,R2; _sprintf
    00002056 E100                   MOV         #0,R1
    00002058 2F36                   MOV.L       R3,@-R15
    0000205A 2F16                   MOV.L       R1,@-R15
    0000205C D321                   MOV.L       L1494+32,R3; L859
    0000205E 2F36                   MOV.L       R3,@-R15
    00002060 420B                   JSR         @R2
    00002062 64E3                   MOV         R14,R4
      simplexC.c  1141        PrintMini(0, 7, (unsigned char *)strout, MINI_OVER);
    00002064 D31E                   MOV.L       L1494+28,R3; _PrintMini
    00002066 7F18                   ADD         #24,R15
    00002068 66F2                   MOV.L       @R15,R6
    0000206A E507                   MOV         #7,R5
    0000206C E710                   MOV         #16,R7
    0000206E 430B                   JSR         @R3
    00002070 E400                   MOV         #0,R4
      simplexC.c  1142        res = InputI(0,14);
    00002072 E50E                   MOV         #14,R5
    00002074 D215                   MOV.L       L1494+8,R2 ; _InputI
    00002076 420B                   JSR         @R2
    00002078 E400                   MOV         #0,R4
      simplexC.c  1143        Bdisp_PutDisp_DD();
    0000207A D315                   MOV.L       L1494+12,R3; _Bdisp_PutDisp_DD
    0000207C 430B                   JSR         @R3
    0000207E 6E03                   MOV         R0,R14
      simplexC.c  1144        switch (res)
    00002080 60E3                   MOV         R14,R0
    00002082 8800                   CMP/EQ      #0,R0
    00002084 8905                   BT          L1133
    00002086 8801                   CMP/EQ      #1,R0
    00002088 8909                   BT          L1134
    0000208A 8802                   CMP/EQ      #2,R0
    0000208C 890C                   BT          L1135
    0000208E A013                   BRA         L1357
    00002090 0009                   NOP
    00002092              L1133:                           ; case label 
      simplexC.c  1145        {
      simplexC.c  1146            case INE_EQUAL: *nVariables2fases+=1; break;
    00002092 52F2                   MOV.L       @(8,R15),R2
    00002094 6322                   MOV.L       @R2,R3
    00002096 7301                   ADD         #1,R3
    00002098 2232                   MOV.L       R3,@R2
    0000209A A00D                   BRA         L1357
    0000209C 0009                   NOP
    0000209E              L1134:                           ; case label 
      simplexC.c  1147            case INE_LESS_OR_EQUAL_THAN: *nVariablesSlope+=1; break;
    0000209E 51F1                   MOV.L       @(4,R15),R1
    000020A0 6312                   MOV.L       @R1,R3
    000020A2 7301                   ADD         #1,R3
    000020A4 A008                   BRA         L1357
    000020A6 2132                   MOV.L       R3,@R1
    000020A8              L1135:                           ; case label 
      simplexC.c  1148            case INE_GREATER_OR_EQUAL_THAN: *nVariablesSlope+=1;*nVariables2fases+=1; break;
    000020A8 51F1                   MOV.L       @(4,R15),R1
    000020AA 6312                   MOV.L       @R1,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   96


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000020AC 7301                   ADD         #1,R3
    000020AE 2132                   MOV.L       R3,@R1
    000020B0 52F2                   MOV.L       @(8,R15),R2
    000020B2 6322                   MOV.L       @R2,R3
    000020B4 7301                   ADD         #1,R3
    000020B6 2232                   MOV.L       R3,@R2
    000020B8              L1357:                            
      simplexC.c  1149        }
      simplexC.c  1150    
      simplexC.c  1151        return res;
      simplexC.c  1152    }
    000020B8 9106                   MOV.W       L1494+4,R1 ; H'008C
    000020BA 60E3                   MOV         R14,R0
    000020BC 3F1C                   ADD         R1,R15
    000020BE 4F26                   LDS.L       @R15+,PR
    000020C0 000B                   RTS
    000020C2 6EF6                   MOV.L       @R15+,R14
    000020C4              L1494:                            
    000020C4 0184                   .DATA.W     H'0184
    000020C6 FF74                   .DATA.W     H'FF74
    000020C8 008C                   .DATA.W     H'008C
    000020CA 0000                   .DATA.W     0
    000020CC <00000000>             .DATA.L     _InputI
    000020D0 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000020D4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000020D8 <00000000>             .DATA.L     L858
    000020DC <00000000>             .DATA.L     _sprintf
    000020E0 <00000000>             .DATA.L     _PrintMini
    000020E4 <00000000>             .DATA.L     L859
      simplexC.c  1153    
      simplexC.c  1154    float getRightValue(int nConstraint)
    000020E8              _getRightValue:                  ; function: getRightValue
                                                           ; frame size=144
    000020E8 4F22                   STS.L       PR,@-R15
    000020EA 9074                   MOV.W       L1495,R0   ; H'FF7C
      simplexC.c  1155    {   
      simplexC.c  1156        char strout[128];
      simplexC.c  1157        float res;
      simplexC.c  1158        Bdisp_AllClr_DDVRAM();
    000020EC D33C                   MOV.L       L1495+10,R3; _Bdisp_AllClr_DDVRAM
    000020EE 3F0C                   ADD         R0,R15
    000020F0 430B                   JSR         @R3
    000020F2 2F42                   MOV.L       R4,@R15
      simplexC.c  1159        sprintf(strout, "Constraint: %d, Right Value", nConstraint);
    000020F4 62F2                   MOV.L       @R15,R2
    000020F6 2F26                   MOV.L       R2,@-R15
    000020F8 D33A                   MOV.L       L1495+14,R3; L866
    000020FA 2F36                   MOV.L       R3,@-R15
    000020FC D23A                   MOV.L       L1495+18,R2; _sprintf
    000020FE 64F3                   MOV         R15,R4
    00002100 420B                   JSR         @R2
    00002102 740C                   ADD         #12,R4
      simplexC.c  1160        PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
    00002104 D339                   MOV.L       L1495+22,R3; _PrintMini
    00002106 E710                   MOV         #16,R7
    00002108 66F3                   MOV         R15,R6
    0000210A 760C                   ADD         #12,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   97


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000210C E500                   MOV         #0,R5
    0000210E 430B                   JSR         @R3
    00002110 6453                   MOV         R5,R4
      simplexC.c  1161        Bdisp_PutDisp_DD();
    00002112 D237                   MOV.L       L1495+26,R2; _Bdisp_PutDisp_DD
    00002114 420B                   JSR         @R2
    00002116 0009                   NOP
      simplexC.c  1162        res = InputD(0,7);
    00002118 D336                   MOV.L       L1495+30,R3; _InputD
    0000211A E507                   MOV         #7,R5
    0000211C 430B                   JSR         @R3
    0000211E E400                   MOV         #0,R4
      simplexC.c  1163        return res;
      simplexC.c  1164    }
    00002120 915A                   MOV.W       L1495+2,R1 ; H'008C
    00002122 3F1C                   ADD         R1,R15
    00002124 4F26                   LDS.L       @R15+,PR
    00002126 000B                   RTS
    00002128 0009                   NOP
      simplexC.c  1165    
      simplexC.c  1166    float *getInequation(unsigned int nVariables, int nConstraint, int *inequalitySign, float *rightValue, int
                         + *nVariablesSlope, int * nVariables2fases)
    0000212A              _getInequation:                  ; function: getInequation
                                                           ; frame size=184
    0000212A 2FE6                   MOV.L       R14,@-R15
    0000212C 2FD6                   MOV.L       R13,@-R15
    0000212E 2FC6                   MOV.L       R12,@-R15
    00002130 2FB6                   MOV.L       R11,@-R15
    00002132 2FA6                   MOV.L       R10,@-R15
    00002134 2F96                   MOV.L       R9,@-R15
    00002136 6A43                   MOV         R4,R10
      simplexC.c  1167    {
      simplexC.c  1168        char strout[128];
      simplexC.c  1169        unsigned int i;
      simplexC.c  1170        float *constraintValues;
      simplexC.c  1171        constraintValues = (float *)malloc(sizeof(float) * nVariables);
    00002138 D32F                   MOV.L       L1495+34,R3; _malloc
    0000213A 6953                   MOV         R5,R9
    0000213C 2F86                   MOV.L       R8,@-R15
    0000213E 64A3                   MOV         R10,R4
    00002140 904B                   MOV.W       L1495+4,R0 ; H'FF74
    00002142 4F22                   STS.L       PR,@-R15
    00002144 3F0C                   ADD         R0,R15
    00002146 1F62                   MOV.L       R6,@(8,R15)
    00002148 1F71                   MOV.L       R7,@(4,R15)
    0000214A 430B                   JSR         @R3
    0000214C 4408                   SHLL2       R4
      simplexC.c  1172        for (i = 0; i < nVariables; i++)
    0000214E EB00                   MOV         #0,R11
    00002150 D826                   MOV.L       L1495+22,R8; _PrintMini
    00002152 6CF3                   MOV         R15,R12
    00002154 2F02                   MOV.L       R0,@R15
    00002156 EE00                   MOV         #0,R14
    00002158 3E0C                   ADD         R0,R14
    0000215A ED01                   MOV         #1,R13
    0000215C 63B3                   MOV         R11,R3
    0000215E 33A2                   CMP/HS      R10,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   98


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002160 8D1D                   BT/S        L1360
    00002162 7C0C                   ADD         #12,R12
    00002164              L1361:                            
      simplexC.c  1173        {
      simplexC.c  1174            Bdisp_AllClr_DDVRAM();
    00002164 D11E                   MOV.L       L1495+10,R1; _Bdisp_AllClr_DDVRAM
    00002166 410B                   JSR         @R1
    00002168 0009                   NOP
      simplexC.c  1175            sprintf(strout, "Constraint: %d, variable: %d", nConstraint, (i + 1));
    0000216A 2FD6                   MOV.L       R13,@-R15
    0000216C 2F96                   MOV.L       R9,@-R15
    0000216E D323                   MOV.L       L1495+38,R3; L879
    00002170 D21D                   MOV.L       L1495+18,R2; _sprintf
    00002172 2F36                   MOV.L       R3,@-R15
    00002174 420B                   JSR         @R2
    00002176 64C3                   MOV         R12,R4
    00002178 7F0C                   ADD         #12,R15
      simplexC.c  1176            PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
    0000217A E710                   MOV         #16,R7
    0000217C 66C3                   MOV         R12,R6
    0000217E E500                   MOV         #0,R5
    00002180 480B                   JSR         @R8
    00002182 6453                   MOV         R5,R4
      simplexC.c  1177            Bdisp_PutDisp_DD();
    00002184 D31A                   MOV.L       L1495+26,R3; _Bdisp_PutDisp_DD
    00002186 430B                   JSR         @R3
    00002188 0009                   NOP
      simplexC.c  1178            constraintValues[i] = InputD(0, 7);
    0000218A E507                   MOV         #7,R5
    0000218C D219                   MOV.L       L1495+30,R2; _InputD
    0000218E 420B                   JSR         @R2
    00002190 E400                   MOV         #0,R4
    00002192 7B01                   ADD         #1,R11
    00002194 2E02                   MOV.L       R0,@R14
    00002196 3BA2                   CMP/HS      R10,R11
    00002198 7E04                   ADD         #4,R14
    0000219A 8FE3                   BF/S        L1361
    0000219C 7D01                   ADD         #1,R13
    0000219E              L1360:                            
      simplexC.c  1179        }
      simplexC.c  1180        *inequalitySign = getInequalitySign(nConstraint, nVariablesSlope,nVariables2fases);
    0000219E 52F2                   MOV.L       @(8,R15),R2
    000021A0 901C                   MOV.W       L1495+6,R0 ; H'00B4
    000021A2 2F26                   MOV.L       R2,@-R15
    000021A4 06FE                   MOV.L       @(R0,R15),R6
    000021A6 901A                   MOV.W       L1495+8,R0 ; H'00B0
    000021A8 05FE                   MOV.L       @(R0,R15),R5
    000021AA BF37                   BSR         _getInequalitySign
    000021AC 6493                   MOV         R9,R4
    000021AE 61F6                   MOV.L       @R15+,R1
    000021B0 2102                   MOV.L       R0,@R1
      simplexC.c  1181        *rightValue = getRightValue(nConstraint);
    000021B2 53F1                   MOV.L       @(4,R15),R3
    000021B4 2F36                   MOV.L       R3,@-R15
    000021B6 BF97                   BSR         _getRightValue
    000021B8 6493                   MOV         R9,R4
    000021BA 62F6                   MOV.L       @R15+,R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE   99


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c  1182        return constraintValues;
      simplexC.c  1183    }
    000021BC 910C                   MOV.W       L1495+2,R1 ; H'008C
    000021BE 2202                   MOV.L       R0,@R2
    000021C0 60F2                   MOV.L       @R15,R0
    000021C2 3F1C                   ADD         R1,R15
    000021C4 4F26                   LDS.L       @R15+,PR
    000021C6 68F6                   MOV.L       @R15+,R8
    000021C8 69F6                   MOV.L       @R15+,R9
    000021CA 6AF6                   MOV.L       @R15+,R10
    000021CC 6BF6                   MOV.L       @R15+,R11
    000021CE 6CF6                   MOV.L       @R15+,R12
    000021D0 6DF6                   MOV.L       @R15+,R13
    000021D2 000B                   RTS
    000021D4 6EF6                   MOV.L       @R15+,R14
    000021D6              L1495:                            
    000021D6 FF7C                   .DATA.W     H'FF7C
    000021D8 008C                   .DATA.W     H'008C
    000021DA FF74                   .DATA.W     H'FF74
    000021DC 00B4                   .DATA.W     H'00B4
    000021DE 00B0                   .DATA.W     H'00B0
    000021E0 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000021E4 <00000000>             .DATA.L     L866
    000021E8 <00000000>             .DATA.L     _sprintf
    000021EC <00000000>             .DATA.L     _PrintMini
    000021F0 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000021F4 <00000000>             .DATA.L     _InputD
    000021F8 <00000000>             .DATA.L     _malloc
    000021FC <00000000>             .DATA.L     L879
      simplexC.c  1184    
      simplexC.c  1185    struct problemStatement* getProblemInputs()
    00002200              _getProblemInputs:               ; function: getProblemInputs
                                                           ; frame size=224
    00002200 2FE6                   MOV.L       R14,@-R15
      simplexC.c  1186    {
      simplexC.c  1187        char strout[128];
      simplexC.c  1188        unsigned int nConstraints;
      simplexC.c  1189        unsigned int nVariables;
      simplexC.c  1190        unsigned int i;
      simplexC.c  1191        int nVariablesInteger;
      simplexC.c  1192        int problemType;
      simplexC.c  1193        float **constraints;
      simplexC.c  1194        float *rightValues;
      simplexC.c  1195        float *funcObjtValues;
      simplexC.c  1196        int *inequalitiesSigns;
      simplexC.c  1197        int *idIntegerVariables;
      simplexC.c  1198        int *idSlopeVariables;
      simplexC.c  1199        int *id2fasesVariables;
      simplexC.c  1200        struct problemStatement *pInput;
      simplexC.c  1201        nVariablesInteger=0;
    00002202 E300                   MOV         #0,R3
    00002204 90B0                   MOV.W       L1496,R0   ; H'FF4C
    00002206 2FD6                   MOV.L       R13,@-R15
    00002208 2FC6                   MOV.L       R12,@-R15
    0000220A 2FB6                   MOV.L       R11,@-R15
    0000220C 2FA6                   MOV.L       R10,@-R15
    0000220E 2F96                   MOV.L       R9,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  100


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002210 2F86                   MOV.L       R8,@-R15
    00002212 4F22                   STS.L       PR,@-R15
      simplexC.c  1202        pInput = malloc(sizeof(struct problemStatement));
    00002214 DA55                   MOV.L       L1496+4,R10; _malloc
    00002216 3F0C                   ADD         R0,R15
    00002218 1F37                   MOV.L       R3,@(28,R15)
    0000221A 4A0B                   JSR         @R10
    0000221C E454                   MOV         #84,R4
      simplexC.c  1203        Bdisp_AllClr_DDVRAM();
    0000221E D354                   MOV.L       L1496+8,R3 ; _Bdisp_AllClr_DDVRAM
    00002220 430B                   JSR         @R3
    00002222 6E03                   MOV         R0,R14
      simplexC.c  1204        PrintMini(0, 0, (unsigned char *)"NConstraints?", MINI_OVER);
    00002224 DB53                   MOV.L       L1496+12,R11; _PrintMini
    00002226 E710                   MOV         #16,R7
    00002228 D653                   MOV.L       L1496+16,R6; L896
    0000222A E500                   MOV         #0,R5
    0000222C 4B0B                   JSR         @R11
    0000222E 6453                   MOV         R5,R4
      simplexC.c  1205        Bdisp_PutDisp_DD();
    00002230 D952                   MOV.L       L1496+20,R9; _Bdisp_PutDisp_DD
    00002232 490B                   JSR         @R9
    00002234 0009                   NOP
      simplexC.c  1206        nConstraints = InputI(0, 7);
    00002236 E507                   MOV         #7,R5
    00002238 D251                   MOV.L       L1496+24,R2; _InputI
    0000223A 420B                   JSR         @R2
    0000223C E400                   MOV         #0,R4
      simplexC.c  1207        PrintMini(0, 14, (unsigned char *)"NVariables?", MINI_OVER);
    0000223E E710                   MOV         #16,R7
    00002240 D650                   MOV.L       L1496+28,R6; L897
    00002242 E50E                   MOV         #14,R5
    00002244 1F02                   MOV.L       R0,@(8,R15)
    00002246 4B0B                   JSR         @R11
    00002248 E400                   MOV         #0,R4
      simplexC.c  1208        Bdisp_PutDisp_DD();
    0000224A 490B                   JSR         @R9
    0000224C 0009                   NOP
      simplexC.c  1209        nVariables = InputI(0, 21);
    0000224E E515                   MOV         #21,R5
    00002250 D34B                   MOV.L       L1496+24,R3; _InputI
    00002252 430B                   JSR         @R3
    00002254 E400                   MOV         #0,R4
    00002256 6C03                   MOV         R0,R12
      simplexC.c  1210        problemType = TYPE_LP;
    00002258 E201                   MOV         #1,R2
    0000225A 1F2C                   MOV.L       R2,@(48,R15)
      simplexC.c  1211        constraints = (float **)malloc(sizeof(float) * nConstraints);
    0000225C 54F2                   MOV.L       @(8,R15),R4
    0000225E 4408                   SHLL2       R4
    00002260 4A0B                   JSR         @R10
    00002262 2F42                   MOV.L       R4,@R15
    00002264 1F06                   MOV.L       R0,@(24,R15)
      simplexC.c  1212        rightValues=calloc(nConstraints,sizeof(float));
    00002266 E504                   MOV         #4,R5
    00002268 DD47                   MOV.L       L1496+32,R13; _calloc
    0000226A 4D0B                   JSR         @R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  101


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000226C 54F2                   MOV.L       @(8,R15),R4
    0000226E 1F08                   MOV.L       R0,@(32,R15)
      simplexC.c  1213        inequalitiesSigns = (int *) malloc(sizeof(int)*nConstraints);
    00002270 4A0B                   JSR         @R10
    00002272 64F2                   MOV.L       @R15,R4
    00002274 1F05                   MOV.L       R0,@(20,R15)
      simplexC.c  1214        funcObjtValues = calloc(nVariables+1,sizeof(float));
    00002276 E504                   MOV         #4,R5
    00002278 64C3                   MOV         R12,R4
    0000227A 4D0B                   JSR         @R13
    0000227C 7401                   ADD         #1,R4
      simplexC.c  1215        idIntegerVariables = calloc(nVariables,sizeof(int));
    0000227E E504                   MOV         #4,R5
    00002280 1F04                   MOV.L       R0,@(16,R15)
    00002282 4D0B                   JSR         @R13
    00002284 64C3                   MOV         R12,R4
      simplexC.c  1216        idSlopeVariables = calloc(nVariables,sizeof(int));
    00002286 E504                   MOV         #4,R5
    00002288 1F09                   MOV.L       R0,@(36,R15)
    0000228A 4D0B                   JSR         @R13
    0000228C 64C3                   MOV         R12,R4
      simplexC.c  1217        id2fasesVariables = calloc(nVariables,sizeof(int));
    0000228E E504                   MOV         #4,R5
    00002290 1F0B                   MOV.L       R0,@(44,R15)
    00002292 4D0B                   JSR         @R13
    00002294 64C3                   MOV         R12,R4
      simplexC.c  1218        pInput->nVariablesSlope=0;
    00002296 E300                   MOV         #0,R3
      simplexC.c  1219        pInput->nVariables2fases=0;
      simplexC.c  1220        for(i=0;i<nVariables;i++)
    00002298 9867                   MOV.W       L1496+2,R8 ; H'0080
    0000229A 6DF3                   MOV         R15,R13
    0000229C 1F0A                   MOV.L       R0,@(40,R15)
    0000229E 6233                   MOV         R3,R2
    000022A0 1E38                   MOV.L       R3,@(32,R14)
    000022A2 1E39                   MOV.L       R3,@(36,R14)
    000022A4 1F31                   MOV.L       R3,@(4,R15)
    000022A6 E301                   MOV         #1,R3
    000022A8 5AF9                   MOV.L       @(36,R15),R10
    000022AA 2F32                   MOV.L       R3,@R15
    000022AC E300                   MOV         #0,R3
    000022AE 3C36                   CMP/HI      R3,R12
    000022B0 8F09                   BF/S        L1363
    000022B2 7D34                   ADD         #52,R13
    000022B4              L1365:                            
    000022B4 53F1                   MOV.L       @(4,R15),R3
    000022B6 7A04                   ADD         #4,R10
    000022B8 7301                   ADD         #1,R3
    000022BA 33C2                   CMP/HS      R12,R3
    000022BC 1F31                   MOV.L       R3,@(4,R15)
    000022BE 62F2                   MOV.L       @R15,R2
    000022C0 7201                   ADD         #1,R2
    000022C2 8FF7                   BF/S        L1365
    000022C4 2F22                   MOV.L       R2,@R15
    000022C6              L1363:                            
      simplexC.c  1221        {
      simplexC.c  1222            if(problemType!=TYPE_LP)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  102


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c  1223            {
      simplexC.c  1224                Bdisp_AllClr_DDVRAM();
      simplexC.c  1225                sprintf(strout,"Variable x%d",i+1);
      simplexC.c  1226                PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
      simplexC.c  1227                PrintMini(0, 7, (unsigned char *)"Press 1 if Int var, 0 no", MINI_OVER);
      simplexC.c  1228                idIntegerVariables[i] = InputI(0, 14);
      simplexC.c  1229                Bdisp_PutDisp_DD();
      simplexC.c  1230                memset(strout,0,128);
      simplexC.c  1231                if(idIntegerVariables[i]==1)
      simplexC.c  1232                {
      simplexC.c  1233                    nVariablesInteger+=1;
      simplexC.c  1234                }
      simplexC.c  1235            }
      simplexC.c  1236        }
      simplexC.c  1237        for (i = 0; i < nConstraints; i++)
    000022C6 E300                   MOV         #0,R3
    000022C8 1F31                   MOV.L       R3,@(4,R15)
    000022CA E201                   MOV         #1,R2
    000022CC 2F22                   MOV.L       R2,@R15
    000022CE 52F2                   MOV.L       @(8,R15),R2
    000022D0 3236                   CMP/HI      R3,R2
    000022D2 8F1D                   BF/S        L1367
    000022D4 6A33                   MOV         R3,R10
    000022D6              L1368:                            
      simplexC.c  1238        {
      simplexC.c  1239            constraints[i] = getInequation(nVariables, i + 1,&inequalitiesSigns[i],&rightValues[i],&pInput->nV
                         +ariablesSlope,&pInput->nVariables2fases);
    000022D6 63E3                   MOV         R14,R3
    000022D8 50F6                   MOV.L       @(24,R15),R0
    000022DA 7324                   ADD         #36,R3
    000022DC 30AC                   ADD         R10,R0
    000022DE 2F06                   MOV.L       R0,@-R15
    000022E0 2F36                   MOV.L       R3,@-R15
    000022E2 63E3                   MOV         R14,R3
    000022E4 7320                   ADD         #32,R3
    000022E6 2F36                   MOV.L       R3,@-R15
    000022E8 57FB                   MOV.L       @(44,R15),R7
    000022EA 37AC                   ADD         R10,R7
    000022EC 56F8                   MOV.L       @(32,R15),R6
    000022EE 36AC                   ADD         R10,R6
    000022F0 55F3                   MOV.L       @(12,R15),R5
    000022F2 BF1A                   BSR         _getInequation
    000022F4 64C3                   MOV         R12,R4
    000022F6 7F08                   ADD         #8,R15
    000022F8 63F6                   MOV.L       @R15+,R3
    000022FA 2302                   MOV.L       R0,@R3
    000022FC 52F1                   MOV.L       @(4,R15),R2
    000022FE 7201                   ADD         #1,R2
    00002300 1F21                   MOV.L       R2,@(4,R15)
    00002302 63F2                   MOV.L       @R15,R3
    00002304 7301                   ADD         #1,R3
    00002306 2F32                   MOV.L       R3,@R15
    00002308 51F2                   MOV.L       @(8,R15),R1
    0000230A 3212                   CMP/HS      R1,R2
    0000230C 8FE3                   BF/S        L1368
    0000230E 7A04                   ADD         #4,R10
    00002310              L1367:                            




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  103


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c  1240        }
      simplexC.c  1241        
      simplexC.c  1242        Bdisp_AllClr_DDVRAM();
    00002310 D317                   MOV.L       L1496+8,R3 ; _Bdisp_AllClr_DDVRAM
    00002312 430B                   JSR         @R3
    00002314 0009                   NOP
      simplexC.c  1243        sprintf(strout,"OBJ. Min: %d, Max %d",FUNC_MINIMIZE,FUNC_MAXIMIZE);
    00002316 E201                   MOV         #1,R2
    00002318 D11C                   MOV.L       L1496+36,R1; L904
    0000231A E300                   MOV         #0,R3
    0000231C 2F26                   MOV.L       R2,@-R15
    0000231E 2F36                   MOV.L       R3,@-R15
    00002320 2F16                   MOV.L       R1,@-R15
    00002322 D31B                   MOV.L       L1496+40,R3; _sprintf
    00002324 430B                   JSR         @R3
    00002326 64D3                   MOV         R13,R4
    00002328 7F0C                   ADD         #12,R15
      simplexC.c  1244        PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
    0000232A E710                   MOV         #16,R7
    0000232C 1FD3                   MOV.L       R13,@(12,R15)
    0000232E 66D3                   MOV         R13,R6
    00002330 E500                   MOV         #0,R5
    00002332 4B0B                   JSR         @R11
    00002334 6453                   MOV         R5,R4
      simplexC.c  1245        pInput->funcObjectivePurpose = InputI(0, 7);
    00002336 E507                   MOV         #7,R5
    00002338 D311                   MOV.L       L1496+24,R3; _InputI
    0000233A 430B                   JSR         @R3
    0000233C E400                   MOV         #0,R4
    0000233E E144                   MOV         #68,R1
    00002340 31EC                   ADD         R14,R1
      simplexC.c  1246        Bdisp_PutDisp_DD();
    00002342 490B                   JSR         @R9
    00002344 2102                   MOV.L       R0,@R1
      simplexC.c  1247        memset(strout,0,128);
    00002346 6683                   MOV         R8,R6
    00002348 D312                   MOV.L       L1496+44,R3; _memset
    0000234A E500                   MOV         #0,R5
    0000234C 430B                   JSR         @R3
    0000234E 64D3                   MOV         R13,R4
      simplexC.c  1248        for(i=0;i<nVariables;i++)
    00002350 E200                   MOV         #0,R2
    00002352 E301                   MOV         #1,R3
    00002354 1F21                   MOV.L       R2,@(4,R15)
    00002356 3C26                   CMP/HI      R2,R12
    00002358 5AF4                   MOV.L       @(16,R15),R10
    0000235A 2F32                   MOV.L       R3,@R15
    0000235C 8B3D                   BF          L1369
    0000235E              L1370:                            
      simplexC.c  1249        {
      simplexC.c  1250            Bdisp_AllClr_DDVRAM();
    0000235E D104                   MOV.L       L1496+8,R1 ; _Bdisp_AllClr_DDVRAM
    00002360 410B                   JSR         @R1
    00002362 0009                   NOP
      simplexC.c  1251            sprintf(strout,"Obj value var x%d",i+1);
    00002364 A018                   BRA         L1466
    00002366 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  104


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002368              L1496:                            
    00002368 FF4C                   .DATA.W     H'FF4C
    0000236A 0080                   .DATA.W     H'0080
    0000236C <00000000>             .DATA.L     _malloc
    00002370 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00002374 <00000000>             .DATA.L     _PrintMini
    00002378 <00000000>             .DATA.L     L896
    0000237C <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00002380 <00000000>             .DATA.L     _InputI
    00002384 <00000000>             .DATA.L     L897
    00002388 <00000000>             .DATA.L     _calloc
    0000238C <00000000>             .DATA.L     L904
    00002390 <00000000>             .DATA.L     _sprintf
    00002394 <00000000>             .DATA.L     _memset
    00002398              L1466:                            
    00002398 63F2                   MOV.L       @R15,R3
    0000239A 2F36                   MOV.L       R3,@-R15
    0000239C D230                   MOV.L       L1497+2,R2 ; L906
    0000239E 2F26                   MOV.L       R2,@-R15
    000023A0 D330                   MOV.L       L1497+6,R3 ; _sprintf
    000023A2 430B                   JSR         @R3
    000023A4 64D3                   MOV         R13,R4
    000023A6 7F08                   ADD         #8,R15
      simplexC.c  1252            PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
    000023A8 56F3                   MOV.L       @(12,R15),R6
    000023AA E500                   MOV         #0,R5
    000023AC E710                   MOV         #16,R7
    000023AE 4B0B                   JSR         @R11
    000023B0 6453                   MOV         R5,R4
      simplexC.c  1253            funcObjtValues[i] = InputD(0, 7);
    000023B2 E507                   MOV         #7,R5
    000023B4 D32C                   MOV.L       L1497+10,R3; _InputD
    000023B6 430B                   JSR         @R3
    000023B8 E400                   MOV         #0,R4
      simplexC.c  1254            Bdisp_PutDisp_DD();
    000023BA 490B                   JSR         @R9
    000023BC 2A02                   MOV.L       R0,@R10
      simplexC.c  1255            memset(strout,0,128);
    000023BE 6683                   MOV         R8,R6
    000023C0 D22A                   MOV.L       L1497+14,R2; _memset
    000023C2 E500                   MOV         #0,R5
    000023C4 420B                   JSR         @R2
    000023C6 64D3                   MOV         R13,R4
    000023C8 53F1                   MOV.L       @(4,R15),R3
    000023CA 7A04                   ADD         #4,R10
    000023CC 7301                   ADD         #1,R3
    000023CE 33C2                   CMP/HS      R12,R3
    000023D0 1F31                   MOV.L       R3,@(4,R15)
    000023D2 62F2                   MOV.L       @R15,R2
    000023D4 7201                   ADD         #1,R2
    000023D6 8FC2                   BF/S        L1370
    000023D8 2F22                   MOV.L       R2,@R15
    000023DA              L1369:                            
      simplexC.c  1256        }
      simplexC.c  1257        Bdisp_AllClr_DDVRAM();
    000023DA D325                   MOV.L       L1497+18,R3; _Bdisp_AllClr_DDVRAM
    000023DC 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  105


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000023DE 0009                   NOP
      simplexC.c  1258        sprintf(strout,"Obj value Independent");
    000023E0 D224                   MOV.L       L1497+22,R2; L907
    000023E2 2F26                   MOV.L       R2,@-R15
    000023E4 D31F                   MOV.L       L1497+6,R3 ; _sprintf
    000023E6 430B                   JSR         @R3
    000023E8 64D3                   MOV         R13,R4
    000023EA 7F04                   ADD         #4,R15
      simplexC.c  1259        PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
    000023EC 56F3                   MOV.L       @(12,R15),R6
    000023EE E500                   MOV         #0,R5
    000023F0 E710                   MOV         #16,R7
    000023F2 4B0B                   JSR         @R11
    000023F4 6453                   MOV         R5,R4
      simplexC.c  1260        funcObjtValues[nVariables] = InputD(0, 7);
    000023F6 63C3                   MOV         R12,R3
    000023F8 50F4                   MOV.L       @(16,R15),R0
    000023FA E507                   MOV         #7,R5
    000023FC 4308                   SHLL2       R3
    000023FE 303C                   ADD         R3,R0
    00002400 2F06                   MOV.L       R0,@-R15
    00002402 D319                   MOV.L       L1497+10,R3; _InputD
    00002404 430B                   JSR         @R3
    00002406 E400                   MOV         #0,R4
    00002408 62F6                   MOV.L       @R15+,R2
      simplexC.c  1261        Bdisp_PutDisp_DD();
    0000240A 490B                   JSR         @R9
    0000240C 2202                   MOV.L       R0,@R2
      simplexC.c  1262        pInput->constraints=constraints;
      simplexC.c  1263        pInput->rightValues=rightValues;
      simplexC.c  1264        pInput->inequalitySigns=inequalitiesSigns;
      simplexC.c  1265        pInput->nVariables=nVariables;
      simplexC.c  1266        pInput->nConstraints=nConstraints;
      simplexC.c  1267        pInput->idIntegerVariables=idIntegerVariables;
      simplexC.c  1268        pInput->idSlopeVariables=idSlopeVariables;
      simplexC.c  1269        pInput->id2fasesVariables=id2fasesVariables;
      simplexC.c  1270        pInput->funcObjtValues=funcObjtValues;
    0000240E E048                   MOV         #72,R0
    00002410 53F6                   MOV.L       @(24,R15),R3
    00002412 1E34                   MOV.L       R3,@(16,R14)
    00002414 52F8                   MOV.L       @(32,R15),R2
    00002416 1E25                   MOV.L       R2,@(20,R14)
    00002418 53F5                   MOV.L       @(20,R15),R3
    0000241A 1E36                   MOV.L       R3,@(24,R14)
    0000241C 1EC7                   MOV.L       R12,@(28,R14)
    0000241E 53F2                   MOV.L       @(8,R15),R3
    00002420 1E3B                   MOV.L       R3,@(44,R14)
    00002422 52F9                   MOV.L       @(36,R15),R2
    00002424 1E2C                   MOV.L       R2,@(48,R14)
    00002426 53FB                   MOV.L       @(44,R15),R3
    00002428 1E3D                   MOV.L       R3,@(52,R14)
    0000242A 52FA                   MOV.L       @(40,R15),R2
    0000242C 1E2E                   MOV.L       R2,@(56,R14)
    0000242E 53F4                   MOV.L       @(16,R15),R3
    00002430 0E36                   MOV.L       R3,@(R0,R14)
      simplexC.c  1271        pInput->nVariablesInteger=nVariablesInteger;
      simplexC.c  1272        pInput->modelType=TYPE_INPUT;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  106


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002432 E301                   MOV         #1,R3
    00002434 52F7                   MOV.L       @(28,R15),R2
      simplexC.c  1273        pInput->problemType=problemType;
      simplexC.c  1274        pInput->is2fasesNeeded=(pInput->nVariables2fases>0)?1:0;
      simplexC.c  1275        return pInput;
    00002436 60E3                   MOV         R14,R0
    00002438 1E2A                   MOV.L       R2,@(40,R14)
    0000243A 1E31                   MOV.L       R3,@(4,R14)
    0000243C 52FC                   MOV.L       @(48,R15),R2
    0000243E 2E22                   MOV.L       R2,@R14
    00002440 51E9                   MOV.L       @(36,R14),R1
    00002442 4115                   CMP/PL      R1
      simplexC.c  1276    }
    00002444 910B                   MOV.W       L1497,R1   ; H'00B4
    00002446 0329                   MOVT        R3
    00002448 1E32                   MOV.L       R3,@(8,R14)
    0000244A 3F1C                   ADD         R1,R15
    0000244C 4F26                   LDS.L       @R15+,PR
    0000244E 68F6                   MOV.L       @R15+,R8
    00002450 69F6                   MOV.L       @R15+,R9
    00002452 6AF6                   MOV.L       @R15+,R10
    00002454 6BF6                   MOV.L       @R15+,R11
    00002456 6CF6                   MOV.L       @R15+,R12
    00002458 6DF6                   MOV.L       @R15+,R13
    0000245A 000B                   RTS
    0000245C 6EF6                   MOV.L       @R15+,R14
    0000245E              L1497:                            
    0000245E 00B4                   .DATA.W     H'00B4
    00002460 <00000000>             .DATA.L     L906
    00002464 <00000000>             .DATA.L     _sprintf
    00002468 <00000000>             .DATA.L     _InputD
    0000246C <00000000>             .DATA.L     _memset
    00002470 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00002474 <00000000>             .DATA.L     L907
      simplexC.c  1277    
      simplexC.c  1278    struct iteration* getProblemFromTableau()
    00002478              _getProblemFromTableau:          ; function: getProblemFromTableau
                                                           ; frame size=208
                                                           ; used runtime library name:
                                                           ; __negs
    00002478 2FE6                   MOV.L       R14,@-R15
    0000247A 2FD6                   MOV.L       R13,@-R15
    0000247C 2FC6                   MOV.L       R12,@-R15
    0000247E 2FB6                   MOV.L       R11,@-R15
    00002480 2FA6                   MOV.L       R10,@-R15
      simplexC.c  1279    {
      simplexC.c  1280        char strout[128];
      simplexC.c  1281        unsigned int nConstraints;
      simplexC.c  1282        unsigned int nVariables;
      simplexC.c  1283        unsigned int i,j;
      simplexC.c  1284        int problemType;
      simplexC.c  1285        struct iteration *it;
      simplexC.c  1286        float ** temporalTableau;
      simplexC.c  1287        it->numIteration=0;
    00002482 EB00                   MOV         #0,R11
      simplexC.c  1288        it = malloc(sizeof(struct iteration));
    00002484 D33C                   MOV.L       L1498+4,R3 ; _malloc




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  107


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002486 2F96                   MOV.L       R9,@-R15
    00002488 2F86                   MOV.L       R8,@-R15
    0000248A 4F22                   STS.L       PR,@-R15
    0000248C 9072                   MOV.W       L1498,R0   ; H'FF5C
    0000248E 3F0C                   ADD         R0,R15
    00002490 2FB2                   MOV.L       R11,@R15
    00002492 430B                   JSR         @R3
    00002494 E448                   MOV         #72,R4
      simplexC.c  1289        Bdisp_AllClr_DDVRAM();
    00002496 D839                   MOV.L       L1498+8,R8 ; _Bdisp_AllClr_DDVRAM
    00002498 480B                   JSR         @R8
    0000249A 6D03                   MOV         R0,R13
      simplexC.c  1290        PrintMini(0, 0, (unsigned char *)"NRows?", MINI_OVER);
    0000249C DA38                   MOV.L       L1498+12,R10; _PrintMini
    0000249E E710                   MOV         #16,R7
    000024A0 D638                   MOV.L       L1498+16,R6; L918
    000024A2 65B3                   MOV         R11,R5
    000024A4 4A0B                   JSR         @R10
    000024A6 64B3                   MOV         R11,R4
      simplexC.c  1291        Bdisp_PutDisp_DD();
    000024A8 D937                   MOV.L       L1498+20,R9; _Bdisp_PutDisp_DD
    000024AA 490B                   JSR         @R9
    000024AC 0009                   NOP
      simplexC.c  1292        nConstraints = InputI(0, 7);
    000024AE E507                   MOV         #7,R5
    000024B0 D236                   MOV.L       L1498+24,R2; _InputI
    000024B2 420B                   JSR         @R2
    000024B4 64B3                   MOV         R11,R4
      simplexC.c  1293        PrintMini(0, 14, (unsigned char *)"NVariables?", MINI_OVER);
    000024B6 E710                   MOV         #16,R7
    000024B8 D635                   MOV.L       L1498+28,R6; L897
    000024BA E50E                   MOV         #14,R5
    000024BC 1F02                   MOV.L       R0,@(8,R15)
    000024BE 4A0B                   JSR         @R10
    000024C0 64B3                   MOV         R11,R4
      simplexC.c  1294        Bdisp_PutDisp_DD();
    000024C2 490B                   JSR         @R9
    000024C4 0009                   NOP
      simplexC.c  1295        nVariables = InputI(0, 21);
    000024C6 E515                   MOV         #21,R5
    000024C8 D330                   MOV.L       L1498+24,R3; _InputI
    000024CA 430B                   JSR         @R3
    000024CC 64B3                   MOV         R11,R4
      simplexC.c  1296        problemType = TYPE_LP;
      simplexC.c  1297        it->BinvSize=nConstraints;
      simplexC.c  1298        it->idBasicVariables=calloc(nVariables,sizeof(float));
    000024CE E504                   MOV         #4,R5
    000024D0 1F03                   MOV.L       R0,@(12,R15)
    000024D2 53F2                   MOV.L       @(8,R15),R3
    000024D4 1D39                   MOV.L       R3,@(36,R13)
    000024D6 D32F                   MOV.L       L1498+32,R3; _calloc
    000024D8 430B                   JSR         @R3
    000024DA 54F3                   MOV.L       @(12,R15),R4
    000024DC 1D02                   MOV.L       R0,@(8,R13)
      simplexC.c  1299        it->idByRowOfBasicVarsInBInv=calloc(it->BinvSize,sizeof(float));
    000024DE E504                   MOV         #4,R5
    000024E0 D22C                   MOV.L       L1498+32,R2; _calloc




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  108


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000024E2 420B                   JSR         @R2
    000024E4 54D9                   MOV.L       @(36,R13),R4
    000024E6 E301                   MOV         #1,R3
      simplexC.c  1300        //Administracion de variables basicas
      simplexC.c  1301        for (i = 0; i < nConstraints; i++)
    000024E8 9C45                   MOV.W       L1498+2,R12; H'0080
    000024EA 6EF3                   MOV         R15,R14
    000024EC 1D03                   MOV.L       R0,@(12,R13)
    000024EE 2FB2                   MOV.L       R11,@R15
    000024F0 1FB5                   MOV.L       R11,@(20,R15)
    000024F2 1F31                   MOV.L       R3,@(4,R15)
    000024F4 52F2                   MOV.L       @(8,R15),R2
    000024F6 63B3                   MOV         R11,R3
    000024F8 3236                   CMP/HI      R3,R2
    000024FA 8F34                   BF/S        L1374
    000024FC 7E24                   ADD         #36,R14
    000024FE              L1375:                            
      simplexC.c  1302        {
      simplexC.c  1303            Bdisp_AllClr_DDVRAM();
    000024FE 480B                   JSR         @R8
    00002500 0009                   NOP
      simplexC.c  1304            sprintf(strout,"id Basic var Row %d",i+1);
    00002502 53F1                   MOV.L       @(4,R15),R3
    00002504 D224                   MOV.L       L1498+36,R2; L920
    00002506 2F36                   MOV.L       R3,@-R15
    00002508 2F26                   MOV.L       R2,@-R15
    0000250A D324                   MOV.L       L1498+40,R3; _sprintf
    0000250C 430B                   JSR         @R3
    0000250E 64E3                   MOV         R14,R4
    00002510 7F08                   ADD         #8,R15
      simplexC.c  1305            PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
    00002512 E710                   MOV         #16,R7
    00002514 66E3                   MOV         R14,R6
    00002516 E500                   MOV         #0,R5
    00002518 4A0B                   JSR         @R10
    0000251A 6453                   MOV         R5,R4
      simplexC.c  1306            it->idByRowOfBasicVarsInBInv[i] = InputI(0, 7) -1;
    0000251C 52F5                   MOV.L       @(20,R15),R2
    0000251E E507                   MOV         #7,R5
    00002520 D31A                   MOV.L       L1498+24,R3; _InputI
    00002522 50D3                   MOV.L       @(12,R13),R0
    00002524 302C                   ADD         R2,R0
    00002526 2F06                   MOV.L       R0,@-R15
    00002528 430B                   JSR         @R3
    0000252A E400                   MOV         #0,R4
    0000252C 61F6                   MOV.L       @R15+,R1
    0000252E 70FF                   ADD         #-1,R0
      simplexC.c  1307            Bdisp_PutDisp_DD();
    00002530 490B                   JSR         @R9
    00002532 2102                   MOV.L       R0,@R1
      simplexC.c  1308            memset(strout,0,128);
    00002534 D31A                   MOV.L       L1498+44,R3; _memset
    00002536 66C3                   MOV         R12,R6
    00002538 E500                   MOV         #0,R5
    0000253A 430B                   JSR         @R3
    0000253C 64E3                   MOV         R14,R4
      simplexC.c  1309            it->idBasicVariables[it->idByRowOfBasicVarsInBInv[i]]=1;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  109


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000253E E101                   MOV         #1,R1
    00002540 52F5                   MOV.L       @(20,R15),R2
    00002542 50D3                   MOV.L       @(12,R13),R0
    00002544 032E                   MOV.L       @(R0,R2),R3
    00002546 4308                   SHLL2       R3
    00002548 50D2                   MOV.L       @(8,R13),R0
    0000254A 0316                   MOV.L       R1,@(R0,R3)
    0000254C 63F2                   MOV.L       @R15,R3
    0000254E 7301                   ADD         #1,R3
    00002550 2F32                   MOV.L       R3,@R15
    00002552 52F5                   MOV.L       @(20,R15),R2
    00002554 7204                   ADD         #4,R2
    00002556 1F25                   MOV.L       R2,@(20,R15)
    00002558 51F1                   MOV.L       @(4,R15),R1
    0000255A 7101                   ADD         #1,R1
    0000255C 1F11                   MOV.L       R1,@(4,R15)
    0000255E 53F2                   MOV.L       @(8,R15),R3
    00002560 60F2                   MOV.L       @R15,R0
    00002562 3032                   CMP/HS      R3,R0
    00002564 8BCB                   BF          L1375
    00002566              L1374:                            
      simplexC.c  1310        }
      simplexC.c  1311        //Valores de las variables en la tabla
      simplexC.c  1312        temporalTableau = calloc(nConstraints,sizeof(float*));
    00002566 E504                   MOV         #4,R5
    00002568 D30A                   MOV.L       L1498+32,R3; _calloc
    0000256A 430B                   JSR         @R3
    0000256C 54F2                   MOV.L       @(8,R15),R4
    0000256E 1F05                   MOV.L       R0,@(20,R15)
      simplexC.c  1313        for(i=0;i<nConstraints;i++)
    00002570 A060                   BRA         L1376
    00002572 1FB4                   MOV.L       R11,@(16,R15)
    00002574              L1498:                            
    00002574 FF5C                   .DATA.W     H'FF5C
    00002576 0080                   .DATA.W     H'0080
    00002578 <00000000>             .DATA.L     _malloc
    0000257C <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00002580 <00000000>             .DATA.L     _PrintMini
    00002584 <00000000>             .DATA.L     L918
    00002588 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    0000258C <00000000>             .DATA.L     _InputI
    00002590 <00000000>             .DATA.L     L897
    00002594 <00000000>             .DATA.L     _calloc
    00002598 <00000000>             .DATA.L     L920
    0000259C <00000000>             .DATA.L     _sprintf
    000025A0 <00000000>             .DATA.L     _memset
    000025A4              L1377:                            
      simplexC.c  1314        {
      simplexC.c  1315            temporalTableau[i]= calloc(nVariables,sizeof(float*));
    000025A4 52F4                   MOV.L       @(16,R15),R2
    000025A6 E504                   MOV         #4,R5
    000025A8 D1A8                   MOV.L       L1499+2,R1 ; _calloc
    000025AA 4208                   SHLL2       R2
    000025AC 53F5                   MOV.L       @(20,R15),R3
    000025AE 323C                   ADD         R3,R2
    000025B0 1F27                   MOV.L       R2,@(28,R15)
    000025B2 2F26                   MOV.L       R2,@-R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  110


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000025B4 410B                   JSR         @R1
    000025B6 54F4                   MOV.L       @(16,R15),R4
    000025B8 63F6                   MOV.L       @R15+,R3
    000025BA 2302                   MOV.L       R0,@R3
      simplexC.c  1316            for(j=0;j<nVariables;j++)
    000025BC 1FB6                   MOV.L       R11,@(24,R15)
    000025BE E301                   MOV         #1,R3
    000025C0 1FB1                   MOV.L       R11,@(4,R15)
    000025C2 2F32                   MOV.L       R3,@R15
    000025C4 52F4                   MOV.L       @(16,R15),R2
    000025C6 E300                   MOV         #0,R3
    000025C8 7201                   ADD         #1,R2
    000025CA 1F28                   MOV.L       R2,@(32,R15)
    000025CC 51F3                   MOV.L       @(12,R15),R1
    000025CE 3136                   CMP/HI      R3,R1
    000025D0 8B2D                   BF          L1378
    000025D2              L1379:                            
      simplexC.c  1317            {
      simplexC.c  1318                Bdisp_AllClr_DDVRAM();
    000025D2 480B                   JSR         @R8
    000025D4 0009                   NOP
      simplexC.c  1319                sprintf(strout,"Value var Row %d Col %d",i+1,j+1);
    000025D6 62F2                   MOV.L       @R15,R2
    000025D8 2F26                   MOV.L       R2,@-R15
    000025DA 53F9                   MOV.L       @(36,R15),R3
    000025DC D29C                   MOV.L       L1499+6,R2 ; L923
    000025DE 2F36                   MOV.L       R3,@-R15
    000025E0 2F26                   MOV.L       R2,@-R15
    000025E2 D39C                   MOV.L       L1499+10,R3; _sprintf
    000025E4 430B                   JSR         @R3
    000025E6 64E3                   MOV         R14,R4
    000025E8 7F0C                   ADD         #12,R15
      simplexC.c  1320                PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
    000025EA E710                   MOV         #16,R7
    000025EC 66E3                   MOV         R14,R6
    000025EE E500                   MOV         #0,R5
    000025F0 4A0B                   JSR         @R10
    000025F2 6453                   MOV         R5,R4
      simplexC.c  1321                temporalTableau[i][j] = InputD(0, 7);
    000025F4 52F7                   MOV.L       @(28,R15),R2
    000025F6 E507                   MOV         #7,R5
    000025F8 53F1                   MOV.L       @(4,R15),R3
    000025FA 6022                   MOV.L       @R2,R0
    000025FC D296                   MOV.L       L1499+14,R2; _InputD
    000025FE 303C                   ADD         R3,R0
    00002600 2F06                   MOV.L       R0,@-R15
    00002602 420B                   JSR         @R2
    00002604 E400                   MOV         #0,R4
    00002606 61F6                   MOV.L       @R15+,R1
      simplexC.c  1322                Bdisp_PutDisp_DD();
    00002608 490B                   JSR         @R9
    0000260A 2102                   MOV.L       R0,@R1
      simplexC.c  1323                memset(strout,0,128);
    0000260C D393                   MOV.L       L1499+18,R3; _memset
    0000260E 66C3                   MOV         R12,R6
    00002610 E500                   MOV         #0,R5
    00002612 430B                   JSR         @R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  111


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002614 64E3                   MOV         R14,R4
    00002616 52F6                   MOV.L       @(24,R15),R2
    00002618 7201                   ADD         #1,R2
    0000261A 1F26                   MOV.L       R2,@(24,R15)
    0000261C 53F1                   MOV.L       @(4,R15),R3
    0000261E 7304                   ADD         #4,R3
    00002620 1F31                   MOV.L       R3,@(4,R15)
    00002622 61F2                   MOV.L       @R15,R1
    00002624 7101                   ADD         #1,R1
    00002626 2F12                   MOV.L       R1,@R15
    00002628 53F3                   MOV.L       @(12,R15),R3
    0000262A 3232                   CMP/HS      R3,R2
    0000262C 8BD1                   BF          L1379
    0000262E              L1378:                            
    0000262E 52F4                   MOV.L       @(16,R15),R2
    00002630 7201                   ADD         #1,R2
    00002632 1F24                   MOV.L       R2,@(16,R15)
    00002634              L1376:                            
    00002634 53F2                   MOV.L       @(8,R15),R3
    00002636 51F4                   MOV.L       @(16,R15),R1
    00002638 3132                   CMP/HS      R3,R1
    0000263A 8BB3                   BF          L1377
      simplexC.c  1324            }
      simplexC.c  1325        }
      simplexC.c  1326        //Valores de xB
      simplexC.c  1327        it->xb=calloc(nConstraints,sizeof(float));
    0000263C D383                   MOV.L       L1499+2,R3 ; _calloc
    0000263E E504                   MOV         #4,R5
    00002640 430B                   JSR         @R3
    00002642 54F2                   MOV.L       @(8,R15),R4
    00002644 1D0B                   MOV.L       R0,@(44,R13)
    00002646 E201                   MOV         #1,R2
      simplexC.c  1328        for(i=0;i<nConstraints;i++)
    00002648 1FB4                   MOV.L       R11,@(16,R15)
    0000264A 53DB                   MOV.L       @(44,R13),R3
    0000264C 2F32                   MOV.L       R3,@R15
    0000264E E300                   MOV         #0,R3
    00002650 1F21                   MOV.L       R2,@(4,R15)
    00002652 51F2                   MOV.L       @(8,R15),R1
    00002654 3136                   CMP/HI      R3,R1
    00002656 8B28                   BF          L1380
    00002658              L1381:                            
      simplexC.c  1329        {
      simplexC.c  1330            Bdisp_AllClr_DDVRAM();
    00002658 480B                   JSR         @R8
    0000265A 0009                   NOP
      simplexC.c  1331            sprintf(strout,"Value xb Row %d",i+1);
    0000265C 53F1                   MOV.L       @(4,R15),R3
    0000265E 2F36                   MOV.L       R3,@-R15
    00002660 D27F                   MOV.L       L1499+22,R2; L925
    00002662 2F26                   MOV.L       R2,@-R15
    00002664 D37B                   MOV.L       L1499+10,R3; _sprintf
    00002666 430B                   JSR         @R3
    00002668 64E3                   MOV         R14,R4
    0000266A 7F08                   ADD         #8,R15
      simplexC.c  1332            PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
    0000266C E710                   MOV         #16,R7




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  112


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000266E 66E3                   MOV         R14,R6
    00002670 E500                   MOV         #0,R5
    00002672 4A0B                   JSR         @R10
    00002674 6453                   MOV         R5,R4
      simplexC.c  1333            it->xb[i] = InputD(0, 7);
    00002676 E507                   MOV         #7,R5
    00002678 D377                   MOV.L       L1499+14,R3; _InputD
    0000267A 62F2                   MOV.L       @R15,R2
    0000267C 2F26                   MOV.L       R2,@-R15
    0000267E 430B                   JSR         @R3
    00002680 E400                   MOV         #0,R4
    00002682 61F6                   MOV.L       @R15+,R1
      simplexC.c  1334            Bdisp_PutDisp_DD();
    00002684 490B                   JSR         @R9
    00002686 2102                   MOV.L       R0,@R1
      simplexC.c  1335            memset(strout,0,128);
    00002688 D374                   MOV.L       L1499+18,R3; _memset
    0000268A 66C3                   MOV         R12,R6
    0000268C E500                   MOV         #0,R5
    0000268E 430B                   JSR         @R3
    00002690 64E3                   MOV         R14,R4
    00002692 52F4                   MOV.L       @(16,R15),R2
    00002694 7201                   ADD         #1,R2
    00002696 1F24                   MOV.L       R2,@(16,R15)
    00002698 63F2                   MOV.L       @R15,R3
    0000269A 7304                   ADD         #4,R3
    0000269C 2F32                   MOV.L       R3,@R15
    0000269E 51F1                   MOV.L       @(4,R15),R1
    000026A0 7101                   ADD         #1,R1
    000026A2 1F11                   MOV.L       R1,@(4,R15)
    000026A4 53F2                   MOV.L       @(8,R15),R3
    000026A6 3232                   CMP/HS      R3,R2
    000026A8 8BD6                   BF          L1381
    000026AA              L1380:                            
      simplexC.c  1336        }
      simplexC.c  1337        //Valores Cj-Zj
      simplexC.c  1338        it->cjMinusZj=calloc(nVariables,sizeof(float));
    000026AA E504                   MOV         #4,R5
    000026AC D367                   MOV.L       L1499+2,R3 ; _calloc
    000026AE 430B                   JSR         @R3
    000026B0 54F3                   MOV.L       @(12,R15),R4
    000026B2 E201                   MOV         #1,R2
    000026B4 1D0E                   MOV.L       R0,@(56,R13)
      simplexC.c  1339        for(i=0;i<nVariables;i++)
    000026B6 2FB2                   MOV.L       R11,@R15
    000026B8 53DE                   MOV.L       @(56,R13),R3
    000026BA 1F32                   MOV.L       R3,@(8,R15)
    000026BC 1F21                   MOV.L       R2,@(4,R15)
    000026BE E300                   MOV         #0,R3
    000026C0 51F3                   MOV.L       @(12,R15),R1
    000026C2 3136                   CMP/HI      R3,R1
    000026C4 8B28                   BF          L1382
    000026C6              L1383:                            
      simplexC.c  1340        {
      simplexC.c  1341            Bdisp_AllClr_DDVRAM();
    000026C6 480B                   JSR         @R8
    000026C8 0009                   NOP




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  113


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c  1342            sprintf(strout,"Value Cj-Zj x%d",i+1);
    000026CA 53F1                   MOV.L       @(4,R15),R3
    000026CC D265                   MOV.L       L1499+26,R2; L927
    000026CE 2F36                   MOV.L       R3,@-R15
    000026D0 2F26                   MOV.L       R2,@-R15
    000026D2 D360                   MOV.L       L1499+10,R3; _sprintf
    000026D4 430B                   JSR         @R3
    000026D6 64E3                   MOV         R14,R4
    000026D8 7F08                   ADD         #8,R15
      simplexC.c  1343            PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
    000026DA E710                   MOV         #16,R7
    000026DC 66E3                   MOV         R14,R6
    000026DE E500                   MOV         #0,R5
    000026E0 4A0B                   JSR         @R10
    000026E2 6453                   MOV         R5,R4
      simplexC.c  1344            it->cjMinusZj[i] = InputD(0, 7);
    000026E4 52F2                   MOV.L       @(8,R15),R2
    000026E6 E507                   MOV         #7,R5
    000026E8 D35B                   MOV.L       L1499+14,R3; _InputD
    000026EA 2F26                   MOV.L       R2,@-R15
    000026EC 430B                   JSR         @R3
    000026EE E400                   MOV         #0,R4
    000026F0 61F6                   MOV.L       @R15+,R1
      simplexC.c  1345            Bdisp_PutDisp_DD();
    000026F2 490B                   JSR         @R9
    000026F4 2102                   MOV.L       R0,@R1
      simplexC.c  1346            memset(strout,0,128);
    000026F6 66C3                   MOV         R12,R6
    000026F8 D358                   MOV.L       L1499+18,R3; _memset
    000026FA E500                   MOV         #0,R5
    000026FC 430B                   JSR         @R3
    000026FE 64E3                   MOV         R14,R4
    00002700 62F2                   MOV.L       @R15,R2
    00002702 7201                   ADD         #1,R2
    00002704 2F22                   MOV.L       R2,@R15
    00002706 53F2                   MOV.L       @(8,R15),R3
    00002708 7304                   ADD         #4,R3
    0000270A 1F32                   MOV.L       R3,@(8,R15)
    0000270C 51F1                   MOV.L       @(4,R15),R1
    0000270E 7101                   ADD         #1,R1
    00002710 1F11                   MOV.L       R1,@(4,R15)
    00002712 53F3                   MOV.L       @(12,R15),R3
    00002714 3232                   CMP/HS      R3,R2
    00002716 8BD6                   BF          L1383
    00002718              L1382:                            
      simplexC.c  1347        }
      simplexC.c  1348        // -Z
      simplexC.c  1349        Bdisp_AllClr_DDVRAM();
    00002718 480B                   JSR         @R8
    0000271A 0009                   NOP
      simplexC.c  1350        PrintMini(0, 0, (unsigned char *)"Z val", MINI_OVER);
    0000271C D652                   MOV.L       L1499+30,R6; L928
    0000271E E500                   MOV         #0,R5
    00002720 E710                   MOV         #16,R7
    00002722 4A0B                   JSR         @R10
    00002724 6453                   MOV         R5,R4
      simplexC.c  1351        it->zSol = - InputD(0, 7);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  114


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002726 E507                   MOV         #7,R5
    00002728 D24B                   MOV.L       L1499+14,R2; _InputD
    0000272A 420B                   JSR         @R2
    0000272C E400                   MOV         #0,R4
    0000272E D34F                   MOV.L       L1499+34,R3; __negs
    00002730 430B                   JSR         @R3
    00002732 0009                   NOP
    00002734 E144                   MOV         #68,R1
    00002736 31DC                   ADD         R13,R1
      simplexC.c  1352        Bdisp_PutDisp_DD();
    00002738 490B                   JSR         @R9
    0000273A 2102                   MOV.L       R0,@R1
      simplexC.c  1353        //Funcion objetivo original
      simplexC.c  1354        Bdisp_AllClr_DDVRAM();
    0000273C 480B                   JSR         @R8
    0000273E 0009                   NOP
      simplexC.c  1355        sprintf(strout,"OBJ. Min: %d, Max %d",FUNC_MINIMIZE,FUNC_MAXIMIZE);
    00002740 D14B                   MOV.L       L1499+38,R1; L904
    00002742 E301                   MOV         #1,R3
    00002744 2F36                   MOV.L       R3,@-R15
    00002746 E200                   MOV         #0,R2
    00002748 D342                   MOV.L       L1499+10,R3; _sprintf
    0000274A 2F26                   MOV.L       R2,@-R15
    0000274C 2F16                   MOV.L       R1,@-R15
    0000274E 430B                   JSR         @R3
    00002750 64E3                   MOV         R14,R4
    00002752 7F0C                   ADD         #12,R15
      simplexC.c  1356        PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
    00002754 1FE4                   MOV.L       R14,@(16,R15)
    00002756 66E3                   MOV         R14,R6
    00002758 E710                   MOV         #16,R7
    0000275A E500                   MOV         #0,R5
    0000275C 4A0B                   JSR         @R10
    0000275E 6453                   MOV         R5,R4
      simplexC.c  1357        ex.inputCvectorValues=calloc(nVariables+1,sizeof(float));
    00002760 54F3                   MOV.L       @(12,R15),R4
    00002762 E504                   MOV         #4,R5
    00002764 D339                   MOV.L       L1499+2,R3 ; _calloc
    00002766 430B                   JSR         @R3
    00002768 7401                   ADD         #1,R4
      simplexC.c  1358        ex.currentFuncObjectivePurpose = InputI(0, 7);
    0000276A E507                   MOV         #7,R5
    0000276C D342                   MOV.L       L1499+46,R3; _InputI
    0000276E D241                   MOV.L       L1499+42,R2; H'0000001C+_ex
    00002770 2202                   MOV.L       R0,@R2
    00002772 430B                   JSR         @R3
    00002774 E400                   MOV         #0,R4
    00002776 D241                   MOV.L       L1499+50,R2; H'00000028+_ex
      simplexC.c  1359        Bdisp_PutDisp_DD();
    00002778 490B                   JSR         @R9
    0000277A 2202                   MOV.L       R0,@R2
      simplexC.c  1360        memset(strout,0,128);
    0000277C D337                   MOV.L       L1499+18,R3; _memset
    0000277E 66C3                   MOV         R12,R6
    00002780 E500                   MOV         #0,R5
    00002782 430B                   JSR         @R3
    00002784 64E3                   MOV         R14,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  115


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002786 E301                   MOV         #1,R3
      simplexC.c  1361        for(i=0;i<nVariables;i++)
    00002788 2FB2                   MOV.L       R11,@R15
    0000278A E200                   MOV         #0,R2
    0000278C 1FB2                   MOV.L       R11,@(8,R15)
    0000278E 1F31                   MOV.L       R3,@(4,R15)
    00002790 51F3                   MOV.L       @(12,R15),R1
    00002792 3126                   CMP/HI      R2,R1
    00002794 8B2B                   BF          L1384
    00002796              L1385:                            
      simplexC.c  1362        {
      simplexC.c  1363            Bdisp_AllClr_DDVRAM();
    00002796 480B                   JSR         @R8
    00002798 0009                   NOP
      simplexC.c  1364            sprintf(strout,"Obj value var x%d",i+1);
    0000279A 53F1                   MOV.L       @(4,R15),R3
    0000279C D238                   MOV.L       L1499+54,R2; L906
    0000279E 2F36                   MOV.L       R3,@-R15
    000027A0 2F26                   MOV.L       R2,@-R15
    000027A2 D32C                   MOV.L       L1499+10,R3; _sprintf
    000027A4 430B                   JSR         @R3
    000027A6 64E3                   MOV         R14,R4
    000027A8 7F08                   ADD         #8,R15
      simplexC.c  1365            PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
    000027AA E710                   MOV         #16,R7
    000027AC 56F4                   MOV.L       @(16,R15),R6
    000027AE E500                   MOV         #0,R5
    000027B0 4A0B                   JSR         @R10
    000027B2 6453                   MOV         R5,R4
      simplexC.c  1366            ex.inputCvectorValues[i] = InputD(0, 7);
    000027B4 53F2                   MOV.L       @(8,R15),R3
    000027B6 E507                   MOV         #7,R5
    000027B8 D127                   MOV.L       L1499+14,R1; _InputD
    000027BA D22E                   MOV.L       L1499+42,R2; H'0000001C+_ex
    000027BC 6022                   MOV.L       @R2,R0
    000027BE 303C                   ADD         R3,R0
    000027C0 2F06                   MOV.L       R0,@-R15
    000027C2 410B                   JSR         @R1
    000027C4 E400                   MOV         #0,R4
    000027C6 62F6                   MOV.L       @R15+,R2
      simplexC.c  1367            Bdisp_PutDisp_DD();
    000027C8 490B                   JSR         @R9
    000027CA 2202                   MOV.L       R0,@R2
      simplexC.c  1368            memset(strout,0,128);
    000027CC D323                   MOV.L       L1499+18,R3; _memset
    000027CE 66C3                   MOV         R12,R6
    000027D0 E500                   MOV         #0,R5
    000027D2 430B                   JSR         @R3
    000027D4 64E3                   MOV         R14,R4
    000027D6 62F2                   MOV.L       @R15,R2
    000027D8 7201                   ADD         #1,R2
    000027DA 2F22                   MOV.L       R2,@R15
    000027DC 53F2                   MOV.L       @(8,R15),R3
    000027DE 7304                   ADD         #4,R3
    000027E0 1F32                   MOV.L       R3,@(8,R15)
    000027E2 51F1                   MOV.L       @(4,R15),R1
    000027E4 7101                   ADD         #1,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  116


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000027E6 1F11                   MOV.L       R1,@(4,R15)
    000027E8 53F3                   MOV.L       @(12,R15),R3
    000027EA 3232                   CMP/HS      R3,R2
    000027EC 8BD3                   BF          L1385
    000027EE              L1384:                            
      simplexC.c  1369        }
      simplexC.c  1370        Bdisp_AllClr_DDVRAM();
    000027EE 480B                   JSR         @R8
    000027F0 0009                   NOP
      simplexC.c  1371        sprintf(strout,"Obj value Independent");
    000027F2 D224                   MOV.L       L1499+58,R2; L907
    000027F4 D317                   MOV.L       L1499+10,R3; _sprintf
    000027F6 2F26                   MOV.L       R2,@-R15
    000027F8 430B                   JSR         @R3
    000027FA 64E3                   MOV         R14,R4
    000027FC 7F04                   ADD         #4,R15
      simplexC.c  1372        PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
    000027FE E710                   MOV         #16,R7
    00002800 56F4                   MOV.L       @(16,R15),R6
    00002802 E500                   MOV         #0,R5
    00002804 4A0B                   JSR         @R10
    00002806 6453                   MOV         R5,R4
      simplexC.c  1373        ex.inputCvectorValues[nVariables] = InputD(0, 7);
    00002808 53F3                   MOV.L       @(12,R15),R3
    0000280A E507                   MOV         #7,R5
    0000280C D219                   MOV.L       L1499+42,R2; H'0000001C+_ex
    0000280E 4308                   SHLL2       R3
    00002810 6022                   MOV.L       @R2,R0
    00002812 303C                   ADD         R3,R0
    00002814 2F06                   MOV.L       R0,@-R15
    00002816 D310                   MOV.L       L1499+14,R3; _InputD
    00002818 430B                   JSR         @R3
    0000281A E400                   MOV         #0,R4
    0000281C 62F6                   MOV.L       @R15+,R2
      simplexC.c  1374        Bdisp_PutDisp_DD();
    0000281E 490B                   JSR         @R9
    00002820 2202                   MOV.L       R0,@R2
      simplexC.c  1375    
      simplexC.c  1376        //Adaptacion a iteracion de Binv
      simplexC.c  1377        it->Binv=calloc(it->BinvSize,sizeof(float*));
    00002822 E504                   MOV         #4,R5
    00002824 D309                   MOV.L       L1499+2,R3 ; _calloc
    00002826 430B                   JSR         @R3
    00002828 54D9                   MOV.L       @(36,R13),R4
    0000282A 1D08                   MOV.L       R0,@(32,R13)
      simplexC.c  1378        for(i=0;i<it->BinvSize;i++)
    0000282C A042                   BRA         L1386
    0000282E 6CB3                   MOV         R11,R12
    00002830              L1387:                            
      simplexC.c  1379        {
      simplexC.c  1380            it->Binv[i]=calloc(it->BinvSize,sizeof(float));
    00002830 50D8                   MOV.L       @(32,R13),R0
    00002832 E504                   MOV         #4,R5
    00002834 D305                   MOV.L       L1499+2,R3 ; _calloc
    00002836 6EC3                   MOV         R12,R14
    00002838 4E08                   SHLL2       R14
    0000283A 30EC                   ADD         R14,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  117


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000283C 2F06                   MOV.L       R0,@-R15
    0000283E 430B                   JSR         @R3
    00002840 54D9                   MOV.L       @(36,R13),R4
    00002842 62F6                   MOV.L       @R15+,R2
    00002844 2202                   MOV.L       R0,@R2
      simplexC.c  1381            for(j=0;j<it->BinvSize;j++)
    00002846 A031                   BRA         L1388
    00002848 64B3                   MOV         R11,R4
    0000284A              L1499:                            
    0000284A 0000                   .DATA.W     0
    0000284C <00000000>             .DATA.L     _calloc
    00002850 <00000000>             .DATA.L     L923
    00002854 <00000000>             .DATA.L     _sprintf
    00002858 <00000000>             .DATA.L     _InputD
    0000285C <00000000>             .DATA.L     _memset
    00002860 <00000000>             .DATA.L     L925
    00002864 <00000000>             .DATA.L     L927
    00002868 <00000000>             .DATA.L     L928
    0000286C <00000000>             .DATA.L     __negs
    00002870 <00000000>             .DATA.L     L904
    00002874 <0000001C>             .DATA.L     H'0000001C+_ex
    00002878 <00000000>             .DATA.L     _InputI
    0000287C <00000028>             .DATA.L     H'00000028+_ex
    00002880 <00000000>             .DATA.L     L906
    00002884 <00000000>             .DATA.L     L907
    00002888              L1389:                            
      simplexC.c  1382            {
      simplexC.c  1383                it->Binv[i][j]=temporalTableau[it->idByRowOfBasicVarsInBInv[i]][it->idByRowOfBasicVarsInBInv[j
                         +]];
    00002888 50D8                   MOV.L       @(32,R13),R0
    0000288A 6643                   MOV         R4,R6
    0000288C 55D3                   MOV.L       @(12,R13),R5
    0000288E 4608                   SHLL2       R6
    00002890 03EE                   MOV.L       @(R0,R14),R3
    00002892 7401                   ADD         #1,R4
    00002894 336C                   ADD         R6,R3
    00002896 6053                   MOV         R5,R0
    00002898 02EE                   MOV.L       @(R0,R14),R2
    0000289A 4208                   SHLL2       R2
    0000289C 50F5                   MOV.L       @(20,R15),R0
    0000289E 022E                   MOV.L       @(R0,R2),R2
    000028A0 6053                   MOV         R5,R0
    000028A2 016E                   MOV.L       @(R0,R6),R1
    000028A4 4108                   SHLL2       R1
    000028A6 321C                   ADD         R1,R2
    000028A8 6222                   MOV.L       @R2,R2
    000028AA 2322                   MOV.L       R2,@R3
    000028AC              L1388:                            
    000028AC 53D9                   MOV.L       @(36,R13),R3
    000028AE 3432                   CMP/HS      R3,R4
    000028B0 8BEA                   BF          L1389
    000028B2 7C01                   ADD         #1,R12
    000028B4              L1386:                            
    000028B4 53D9                   MOV.L       @(36,R13),R3
    000028B6 3C32                   CMP/HS      R3,R12
    000028B8 8BBA                   BF          L1387
      simplexC.c  1384            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  118


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c  1385        }
      simplexC.c  1386        //Adaptacion a iteracion de vectores Y
      simplexC.c  1387        // it->yj=calloc(nVariables,sizeof(float*));
      simplexC.c  1388        // for(i=0;i<nVariables;i++)
      simplexC.c  1389        // {
      simplexC.c  1390        //     it->yj[i]=calloc(nConstraints,sizeof(float));
      simplexC.c  1391        //     for(j=0;j<nConstraints;j++)
      simplexC.c  1392        //     {
      simplexC.c  1393        //         it->yj[i][j]=temporalTableau[j][i];
      simplexC.c  1394        //     }
      simplexC.c  1395        // }
      simplexC.c  1396        free(temporalTableau);
    000028BA D34D                   MOV.L       L1500+4,R3 ; _free
    000028BC 430B                   JSR         @R3
    000028BE 54F5                   MOV.L       @(20,R15),R4
      simplexC.c  1397        return it;
      simplexC.c  1398    }
    000028C0 9194                   MOV.W       L1500,R1   ; H'00A4
    000028C2 60D3                   MOV         R13,R0
    000028C4 3F1C                   ADD         R1,R15
    000028C6 4F26                   LDS.L       @R15+,PR
    000028C8 68F6                   MOV.L       @R15+,R8
    000028CA 69F6                   MOV.L       @R15+,R9
    000028CC 6AF6                   MOV.L       @R15+,R10
    000028CE 6BF6                   MOV.L       @R15+,R11
    000028D0 6CF6                   MOV.L       @R15+,R12
    000028D2 6DF6                   MOV.L       @R15+,R13
    000028D4 000B                   RTS
    000028D6 6EF6                   MOV.L       @R15+,R14
      simplexC.c  1399    
      simplexC.c  1400    int selectExecutionMode()
    000028D8              _selectExecutionMode:            ; function: selectExecutionMode
                                                           ; frame size=148
    000028D8 2FE6                   MOV.L       R14,@-R15
    000028DA 4F22                   STS.L       PR,@-R15
      simplexC.c  1401    {
      simplexC.c  1402        char strout[128];
      simplexC.c  1403        Bdisp_AllClr_DDVRAM();
    000028DC D345                   MOV.L       L1500+8,R3 ; _Bdisp_AllClr_DDVRAM
    000028DE 7F80                   ADD         #-128,R15
    000028E0 430B                   JSR         @R3
    000028E2 0009                   NOP
      simplexC.c  1404        sprintf(strout,"Mode. Full %d, Table %d",MODE_FULL_EXECUTION,MODE_INPUT_TABLE);
    000028E4 D144                   MOV.L       L1500+12,R1; L935
    000028E6 E201                   MOV         #1,R2
    000028E8 2F26                   MOV.L       R2,@-R15
    000028EA E300                   MOV         #0,R3
    000028EC 2F36                   MOV.L       R3,@-R15
    000028EE 2F16                   MOV.L       R1,@-R15
    000028F0 D342                   MOV.L       L1500+16,R3; _sprintf
    000028F2 64F3                   MOV         R15,R4
    000028F4 430B                   JSR         @R3
    000028F6 740C                   ADD         #12,R4
      simplexC.c  1405        PrintMini(0, 0, (unsigned char *)strout, MINI_OVER);
    000028F8 D241                   MOV.L       L1500+20,R2; _PrintMini
    000028FA E710                   MOV         #16,R7
    000028FC 66F3                   MOV         R15,R6




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  119


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000028FE 760C                   ADD         #12,R6
    00002900 E500                   MOV         #0,R5
    00002902 420B                   JSR         @R2
    00002904 6453                   MOV         R5,R4
      simplexC.c  1406        ex.mode = InputI(0, 7);
    00002906 E507                   MOV         #7,R5
    00002908 D33F                   MOV.L       L1500+28,R3; _InputI
    0000290A DE3E                   MOV.L       L1500+24,R14; _ex
    0000290C 430B                   JSR         @R3
    0000290E E400                   MOV         #0,R4
      simplexC.c  1407        Bdisp_PutDisp_DD();
    00002910 D23E                   MOV.L       L1500+32,R2; _Bdisp_PutDisp_DD
    00002912 420B                   JSR         @R2
    00002914 2E02                   MOV.L       R0,@R14
      simplexC.c  1408        ex.nNodes=1;
    00002916 E301                   MOV         #1,R3
      simplexC.c  1409        ex.nodes.its=malloc(10*sizeof(struct iteration*));
    00002918 D23D                   MOV.L       L1500+36,R2; _malloc
    0000291A 1E39                   MOV.L       R3,@(36,R14)
    0000291C 420B                   JSR         @R2
    0000291E E428                   MOV         #40,R4
    00002920 1E05                   MOV.L       R0,@(20,R14)
      simplexC.c  1410        return 0;
    00002922 E000                   MOV         #0,R0
      simplexC.c  1411    }
    00002924 9163                   MOV.W       L1500+2,R1 ; H'008C
    00002926 3F1C                   ADD         R1,R15
    00002928 4F26                   LDS.L       @R15+,PR
    0000292A 000B                   RTS
    0000292C 6EF6                   MOV.L       @R15+,R14
      simplexC.c  1412    
      simplexC.c  1413    int convertModel()
    0000292E              _convertModel:                   ; function: convertModel
                                                           ; frame size=32
    0000292E 2FE6                   MOV.L       R14,@-R15
    00002930 2FD6                   MOV.L       R13,@-R15
    00002932 2FC6                   MOV.L       R12,@-R15
    00002934 2FB6                   MOV.L       R11,@-R15
      simplexC.c  1414    {
      simplexC.c  1415        int i,j,nextConstraintSlopeSet,nextConstraint2fasesSet;
      simplexC.c  1416        struct problemStatement *modelToSolve;
      simplexC.c  1417        nextConstraint2fasesSet=0;nextConstraintSlopeSet=0;
    00002936 EB00                   MOV         #0,R11
      simplexC.c  1418        modelToSolve = malloc(sizeof(struct problemStatement));
    00002938 D335                   MOV.L       L1500+36,R3; _malloc
    0000293A 6CB3                   MOV         R11,R12
    0000293C 2FA6                   MOV.L       R10,@-R15
    0000293E 2F96                   MOV.L       R9,@-R15
    00002940 2F86                   MOV.L       R8,@-R15
    00002942 69B3                   MOV         R11,R9
    00002944 4F22                   STS.L       PR,@-R15
    00002946 430B                   JSR         @R3
    00002948 E454                   MOV         #84,R4
    0000294A 6E03                   MOV         R0,R14
      simplexC.c  1419        modelToSolve->problemType=ex.initialProblemStatement->problemType;
    0000294C DD2D                   MOV.L       L1500+24,R13; _ex
      simplexC.c  1420        modelToSolve->nVariablesSlope=ex.initialProblemStatement->nVariablesSlope;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  120


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c  1421        modelToSolve->nVariables2fases=ex.initialProblemStatement->nVariables2fases;
      simplexC.c  1422        modelToSolve->nVariablesInteger=ex.initialProblemStatement->nVariablesInteger;
      simplexC.c  1423        modelToSolve->nConstraints=ex.initialProblemStatement->nConstraints;
      simplexC.c  1424        modelToSolve->funcObjectivePurpose=ex.initialProblemStatement->funcObjectivePurpose;
    0000294E E044                   MOV         #68,R0
      simplexC.c  1425        modelToSolve->is2fasesNeeded=ex.initialProblemStatement->is2fasesNeeded;
      simplexC.c  1426        modelToSolve->nVariables=ex.initialProblemStatement->nVariables+ex.initialProblemStatement->nVariables
                         +Slope+ex.initialProblemStatement->nVariables2fases;
      simplexC.c  1427        modelToSolve->funcObjtValues=calloc(modelToSolve->nVariables+1,sizeof(float));
    00002950 DA30                   MOV.L       L1500+40,R10; _calloc
    00002952 52D1                   MOV.L       @(4,R13),R2
    00002954 6322                   MOV.L       @R2,R3
    00002956 2E32                   MOV.L       R3,@R14
    00002958 52D1                   MOV.L       @(4,R13),R2
    0000295A 5328                   MOV.L       @(32,R2),R3
    0000295C 1E38                   MOV.L       R3,@(32,R14)
    0000295E 52D1                   MOV.L       @(4,R13),R2
    00002960 5329                   MOV.L       @(36,R2),R3
    00002962 1E39                   MOV.L       R3,@(36,R14)
    00002964 52D1                   MOV.L       @(4,R13),R2
    00002966 532A                   MOV.L       @(40,R2),R3
    00002968 1E3A                   MOV.L       R3,@(40,R14)
    0000296A 52D1                   MOV.L       @(4,R13),R2
    0000296C 532B                   MOV.L       @(44,R2),R3
    0000296E 1E3B                   MOV.L       R3,@(44,R14)
    00002970 52D1                   MOV.L       @(4,R13),R2
    00002972 032E                   MOV.L       @(R0,R2),R3
    00002974 0E36                   MOV.L       R3,@(R0,R14)
    00002976 52D1                   MOV.L       @(4,R13),R2
    00002978 5322                   MOV.L       @(8,R2),R3
    0000297A 1E32                   MOV.L       R3,@(8,R14)
    0000297C 54D1                   MOV.L       @(4,R13),R4
    0000297E 5348                   MOV.L       @(32,R4),R3
    00002980 5247                   MOV.L       @(28,R4),R2
    00002982 323C                   ADD         R3,R2
    00002984 5149                   MOV.L       @(36,R4),R1
    00002986 321C                   ADD         R1,R2
    00002988 1E27                   MOV.L       R2,@(28,R14)
    0000298A E504                   MOV         #4,R5
    0000298C 6423                   MOV         R2,R4
    0000298E 4A0B                   JSR         @R10
    00002990 7401                   ADD         #1,R4
    00002992 E148                   MOV         #72,R1
    00002994 31EC                   ADD         R14,R1
    00002996 2102                   MOV.L       R0,@R1
      simplexC.c  1428        if(modelToSolve->is2fasesNeeded)
    00002998 53E2                   MOV.L       @(8,R14),R3
    0000299A 2338                   TST         R3,R3
    0000299C 8906                   BT          L1392
      simplexC.c  1429        {
      simplexC.c  1430            modelToSolve->funcObjtValues2Fases=calloc(modelToSolve->nVariables+1,sizeof(float));
    0000299E E504                   MOV         #4,R5
    000029A0 54E7                   MOV.L       @(28,R14),R4
    000029A2 4A0B                   JSR         @R10
    000029A4 7401                   ADD         #1,R4
    000029A6 E14C                   MOV         #76,R1
    000029A8 31EC                   ADD         R14,R1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  121


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000029AA 2102                   MOV.L       R0,@R1
    000029AC              L1392:                            
      simplexC.c  1431        }
      simplexC.c  1432        modelToSolve->idSlopeVariables=calloc(modelToSolve->nVariables,sizeof(int));
    000029AC E504                   MOV         #4,R5
    000029AE 4A0B                   JSR         @R10
    000029B0 54E7                   MOV.L       @(28,R14),R4
      simplexC.c  1433        modelToSolve->id2fasesVariables=calloc(modelToSolve->nVariables,sizeof(int));
    000029B2 E504                   MOV         #4,R5
    000029B4 1E0D                   MOV.L       R0,@(52,R14)
    000029B6 4A0B                   JSR         @R10
    000029B8 54E7                   MOV.L       @(28,R14),R4
      simplexC.c  1434        modelToSolve->idConstraintToSlopeVar=calloc(modelToSolve->nConstraints,sizeof(int));
    000029BA E504                   MOV         #4,R5
    000029BC 1E0E                   MOV.L       R0,@(56,R14)
    000029BE 4A0B                   JSR         @R10
    000029C0 54EB                   MOV.L       @(44,R14),R4
      simplexC.c  1435        modelToSolve->idConstraintTo2fasesVar=calloc(modelToSolve->nConstraints,sizeof(int));
    000029C2 E504                   MOV         #4,R5
    000029C4 1E0F                   MOV.L       R0,@(60,R14)
    000029C6 4A0B                   JSR         @R10
    000029C8 54EB                   MOV.L       @(44,R14),R4
    000029CA E140                   MOV         #64,R1
      simplexC.c  1436        memset(modelToSolve->idConstraintTo2fasesVar,-1,sizeof(modelToSolve->idConstraintTo2fasesVar));
    000029CC D312                   MOV.L       L1500+44,R3; _memset
    000029CE E604                   MOV         #4,R6
    000029D0 31EC                   ADD         R14,R1
    000029D2 E5FF                   MOV         #-1,R5
    000029D4 2102                   MOV.L       R0,@R1
    000029D6 E040                   MOV         #64,R0
    000029D8 430B                   JSR         @R3
    000029DA 04EE                   MOV.L       @(R0,R14),R4
      simplexC.c  1437        memset(modelToSolve->idConstraintToSlopeVar,-1,sizeof(modelToSolve->idConstraintToSlopeVar));
    000029DC D20E                   MOV.L       L1500+44,R2; _memset
    000029DE E604                   MOV         #4,R6
    000029E0 E5FF                   MOV         #-1,R5
    000029E2 420B                   JSR         @R2
    000029E4 54EF                   MOV.L       @(60,R14),R4
      simplexC.c  1438        //SET ID TYPES OF VARIABLES
      simplexC.c  1439        for(i=0;i<modelToSolve->nVariables;i++)
    000029E6 E501                   MOV         #1,R5
    000029E8 A030                   BRA         L1393
    000029EA 64B3                   MOV         R11,R4
    000029EC              L1500:                            
    000029EC 00A4                   .DATA.W     H'00A4
    000029EE 008C                   .DATA.W     H'008C
    000029F0 <00000000>             .DATA.L     _free
    000029F4 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000029F8 <00000000>             .DATA.L     L935
    000029FC <00000000>             .DATA.L     _sprintf
    00002A00 <00000000>             .DATA.L     _PrintMini
    00002A04 <00000000>             .DATA.L     _ex
    00002A08 <00000000>             .DATA.L     _InputI
    00002A0C <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    00002A10 <00000000>             .DATA.L     _malloc
    00002A14 <00000000>             .DATA.L     _calloc
    00002A18 <00000000>             .DATA.L     _memset




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  122


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002A1C              L1394:                            
      simplexC.c  1440        {
      simplexC.c  1441            if(i>=ex.initialProblemStatement->nVariables && i<ex.initialProblemStatement->nVariables+ex.initia
                         +lProblemStatement->nVariablesSlope)
    00002A1C 57D1                   MOV.L       @(4,R13),R7
    00002A1E 5677                   MOV.L       @(28,R7),R6
    00002A20 3463                   CMP/GE      R6,R4
    00002A22 8B08                   BF          L1395
    00002A24 5378                   MOV.L       @(32,R7),R3
    00002A26 336C                   ADD         R6,R3
    00002A28 3433                   CMP/GE      R3,R4
    00002A2A 8904                   BT          L1395
      simplexC.c  1442            {
      simplexC.c  1443                modelToSolve->idSlopeVariables[i]=1;
    00002A2C 50ED                   MOV.L       @(52,R14),R0
    00002A2E 6343                   MOV         R4,R3
    00002A30 4308                   SHLL2       R3
    00002A32 A00A                   BRA         L1396
    00002A34 0356                   MOV.L       R5,@(R0,R3)
    00002A36              L1395:                            
      simplexC.c  1444            }else if(i>=ex.initialProblemStatement->nVariables+ex.initialProblemStatement->nVariablesSlope)
    00002A36 56D1                   MOV.L       @(4,R13),R6
    00002A38 5368                   MOV.L       @(32,R6),R3
    00002A3A 5267                   MOV.L       @(28,R6),R2
    00002A3C 323C                   ADD         R3,R2
    00002A3E 3423                   CMP/GE      R2,R4
    00002A40 8B03                   BF          L1396
      simplexC.c  1445            {
      simplexC.c  1446                modelToSolve->id2fasesVariables[i]=1;
    00002A42 6243                   MOV         R4,R2
    00002A44 50EE                   MOV.L       @(56,R14),R0
    00002A46 4208                   SHLL2       R2
    00002A48 0256                   MOV.L       R5,@(R0,R2)
    00002A4A              L1396:                            
    00002A4A 7401                   ADD         #1,R4
    00002A4C              L1393:                            
    00002A4C 53E7                   MOV.L       @(28,R14),R3
    00002A4E 3433                   CMP/GE      R3,R4
    00002A50 8BE4                   BF          L1394
      simplexC.c  1447            }
      simplexC.c  1448            
      simplexC.c  1449        }
      simplexC.c  1450        for(i=0;i<modelToSolve->nVariables;i++)
    00002A52 A03D                   BRA         L1398
    00002A54 64B3                   MOV         R11,R4
    00002A56              L1399:                            
      simplexC.c  1451        {
      simplexC.c  1452            if(modelToSolve->idSlopeVariables[i])
    00002A56 6243                   MOV         R4,R2
    00002A58 50ED                   MOV.L       @(52,R14),R0
    00002A5A 4208                   SHLL2       R2
    00002A5C 032E                   MOV.L       @(R0,R2),R3
    00002A5E 2338                   TST         R3,R3
    00002A60 8917                   BT          L1400
      simplexC.c  1453            {
      simplexC.c  1454                for(j=nextConstraintSlopeSet;j<modelToSolve->nConstraints;j++)
    00002A62 A013                   BRA         L1401




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  123


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002A64 6593                   MOV         R9,R5
    00002A66              L1402:                            
      simplexC.c  1455                {
      simplexC.c  1456                    if(ex.initialProblemStatement->inequalitySigns[j]==INE_LESS_OR_EQUAL_THAN ||ex.initialProb
                         +lemStatement->inequalitySigns[j]==INE_GREATER_OR_EQUAL_THAN)
    00002A66 6653                   MOV         R5,R6
    00002A68 50D1                   MOV.L       @(4,R13),R0
    00002A6A 4608                   SHLL2       R6
    00002A6C 5006                   MOV.L       @(24,R0),R0
    00002A6E 066E                   MOV.L       @(R0,R6),R6
    00002A70 6063                   MOV         R6,R0
    00002A72 8801                   CMP/EQ      #1,R0
    00002A74 8902                   BT          L1404
    00002A76 6063                   MOV         R6,R0
    00002A78 8802                   CMP/EQ      #2,R0
    00002A7A 8B06                   BF          L1403
    00002A7C              L1404:                            
      simplexC.c  1457                    {
      simplexC.c  1458                        modelToSolve->idConstraintToSlopeVar[j]=i;
    00002A7C 50EF                   MOV.L       @(60,R14),R0
      simplexC.c  1459                        nextConstraintSlopeSet=j+1;
    00002A7E 6953                   MOV         R5,R9
    00002A80 6353                   MOV         R5,R3
    00002A82 4308                   SHLL2       R3
    00002A84 0346                   MOV.L       R4,@(R0,R3)
      simplexC.c  1460                        break;
    00002A86 A004                   BRA         L1400
    00002A88 7901                   ADD         #1,R9
    00002A8A              L1403:                            
    00002A8A 7501                   ADD         #1,R5
    00002A8C              L1401:                            
    00002A8C 53EB                   MOV.L       @(44,R14),R3
    00002A8E 3533                   CMP/GE      R3,R5
    00002A90 8BE9                   BF          L1402
    00002A92              L1400:                            
      simplexC.c  1461                    }
      simplexC.c  1462                }
      simplexC.c  1463            }
      simplexC.c  1464            if(modelToSolve->id2fasesVariables[i])
    00002A92 6143                   MOV         R4,R1
    00002A94 50EE                   MOV.L       @(56,R14),R0
    00002A96 4108                   SHLL2       R1
    00002A98 031E                   MOV.L       @(R0,R1),R3
    00002A9A 2338                   TST         R3,R3
    00002A9C 8917                   BT          L1406
      simplexC.c  1465            {
      simplexC.c  1466                for(j=nextConstraint2fasesSet;j<modelToSolve->nConstraints;j++)
    00002A9E A013                   BRA         L1407
    00002AA0 65C3                   MOV         R12,R5
    00002AA2              L1408:                            
      simplexC.c  1467                {
      simplexC.c  1468                    if(ex.initialProblemStatement->inequalitySigns[j]==INE_EQUAL ||ex.initialProblemStatement-
                         +>inequalitySigns[j]==INE_GREATER_OR_EQUAL_THAN)
    00002AA2 6653                   MOV         R5,R6
    00002AA4 50D1                   MOV.L       @(4,R13),R0
    00002AA6 4608                   SHLL2       R6
    00002AA8 5006                   MOV.L       @(24,R0),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  124


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002AAA 066E                   MOV.L       @(R0,R6),R6
    00002AAC 2668                   TST         R6,R6
    00002AAE 8902                   BT          L1410
    00002AB0 6063                   MOV         R6,R0
    00002AB2 8802                   CMP/EQ      #2,R0
    00002AB4 8B07                   BF          L1409
    00002AB6              L1410:                            
      simplexC.c  1469                    {
      simplexC.c  1470                        modelToSolve->idConstraintTo2fasesVar[j]=i;
    00002AB6 6353                   MOV         R5,R3
    00002AB8 4308                   SHLL2       R3
    00002ABA E040                   MOV         #64,R0
    00002ABC 00EE                   MOV.L       @(R0,R14),R0
      simplexC.c  1471                        nextConstraint2fasesSet=j+1;
    00002ABE 6C53                   MOV         R5,R12
    00002AC0 0346                   MOV.L       R4,@(R0,R3)
      simplexC.c  1472                        break;
    00002AC2 A004                   BRA         L1406
    00002AC4 7C01                   ADD         #1,R12
    00002AC6              L1409:                            
    00002AC6 7501                   ADD         #1,R5
    00002AC8              L1407:                            
    00002AC8 52EB                   MOV.L       @(44,R14),R2
    00002ACA 3523                   CMP/GE      R2,R5
    00002ACC 8BE9                   BF          L1408
    00002ACE              L1406:                            
    00002ACE 7401                   ADD         #1,R4
    00002AD0              L1398:                            
    00002AD0 52E7                   MOV.L       @(28,R14),R2
    00002AD2 3423                   CMP/GE      R2,R4
    00002AD4 8BBF                   BF          L1399
      simplexC.c  1473                    }
      simplexC.c  1474                }
      simplexC.c  1475            }
      simplexC.c  1476        }
      simplexC.c  1477        //MODIFY THE CONSTRAINTS and copy right values
      simplexC.c  1478        modelToSolve->constraints=(float **)malloc(sizeof(float) * modelToSolve->nConstraints);
    00002AD6 54EB                   MOV.L       @(44,R14),R4
    00002AD8 D254                   MOV.L       L1501+2,R2 ; _malloc
    00002ADA 420B                   JSR         @R2
    00002ADC 4408                   SHLL2       R4
      simplexC.c  1479        modelToSolve->rightValues=calloc(modelToSolve->nConstraints,sizeof(float));
    00002ADE E504                   MOV         #4,R5
    00002AE0 1E04                   MOV.L       R0,@(16,R14)
    00002AE2 4A0B                   JSR         @R10
    00002AE4 54EB                   MOV.L       @(44,R14),R4
      simplexC.c  1480        modelToSolve->inequalitySigns=calloc(modelToSolve->nConstraints,sizeof(int));
    00002AE6 E504                   MOV         #4,R5
    00002AE8 1E05                   MOV.L       R0,@(20,R14)
    00002AEA 4A0B                   JSR         @R10
    00002AEC 54EB                   MOV.L       @(44,R14),R4
      simplexC.c  1481        modelToSolve->idIntegerVariables=calloc(modelToSolve->nVariables,sizeof(int));
    00002AEE E504                   MOV         #4,R5
    00002AF0 1E06                   MOV.L       R0,@(24,R14)
    00002AF2 4A0B                   JSR         @R10
    00002AF4 54E7                   MOV.L       @(28,R14),R4
    00002AF6 1E0C                   MOV.L       R0,@(48,R14)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  125


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c  1482    
      simplexC.c  1483        for(i=0;i<modelToSolve->nConstraints;i++)
    00002AF8 A064                   BRA         L1412
    00002AFA 69B3                   MOV         R11,R9
    00002AFC              L1413:                            
      simplexC.c  1484        {
      simplexC.c  1485            modelToSolve->constraints[i]=calloc(modelToSolve->nVariables,sizeof(float));
    00002AFC 58E4                   MOV.L       @(16,R14),R8
    00002AFE E504                   MOV         #4,R5
    00002B00 6293                   MOV         R9,R2
    00002B02 4208                   SHLL2       R2
    00002B04 382C                   ADD         R2,R8
    00002B06 4A0B                   JSR         @R10
    00002B08 54E7                   MOV.L       @(28,R14),R4
      simplexC.c  1486            for(j=0;j<modelToSolve->nVariables;j++)
    00002B0A 64B3                   MOV         R11,R4
    00002B0C 2802                   MOV.L       R0,@R8
    00002B0E 6C93                   MOV         R9,R12
    00002B10 A04C                   BRA         L1414
    00002B12 4C08                   SHLL2       R12
    00002B14              L1415:                            
      simplexC.c  1487            {
      simplexC.c  1488                if(j<ex.initialProblemStatement->nVariables)//Copiar variables de entrada
    00002B14 52D1                   MOV.L       @(4,R13),R2
    00002B16 5327                   MOV.L       @(28,R2),R3
    00002B18 3433                   CMP/GE      R3,R4
    00002B1A 8910                   BT          L1416
      simplexC.c  1489                {
      simplexC.c  1490                    modelToSolve->constraints[i][j]=ex.initialProblemStatement->constraints[i][j];
    00002B1C 50E4                   MOV.L       @(16,R14),R0
    00002B1E 6543                   MOV         R4,R5
    00002B20 03CE                   MOV.L       @(R0,R12),R3
    00002B22 4508                   SHLL2       R5
    00002B24 50D1                   MOV.L       @(4,R13),R0
    00002B26 335C                   ADD         R5,R3
    00002B28 5004                   MOV.L       @(16,R0),R0
    00002B2A 00CE                   MOV.L       @(R0,R12),R0
    00002B2C 025E                   MOV.L       @(R0,R5),R2
    00002B2E 2322                   MOV.L       R2,@R3
      simplexC.c  1491                    modelToSolve->idIntegerVariables[i]=ex.initialProblemStatement->idIntegerVariables[i];
    00002B30 51EC                   MOV.L       @(48,R14),R1
    00002B32 31CC                   ADD         R12,R1
    00002B34 53D1                   MOV.L       @(4,R13),R3
    00002B36 503C                   MOV.L       @(48,R3),R0
    00002B38 02CE                   MOV.L       @(R0,R12),R2
    00002B3A A036                   BRA         L1417
    00002B3C 2122                   MOV.L       R2,@R1
    00002B3E              L1416:                            
      simplexC.c  1492                }else if(ex.initialProblemStatement->inequalitySigns[i]==INE_LESS_OR_EQUAL_THAN && j==modelToS
                         +olve->idConstraintToSlopeVar[i])
    00002B3E 50D1                   MOV.L       @(4,R13),R0
    00002B40 5006                   MOV.L       @(24,R0),R0
    00002B42 00CE                   MOV.L       @(R0,R12),R0
    00002B44 8801                   CMP/EQ      #1,R0
    00002B46 8B0B                   BF          L1418
    00002B48 50EF                   MOV.L       @(60,R14),R0
    00002B4A 02CE                   MOV.L       @(R0,R12),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  126


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002B4C 3420                   CMP/EQ      R2,R4
    00002B4E 8B07                   BF          L1418
      simplexC.c  1493                {
      simplexC.c  1494                    modelToSolve->constraints[i][j]=1;
    00002B50 50E4                   MOV.L       @(16,R14),R0
    00002B52 6343                   MOV         R4,R3
    00002B54 D136                   MOV.L       L1501+6,R1 ; H'3F800000
    00002B56 4308                   SHLL2       R3
    00002B58 02CE                   MOV.L       @(R0,R12),R2
    00002B5A 323C                   ADD         R3,R2
    00002B5C A00F                   BRA         L1467
    00002B5E 0009                   NOP
    00002B60              L1418:                            
      simplexC.c  1495                }else if(ex.initialProblemStatement->inequalitySigns[i]==INE_GREATER_OR_EQUAL_THAN && j==model
                         +ToSolve->idConstraintToSlopeVar[i])
    00002B60 50D1                   MOV.L       @(4,R13),R0
    00002B62 5006                   MOV.L       @(24,R0),R0
    00002B64 00CE                   MOV.L       @(R0,R12),R0
    00002B66 8802                   CMP/EQ      #2,R0
    00002B68 8B0B                   BF          L1420
    00002B6A 50EF                   MOV.L       @(60,R14),R0
    00002B6C 02CE                   MOV.L       @(R0,R12),R2
    00002B6E 3420                   CMP/EQ      R2,R4
    00002B70 8B07                   BF          L1420
      simplexC.c  1496                {
      simplexC.c  1497                    modelToSolve->constraints[i][j]=-1;
    00002B72 6343                   MOV         R4,R3
    00002B74 D12F                   MOV.L       L1501+10,R1; H'BF800000
    00002B76 4308                   SHLL2       R3
    00002B78 50E4                   MOV.L       @(16,R14),R0
    00002B7A 02CE                   MOV.L       @(R0,R12),R2
    00002B7C 323C                   ADD         R3,R2
    00002B7E              L1467:                            
    00002B7E A014                   BRA         L1417
    00002B80 2212                   MOV.L       R1,@R2
    00002B82              L1420:                            
      simplexC.c  1498                }else if((ex.initialProblemStatement->inequalitySigns[i]==INE_GREATER_OR_EQUAL_THAN || ex.init
                         +ialProblemStatement->inequalitySigns[i]==INE_EQUAL)&& j==modelToSolve->idConstraintTo2fasesVar[i])
    00002B82 50D1                   MOV.L       @(4,R13),R0
    00002B84 5006                   MOV.L       @(24,R0),R0
    00002B86 00CE                   MOV.L       @(R0,R12),R0
    00002B88 8802                   CMP/EQ      #2,R0
    00002B8A 8D02                   BT/S        L1423
    00002B8C 6503                   MOV         R0,R5
    00002B8E 2558                   TST         R5,R5
    00002B90 8B0B                   BF          L1417
    00002B92              L1423:                            
    00002B92 E040                   MOV         #64,R0
    00002B94 00EE                   MOV.L       @(R0,R14),R0
    00002B96 03CE                   MOV.L       @(R0,R12),R3
    00002B98 3430                   CMP/EQ      R3,R4
    00002B9A 8B06                   BF          L1417
      simplexC.c  1499                {
      simplexC.c  1500                    modelToSolve->constraints[i][j]=1;
    00002B9C 50E4                   MOV.L       @(16,R14),R0
    00002B9E 6243                   MOV         R4,R2
    00002BA0 D123                   MOV.L       L1501+6,R1 ; H'3F800000




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  127


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002BA2 4208                   SHLL2       R2
    00002BA4 03CE                   MOV.L       @(R0,R12),R3
    00002BA6 332C                   ADD         R2,R3
    00002BA8 2312                   MOV.L       R1,@R3
    00002BAA              L1417:                            
    00002BAA 7401                   ADD         #1,R4
    00002BAC              L1414:                            
    00002BAC 53E7                   MOV.L       @(28,R14),R3
    00002BAE 3433                   CMP/GE      R3,R4
    00002BB0 8BB0                   BF          L1415
      simplexC.c  1501                }
      simplexC.c  1502                //Cualquier otro caso tiene un 0 por calloc
      simplexC.c  1503            }
      simplexC.c  1504            modelToSolve->rightValues[i]=ex.initialProblemStatement->rightValues[i];
    00002BB2 6493                   MOV         R9,R4
    00002BB4 51E5                   MOV.L       @(20,R14),R1
    00002BB6 4408                   SHLL2       R4
    00002BB8 53D1                   MOV.L       @(4,R13),R3
    00002BBA 7901                   ADD         #1,R9
    00002BBC 5035                   MOV.L       @(20,R3),R0
    00002BBE 314C                   ADD         R4,R1
    00002BC0 024E                   MOV.L       @(R0,R4),R2
    00002BC2 2122                   MOV.L       R2,@R1
    00002BC4              L1412:                            
    00002BC4 53EB                   MOV.L       @(44,R14),R3
    00002BC6 3933                   CMP/GE      R3,R9
    00002BC8 8B98                   BF          L1413
      simplexC.c  1505        }
      simplexC.c  1506    
      simplexC.c  1507        //Create new obj funct
      simplexC.c  1508        for(i=0;i<modelToSolve->nVariables;i++)
    00002BCA A01B                   BRA         L1424
    00002BCC 64B3                   MOV         R11,R4
    00002BCE              L1425:                            
    00002BCE 5CD1                   MOV.L       @(4,R13),R12
    00002BD0 52C7                   MOV.L       @(28,R12),R2
    00002BD2 3423                   CMP/GE      R2,R4
    00002BD4 890A                   BT          L1426
      simplexC.c  1509        {
      simplexC.c  1510            if(i<ex.initialProblemStatement->nVariables)
      simplexC.c  1511            {
      simplexC.c  1512                modelToSolve->funcObjtValues[i]=ex.initialProblemStatement->funcObjtValues[i];
    00002BD6 6543                   MOV         R4,R5
    00002BD8 4508                   SHLL2       R5
    00002BDA E048                   MOV         #72,R0
    00002BDC 00EE                   MOV.L       @(R0,R14),R0
    00002BDE 6203                   MOV         R0,R2
    00002BE0 325C                   ADD         R5,R2
    00002BE2 E048                   MOV         #72,R0
    00002BE4 00CE                   MOV.L       @(R0,R12),R0
    00002BE6 035E                   MOV.L       @(R0,R5),R3
    00002BE8 A00B                   BRA         L1427
    00002BEA 2232                   MOV.L       R3,@R2
    00002BEC              L1426:                            
      simplexC.c  1513            }else if(i>=(ex.initialProblemStatement->nVariables+ex.initialProblemStatement->nVariablesSlope))
    00002BEC 53C8                   MOV.L       @(32,R12),R3
    00002BEE 52C7                   MOV.L       @(28,R12),R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  128


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002BF0 323C                   ADD         R3,R2
    00002BF2 3423                   CMP/GE      R2,R4
    00002BF4 8B05                   BF          L1427
      simplexC.c  1514            {
      simplexC.c  1515                modelToSolve->funcObjtValues2Fases[i]=1;
    00002BF6 6243                   MOV         R4,R2
    00002BF8 D30D                   MOV.L       L1501+6,R3 ; H'3F800000
    00002BFA E04C                   MOV         #76,R0
    00002BFC 00EE                   MOV.L       @(R0,R14),R0
    00002BFE 4208                   SHLL2       R2
    00002C00 0236                   MOV.L       R3,@(R0,R2)
    00002C02              L1427:                            
    00002C02 7401                   ADD         #1,R4
    00002C04              L1424:                            
    00002C04 52E7                   MOV.L       @(28,R14),R2
    00002C06 3423                   CMP/GE      R2,R4
    00002C08 8BE1                   BF          L1425
      simplexC.c  1516            }
      simplexC.c  1517        }
      simplexC.c  1518    
      simplexC.c  1519        //Create aj vectors
      simplexC.c  1520        ex.ajVector=calloc(modelToSolve->nVariables,sizeof(float*));
    00002C0A E504                   MOV         #4,R5
    00002C0C 4A0B                   JSR         @R10
    00002C0E 54E7                   MOV.L       @(28,R14),R4
    00002C10 1D0D                   MOV.L       R0,@(52,R13)
      simplexC.c  1521        for(i=0;i<modelToSolve->nVariables;i++)
    00002C12 A01F                   BRA         L1429
    00002C14 69B3                   MOV         R11,R9
    00002C16              L1430:                            
      simplexC.c  1522        {
      simplexC.c  1523            ex.ajVector[i]=calloc(modelToSolve->nConstraints,sizeof(float));
    00002C16 6C93                   MOV         R9,R12
    00002C18 58DD                   MOV.L       @(52,R13),R8
    00002C1A E504                   MOV         #4,R5
    00002C1C 4C08                   SHLL2       R12
    00002C1E 38CC                   ADD         R12,R8
    00002C20 4A0B                   JSR         @R10
    00002C22 54EB                   MOV.L       @(44,R14),R4
    00002C24 2802                   MOV.L       R0,@R8
      simplexC.c  1524            for(j=0;j<modelToSolve->nConstraints;j++)
    00002C26 A011                   BRA         L1431
    00002C28 64B3                   MOV         R11,R4
    00002C2A              L1501:                            
    00002C2A 0000                   .DATA.W     0
    00002C2C <00000000>             .DATA.L     _malloc
    00002C30 3F800000               .DATA.L     H'3F800000
    00002C34 BF800000               .DATA.L     H'BF800000
    00002C38              L1432:                            
      simplexC.c  1525            {
      simplexC.c  1526                ex.ajVector[i][j]=modelToSolve->constraints[j][i];
    00002C38 50DD                   MOV.L       @(52,R13),R0
    00002C3A 6543                   MOV         R4,R5
    00002C3C 02CE                   MOV.L       @(R0,R12),R2
    00002C3E 4508                   SHLL2       R5
    00002C40 50E4                   MOV.L       @(16,R14),R0
    00002C42 7401                   ADD         #1,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  129


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002C44 005E                   MOV.L       @(R0,R5),R0
    00002C46 325C                   ADD         R5,R2
    00002C48 03CE                   MOV.L       @(R0,R12),R3
    00002C4A 2232                   MOV.L       R3,@R2
    00002C4C              L1431:                            
    00002C4C 52EB                   MOV.L       @(44,R14),R2
    00002C4E 3423                   CMP/GE      R2,R4
    00002C50 8BF2                   BF          L1432
    00002C52 7901                   ADD         #1,R9
    00002C54              L1429:                            
    00002C54 52E7                   MOV.L       @(28,R14),R2
    00002C56 3923                   CMP/GE      R2,R9
    00002C58 8BDD                   BF          L1430
      simplexC.c  1527            }
      simplexC.c  1528        }
      simplexC.c  1529        modelToSolve->ajVector=ex.ajVector;
    00002C5A E050                   MOV         #80,R0
    00002C5C 51DD                   MOV.L       @(52,R13),R1
    00002C5E 0E16                   MOV.L       R1,@(R0,R14)
      simplexC.c  1530        modelToSolve->funcObjtValues[modelToSolve->nVariables]=ex.initialProblemStatement->funcObjtValues[ex.i
                         +nitialProblemStatement->nVariables];
    00002C60 53E7                   MOV.L       @(28,R14),R3
    00002C62 E048                   MOV         #72,R0
    00002C64 54D1                   MOV.L       @(4,R13),R4
    00002C66 4308                   SHLL2       R3
    00002C68 00EE                   MOV.L       @(R0,R14),R0
    00002C6A 330C                   ADD         R0,R3
    00002C6C 5247                   MOV.L       @(28,R4),R2
    00002C6E E048                   MOV         #72,R0
    00002C70 004E                   MOV.L       @(R0,R4),R0
    00002C72 4208                   SHLL2       R2
    00002C74 012E                   MOV.L       @(R0,R2),R1
      simplexC.c  1531        modelToSolve->modelType=TYPE_SOLVE;
    00002C76 E202                   MOV         #2,R2
    00002C78 2312                   MOV.L       R1,@R3
      simplexC.c  1532        ex.canonicalStatement=modelToSolve;
      simplexC.c  1533        ex.nVariables=modelToSolve->nVariables;
      simplexC.c  1534        ex.nConstraints=modelToSolve->nConstraints;
      simplexC.c  1535        return 0;
    00002C7A E000                   MOV         #0,R0
    00002C7C 1E21                   MOV.L       R2,@(4,R14)
    00002C7E 1DE2                   MOV.L       R14,@(8,R13)
    00002C80 53E7                   MOV.L       @(28,R14),R3
    00002C82 1D3B                   MOV.L       R3,@(44,R13)
    00002C84 52EB                   MOV.L       @(44,R14),R2
    00002C86 1D2C                   MOV.L       R2,@(48,R13)
      simplexC.c  1536    }
    00002C88 4F26                   LDS.L       @R15+,PR
    00002C8A 68F6                   MOV.L       @R15+,R8
    00002C8C 69F6                   MOV.L       @R15+,R9
    00002C8E 6AF6                   MOV.L       @R15+,R10
    00002C90 6BF6                   MOV.L       @R15+,R11
    00002C92 6CF6                   MOV.L       @R15+,R12
    00002C94 6DF6                   MOV.L       @R15+,R13
    00002C96 000B                   RTS
    00002C98 6EF6                   MOV.L       @R15+,R14
      simplexC.c  1537    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  130


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c  1538    struct problemStatement* createProblemStatementToDebug2Fases()
    00002C9A              _createProblemStatementToDebug2Fases:
                                                           ; function: createProblemStatementToDebug2Fases
                                                           ; frame size=28
      simplexC.c  1539    {
      simplexC.c  1540        struct problemStatement *res;
      simplexC.c  1541        int nConstraints;
      simplexC.c  1542        int nVariables;
      simplexC.c  1543        nConstraints=3;
    00002C9A E303                   MOV         #3,R3
    00002C9C 2FE6                   MOV.L       R14,@-R15
      simplexC.c  1544        nVariables=2;
    00002C9E E202                   MOV         #2,R2
    00002CA0 2FD6                   MOV.L       R13,@-R15
    00002CA2 2FC6                   MOV.L       R12,@-R15
    00002CA4 2F86                   MOV.L       R8,@-R15
    00002CA6 4F22                   STS.L       PR,@-R15
    00002CA8 7FF8                   ADD         #-8,R15
    00002CAA 1F31                   MOV.L       R3,@(4,R15)
    00002CAC 2F22                   MOV.L       R2,@R15
      simplexC.c  1545        res= malloc(sizeof(struct problemStatement));
    00002CAE D3A8                   MOV.L       L1502,R3   ; _malloc
    00002CB0 430B                   JSR         @R3
    00002CB2 E454                   MOV         #84,R4
      simplexC.c  1546        res->modelType=TYPE_INPUT;
      simplexC.c  1547        res->nConstraints=nConstraints;
      simplexC.c  1548        res->nVariables=nVariables;
      simplexC.c  1549        res->nVariables2fases=1;
      simplexC.c  1550        res ->nVariablesSlope=2;
      simplexC.c  1551        res->problemType=TYPE_LP;
      simplexC.c  1552        res -> funcObjtValues = calloc(nVariables+1,sizeof(float));
    00002CB4 DCA7                   MOV.L       L1502+4,R12; _calloc
    00002CB6 E504                   MOV         #4,R5
    00002CB8 6E03                   MOV         R0,R14
    00002CBA ED01                   MOV         #1,R13
    00002CBC 1ED1                   MOV.L       R13,@(4,R14)
    00002CBE 52F1                   MOV.L       @(4,R15),R2
    00002CC0 1E2B                   MOV.L       R2,@(44,R14)
    00002CC2 63F2                   MOV.L       @R15,R3
    00002CC4 1E37                   MOV.L       R3,@(28,R14)
    00002CC6 E302                   MOV         #2,R3
    00002CC8 1ED9                   MOV.L       R13,@(36,R14)
    00002CCA 1E38                   MOV.L       R3,@(32,R14)
    00002CCC 2ED2                   MOV.L       R13,@R14
    00002CCE 4C0B                   JSR         @R12
    00002CD0 E403                   MOV         #3,R4
    00002CD2 E148                   MOV         #72,R1
    00002CD4 31EC                   ADD         R14,R1
      simplexC.c  1553        res->idIntegerVariables=calloc(nVariables,sizeof(int));
    00002CD6 E504                   MOV         #4,R5
    00002CD8 2102                   MOV.L       R0,@R1
    00002CDA 4C0B                   JSR         @R12
    00002CDC E402                   MOV         #2,R4
      simplexC.c  1554        res->idSlopeVariables= calloc(nVariables,sizeof(int));
    00002CDE E504                   MOV         #4,R5
    00002CE0 1E0C                   MOV.L       R0,@(48,R14)
    00002CE2 4C0B                   JSR         @R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  131


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002CE4 E402                   MOV         #2,R4
      simplexC.c  1555        res->id2fasesVariables=calloc(nVariables,sizeof(int));
    00002CE6 E504                   MOV         #4,R5
    00002CE8 1E0D                   MOV.L       R0,@(52,R14)
    00002CEA 4C0B                   JSR         @R12
    00002CEC E402                   MOV         #2,R4
      simplexC.c  1556        res->inequalitySigns=calloc(nConstraints,sizeof(int));
    00002CEE E504                   MOV         #4,R5
    00002CF0 1E0E                   MOV.L       R0,@(56,R14)
    00002CF2 4C0B                   JSR         @R12
    00002CF4 E403                   MOV         #3,R4
      simplexC.c  1557        res->inequalitySigns[0]=INE_LESS_OR_EQUAL_THAN;
    00002CF6 6303                   MOV         R0,R3
    00002CF8 1E06                   MOV.L       R0,@(24,R14)
      simplexC.c  1558        res->inequalitySigns[1]=INE_LESS_OR_EQUAL_THAN;
      simplexC.c  1559        res->inequalitySigns[2]=INE_EQUAL;
      simplexC.c  1560        res->funcObjectivePurpose=FUNC_MAXIMIZE;
      simplexC.c  1561        res->funcObjtValues[0]=3;
      simplexC.c  1562        res->funcObjtValues[1]=5;
      simplexC.c  1563        res->funcObjtValues[2]=0;
      simplexC.c  1564        res->constraints=calloc(nConstraints,sizeof(float));
    00002CFA E504                   MOV         #4,R5
    00002CFC 23D2                   MOV.L       R13,@R3
    00002CFE E044                   MOV         #68,R0
    00002D00 52E6                   MOV.L       @(24,R14),R2
    00002D02 12D1                   MOV.L       R13,@(4,R2)
    00002D04 53E6                   MOV.L       @(24,R14),R3
    00002D06 E200                   MOV         #0,R2
    00002D08 1322                   MOV.L       R2,@(8,R3)
    00002D0A 0ED6                   MOV.L       R13,@(R0,R14)
    00002D0C D292                   MOV.L       L1502+8,R2 ; H'40400000
    00002D0E E048                   MOV         #72,R0
    00002D10 03EE                   MOV.L       @(R0,R14),R3
    00002D12 2322                   MOV.L       R2,@R3
    00002D14 03EE                   MOV.L       @(R0,R14),R3
    00002D16 D291                   MOV.L       L1502+12,R2; H'40A00000
    00002D18 1321                   MOV.L       R2,@(4,R3)
    00002D1A E200                   MOV         #0,R2
    00002D1C 03EE                   MOV.L       @(R0,R14),R3
    00002D1E 1322                   MOV.L       R2,@(8,R3)
    00002D20 4C0B                   JSR         @R12
    00002D22 E403                   MOV         #3,R4
    00002D24 1E04                   MOV.L       R0,@(16,R14)
      simplexC.c  1565        res->constraints[0]=calloc(nVariables,sizeof(float));
    00002D26 6803                   MOV         R0,R8
    00002D28 E504                   MOV         #4,R5
    00002D2A 4C0B                   JSR         @R12
    00002D2C E402                   MOV         #2,R4
      simplexC.c  1566        res->constraints[1]=calloc(nVariables,sizeof(float));
    00002D2E E504                   MOV         #4,R5
    00002D30 2802                   MOV.L       R0,@R8
    00002D32 58E4                   MOV.L       @(16,R14),R8
    00002D34 7804                   ADD         #4,R8
    00002D36 4C0B                   JSR         @R12
    00002D38 E402                   MOV         #2,R4
      simplexC.c  1567        res->constraints[2]=calloc(nVariables,sizeof(float));
    00002D3A E504                   MOV         #4,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  132


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002D3C 2802                   MOV.L       R0,@R8
    00002D3E 58E4                   MOV.L       @(16,R14),R8
    00002D40 7808                   ADD         #8,R8
    00002D42 4C0B                   JSR         @R12
    00002D44 E402                   MOV         #2,R4
      simplexC.c  1568        res->constraints[0][0]=1;
      simplexC.c  1569        res->constraints[0][1]=0;
      simplexC.c  1570        res->constraints[1][0]=0;
      simplexC.c  1571        res->constraints[1][1]=2;
      simplexC.c  1572        res->constraints[2][0]=3;
      simplexC.c  1573        res->constraints[2][1]=2;
      simplexC.c  1574        res->rightValues=calloc(nConstraints,sizeof(float));
    00002D46 E504                   MOV         #4,R5
    00002D48 2802                   MOV.L       R0,@R8
    00002D4A 53E4                   MOV.L       @(16,R14),R3
    00002D4C D184                   MOV.L       L1502+16,R1; H'3F800000
    00002D4E 6232                   MOV.L       @R3,R2
    00002D50 2212                   MOV.L       R1,@R2
    00002D52 E100                   MOV         #0,R1
    00002D54 53E4                   MOV.L       @(16,R14),R3
    00002D56 6232                   MOV.L       @R3,R2
    00002D58 1211                   MOV.L       R1,@(4,R2)
    00002D5A 53E4                   MOV.L       @(16,R14),R3
    00002D5C 5231                   MOV.L       @(4,R3),R2
    00002D5E 2212                   MOV.L       R1,@R2
    00002D60 53E4                   MOV.L       @(16,R14),R3
    00002D62 5231                   MOV.L       @(4,R3),R2
    00002D64 D17F                   MOV.L       L1502+20,R1; H'40000000
    00002D66 1211                   MOV.L       R1,@(4,R2)
    00002D68 53E4                   MOV.L       @(16,R14),R3
    00002D6A 5232                   MOV.L       @(8,R3),R2
    00002D6C D17A                   MOV.L       L1502+8,R1 ; H'40400000
    00002D6E 2212                   MOV.L       R1,@R2
    00002D70 53E4                   MOV.L       @(16,R14),R3
    00002D72 4118                   SHLL8       R1
    00002D74 5232                   MOV.L       @(8,R3),R2
    00002D76 1211                   MOV.L       R1,@(4,R2)
    00002D78 4C0B                   JSR         @R12
    00002D7A E403                   MOV         #3,R4
    00002D7C 1E05                   MOV.L       R0,@(20,R14)
      simplexC.c  1575        res->rightValues[0]=4;
    00002D7E 6303                   MOV         R0,R3
    00002D80 D279                   MOV.L       L1502+24,R2; H'40800000
      simplexC.c  1576        res->rightValues[1]=12;
      simplexC.c  1577        res->rightValues[2]=18;
      simplexC.c  1578        res->nVariables2fases=1;
      simplexC.c  1579        res->is2fasesNeeded=1;
      simplexC.c  1580    
      simplexC.c  1581        return res;
    00002D82 60E3                   MOV         R14,R0
    00002D84 2322                   MOV.L       R2,@R3
    00002D86 53E5                   MOV.L       @(20,R14),R3
    00002D88 D278                   MOV.L       L1502+28,R2; H'41400000
    00002D8A 1321                   MOV.L       R2,@(4,R3)
    00002D8C 53E5                   MOV.L       @(20,R14),R3
    00002D8E D278                   MOV.L       L1502+32,R2; H'41900000
    00002D90 1322                   MOV.L       R2,@(8,R3)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  133


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002D92 1ED9                   MOV.L       R13,@(36,R14)
    00002D94 1ED2                   MOV.L       R13,@(8,R14)
      simplexC.c  1582    }
    00002D96 7F08                   ADD         #8,R15
    00002D98 4F26                   LDS.L       @R15+,PR
    00002D9A 68F6                   MOV.L       @R15+,R8
    00002D9C 6CF6                   MOV.L       @R15+,R12
    00002D9E 6DF6                   MOV.L       @R15+,R13
    00002DA0 000B                   RTS
    00002DA2 6EF6                   MOV.L       @R15+,R14
      simplexC.c  1583    
      simplexC.c  1584    struct problemStatement* createProblemStatementToDebug()
    00002DA4              _createProblemStatementToDebug:  ; function: createProblemStatementToDebug
                                                           ; frame size=32
    00002DA4 2FE6                   MOV.L       R14,@-R15
      simplexC.c  1585    {
      simplexC.c  1586        struct problemStatement *res;
      simplexC.c  1587        int nConstraints;
      simplexC.c  1588        int nVariables;
      simplexC.c  1589        nConstraints=3;
    00002DA6 E303                   MOV         #3,R3
    00002DA8 2FD6                   MOV.L       R13,@-R15
      simplexC.c  1590        nVariables=2;
    00002DAA E202                   MOV         #2,R2
    00002DAC 2FC6                   MOV.L       R12,@-R15
    00002DAE 2FB6                   MOV.L       R11,@-R15
    00002DB0 2F86                   MOV.L       R8,@-R15
    00002DB2 4F22                   STS.L       PR,@-R15
    00002DB4 7FF8                   ADD         #-8,R15
    00002DB6 1F31                   MOV.L       R3,@(4,R15)
    00002DB8 2F22                   MOV.L       R2,@R15
      simplexC.c  1591        res= malloc(sizeof(struct problemStatement));
    00002DBA D365                   MOV.L       L1502,R3   ; _malloc
    00002DBC 430B                   JSR         @R3
    00002DBE E454                   MOV         #84,R4
      simplexC.c  1592        res->modelType=TYPE_INPUT;
      simplexC.c  1593        res->nConstraints=nConstraints;
      simplexC.c  1594        res->nVariables=nVariables;
      simplexC.c  1595        res->nVariables2fases=0;
      simplexC.c  1596        res ->nVariablesSlope=3;
      simplexC.c  1597        res->problemType=TYPE_LP;
      simplexC.c  1598        res -> funcObjtValues = calloc(nVariables+1,sizeof(float));
    00002DC0 DC64                   MOV.L       L1502+4,R12; _calloc
    00002DC2 E504                   MOV         #4,R5
    00002DC4 6E03                   MOV         R0,R14
    00002DC6 ED01                   MOV         #1,R13
    00002DC8 1ED1                   MOV.L       R13,@(4,R14)
    00002DCA EB00                   MOV         #0,R11
    00002DCC 52F1                   MOV.L       @(4,R15),R2
    00002DCE 1E2B                   MOV.L       R2,@(44,R14)
    00002DD0 63F2                   MOV.L       @R15,R3
    00002DD2 1E37                   MOV.L       R3,@(28,R14)
    00002DD4 1EB9                   MOV.L       R11,@(36,R14)
    00002DD6 E303                   MOV         #3,R3
    00002DD8 1E38                   MOV.L       R3,@(32,R14)
    00002DDA 2ED2                   MOV.L       R13,@R14
    00002DDC 4C0B                   JSR         @R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  134


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002DDE 6433                   MOV         R3,R4
    00002DE0 E148                   MOV         #72,R1
    00002DE2 31EC                   ADD         R14,R1
    00002DE4 2102                   MOV.L       R0,@R1
      simplexC.c  1599        res->idIntegerVariables=calloc(nVariables,sizeof(int));
    00002DE6 E504                   MOV         #4,R5
    00002DE8 4C0B                   JSR         @R12
    00002DEA E402                   MOV         #2,R4
    00002DEC 1E0C                   MOV.L       R0,@(48,R14)
      simplexC.c  1600        res->idSlopeVariables= calloc(nVariables,sizeof(int));
    00002DEE E504                   MOV         #4,R5
    00002DF0 4C0B                   JSR         @R12
    00002DF2 E402                   MOV         #2,R4
    00002DF4 1E0D                   MOV.L       R0,@(52,R14)
      simplexC.c  1601        res->id2fasesVariables=calloc(nVariables,sizeof(int));
    00002DF6 E504                   MOV         #4,R5
    00002DF8 4C0B                   JSR         @R12
    00002DFA E402                   MOV         #2,R4
    00002DFC 1E0E                   MOV.L       R0,@(56,R14)
      simplexC.c  1602        res->inequalitySigns=calloc(nConstraints,sizeof(int));
    00002DFE E504                   MOV         #4,R5
    00002E00 4C0B                   JSR         @R12
    00002E02 E403                   MOV         #3,R4
    00002E04 1E06                   MOV.L       R0,@(24,R14)
      simplexC.c  1603        res->funcObjectivePurpose=FUNC_MINIMIZE;
      simplexC.c  1604        res->funcObjtValues[0]=-4;
      simplexC.c  1605        res->funcObjtValues[1]=-6;
      simplexC.c  1606        res->funcObjtValues[2]=0;
      simplexC.c  1607        res->constraints=calloc(nConstraints,sizeof(float));
    00002E06 E504                   MOV         #4,R5
    00002E08 D25A                   MOV.L       L1502+36,R2; H'C0800000
    00002E0A E044                   MOV         #68,R0
    00002E0C 0EB6                   MOV.L       R11,@(R0,R14)
    00002E0E E048                   MOV         #72,R0
    00002E10 03EE                   MOV.L       @(R0,R14),R3
    00002E12 2322                   MOV.L       R2,@R3
    00002E14 03EE                   MOV.L       @(R0,R14),R3
    00002E16 D258                   MOV.L       L1502+40,R2; H'C0C00000
    00002E18 1321                   MOV.L       R2,@(4,R3)
    00002E1A 62B3                   MOV         R11,R2
    00002E1C 03EE                   MOV.L       @(R0,R14),R3
    00002E1E 13B2                   MOV.L       R11,@(8,R3)
    00002E20 4C0B                   JSR         @R12
    00002E22 E403                   MOV         #3,R4
    00002E24 1E04                   MOV.L       R0,@(16,R14)
      simplexC.c  1608        res->constraints[0]=calloc(nVariables,sizeof(float));
    00002E26 6803                   MOV         R0,R8
    00002E28 E504                   MOV         #4,R5
    00002E2A 4C0B                   JSR         @R12
    00002E2C E402                   MOV         #2,R4
      simplexC.c  1609        res->constraints[1]=calloc(nVariables,sizeof(float));
    00002E2E E504                   MOV         #4,R5
    00002E30 2802                   MOV.L       R0,@R8
    00002E32 58E4                   MOV.L       @(16,R14),R8
    00002E34 7804                   ADD         #4,R8
    00002E36 4C0B                   JSR         @R12
    00002E38 E402                   MOV         #2,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  135


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c  1610        res->constraints[2]=calloc(nVariables,sizeof(float));
    00002E3A E504                   MOV         #4,R5
    00002E3C 2802                   MOV.L       R0,@R8
    00002E3E 58E4                   MOV.L       @(16,R14),R8
    00002E40 7808                   ADD         #8,R8
    00002E42 4C0B                   JSR         @R12
    00002E44 E402                   MOV         #2,R4
      simplexC.c  1611        res->constraints[0][0]=-1;
      simplexC.c  1612        res->constraints[0][1]=1;
      simplexC.c  1613        res->constraints[1][0]=1;
      simplexC.c  1614        res->constraints[1][1]=1;
      simplexC.c  1615        res->constraints[2][0]=2;
      simplexC.c  1616        res->constraints[2][1]=5;
      simplexC.c  1617        res->inequalitySigns[0]=INE_LESS_OR_EQUAL_THAN;
      simplexC.c  1618        res->inequalitySigns[1]=INE_LESS_OR_EQUAL_THAN;
      simplexC.c  1619        res->inequalitySigns[2]=INE_LESS_OR_EQUAL_THAN;
      simplexC.c  1620        res->rightValues=calloc(nConstraints,sizeof(float));
    00002E46 E504                   MOV         #4,R5
    00002E48 2802                   MOV.L       R0,@R8
    00002E4A 53E4                   MOV.L       @(16,R14),R3
    00002E4C D14B                   MOV.L       L1502+44,R1; H'BF800000
    00002E4E 6232                   MOV.L       @R3,R2
    00002E50 2212                   MOV.L       R1,@R2
    00002E52 53E4                   MOV.L       @(16,R14),R3
    00002E54 D142                   MOV.L       L1502+16,R1; H'3F800000
    00002E56 6232                   MOV.L       @R3,R2
    00002E58 1211                   MOV.L       R1,@(4,R2)
    00002E5A 53E4                   MOV.L       @(16,R14),R3
    00002E5C 5231                   MOV.L       @(4,R3),R2
    00002E5E 2212                   MOV.L       R1,@R2
    00002E60 53E4                   MOV.L       @(16,R14),R3
    00002E62 5231                   MOV.L       @(4,R3),R2
    00002E64 1211                   MOV.L       R1,@(4,R2)
    00002E66 53E4                   MOV.L       @(16,R14),R3
    00002E68 D13E                   MOV.L       L1502+20,R1; H'40000000
    00002E6A 5232                   MOV.L       @(8,R3),R2
    00002E6C 2212                   MOV.L       R1,@R2
    00002E6E 53E4                   MOV.L       @(16,R14),R3
    00002E70 D13A                   MOV.L       L1502+12,R1; H'40A00000
    00002E72 5232                   MOV.L       @(8,R3),R2
    00002E74 1211                   MOV.L       R1,@(4,R2)
    00002E76 53E6                   MOV.L       @(24,R14),R3
    00002E78 23D2                   MOV.L       R13,@R3
    00002E7A 52E6                   MOV.L       @(24,R14),R2
    00002E7C 12D1                   MOV.L       R13,@(4,R2)
    00002E7E 53E6                   MOV.L       @(24,R14),R3
    00002E80 13D2                   MOV.L       R13,@(8,R3)
    00002E82 4C0B                   JSR         @R12
    00002E84 E403                   MOV         #3,R4
      simplexC.c  1621        res->rightValues[0]=11;
    00002E86 6203                   MOV         R0,R2
    00002E88 D33D                   MOV.L       L1502+48,R3; H'41300000
    00002E8A 1E05                   MOV.L       R0,@(20,R14)
    00002E8C 2232                   MOV.L       R3,@R2
      simplexC.c  1622        res->rightValues[1]=27;
      simplexC.c  1623        res->rightValues[2]=90;
      simplexC.c  1624        res->nVariables2fases=0;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  136


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c  1625        res->is2fasesNeeded=0;
      simplexC.c  1626    
      simplexC.c  1627        return res;
    00002E8E 60E3                   MOV         R14,R0
    00002E90 52E5                   MOV.L       @(20,R14),R2
    00002E92 D33C                   MOV.L       L1502+52,R3; H'41D80000
    00002E94 1231                   MOV.L       R3,@(4,R2)
    00002E96 52E5                   MOV.L       @(20,R14),R2
    00002E98 D33B                   MOV.L       L1502+56,R3; H'42B40000
    00002E9A 1232                   MOV.L       R3,@(8,R2)
    00002E9C 1EB9                   MOV.L       R11,@(36,R14)
    00002E9E 1EB2                   MOV.L       R11,@(8,R14)
      simplexC.c  1628    }
    00002EA0 7F08                   ADD         #8,R15
    00002EA2 4F26                   LDS.L       @R15+,PR
    00002EA4 68F6                   MOV.L       @R15+,R8
    00002EA6 6BF6                   MOV.L       @R15+,R11
    00002EA8 6CF6                   MOV.L       @R15+,R12
    00002EAA 6DF6                   MOV.L       @R15+,R13
    00002EAC 000B                   RTS
    00002EAE 6EF6                   MOV.L       @R15+,R14
      simplexC.c  1629    
      simplexC.c  1630    struct iteration *convertToSecondPhase(int nodeId, int firsItId)
    00002EB0              _convertToSecondPhase:           ; function: convertToSecondPhase
                                                           ; frame size=32
    00002EB0 2FE6                   MOV.L       R14,@-R15
    00002EB2 2FD6                   MOV.L       R13,@-R15
    00002EB4 2FC6                   MOV.L       R12,@-R15
      simplexC.c  1631    {
      simplexC.c  1632        int i,j;
      simplexC.c  1633        struct iteration *it,*originalIt;
      simplexC.c  1634        originalIt=ex.nodes.its[firsItId];
    00002EB6 6D53                   MOV         R5,R13
      simplexC.c  1635        it = malloc(sizeof(struct iteration));
    00002EB8 D325                   MOV.L       L1502,R3   ; _malloc
    00002EBA 4D08                   SHLL2       R13
    00002EBC 2FA6                   MOV.L       R10,@-R15
    00002EBE 2F96                   MOV.L       R9,@-R15
    00002EC0 2F86                   MOV.L       R8,@-R15
    00002EC2 4F22                   STS.L       PR,@-R15
    00002EC4 D931                   MOV.L       L1502+60,R9; _ex
    00002EC6 5095                   MOV.L       @(20,R9),R0
    00002EC8 0DDE                   MOV.L       @(R0,R13),R13
    00002ECA 430B                   JSR         @R3
    00002ECC E448                   MOV         #72,R4
    00002ECE 6E03                   MOV         R0,R14
      simplexC.c  1636        it->BinvSize=originalIt->BinvSize;
    00002ED0 52D9                   MOV.L       @(36,R13),R2
      simplexC.c  1637        it->Binv=calloc(it->BinvSize,sizeof(float));
    00002ED2 E504                   MOV         #4,R5
    00002ED4 D81F                   MOV.L       L1502+4,R8 ; _calloc
    00002ED6 1E29                   MOV.L       R2,@(36,R14)
    00002ED8 480B                   JSR         @R8
    00002EDA 6423                   MOV         R2,R4
    00002EDC 1E08                   MOV.L       R0,@(32,R14)
      simplexC.c  1638        for(i=0;i<it->BinvSize;i++)
    00002EDE EA00                   MOV         #0,R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  137


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002EE0 A01C                   BRA         L1436
    00002EE2 6CA3                   MOV         R10,R12
    00002EE4              L1437:                            
      simplexC.c  1639        {
      simplexC.c  1640            it->Binv[i]=calloc(it->BinvSize,sizeof(float));
    00002EE4 50E8                   MOV.L       @(32,R14),R0
    00002EE6 E504                   MOV         #4,R5
    00002EE8 62C3                   MOV         R12,R2
    00002EEA 4208                   SHLL2       R2
    00002EEC 302C                   ADD         R2,R0
    00002EEE 2F06                   MOV.L       R0,@-R15
    00002EF0 480B                   JSR         @R8
    00002EF2 54E9                   MOV.L       @(36,R14),R4
    00002EF4 63F6                   MOV.L       @R15+,R3
      simplexC.c  1641            for(j=0;j<it->BinvSize;j++)
    00002EF6 64A3                   MOV         R10,R4
    00002EF8 2302                   MOV.L       R0,@R3
    00002EFA 61C3                   MOV         R12,R1
    00002EFC A00A                   BRA         L1438
    00002EFE 4108                   SHLL2       R1
    00002F00              L1439:                            
      simplexC.c  1642            {
      simplexC.c  1643                it->Binv[i][j]=originalIt->Binv[i][j];
    00002F00 50E8                   MOV.L       @(32,R14),R0
    00002F02 6543                   MOV         R4,R5
    00002F04 031E                   MOV.L       @(R0,R1),R3
    00002F06 4508                   SHLL2       R5
    00002F08 50D8                   MOV.L       @(32,R13),R0
    00002F0A 7401                   ADD         #1,R4
    00002F0C 001E                   MOV.L       @(R0,R1),R0
    00002F0E 335C                   ADD         R5,R3
    00002F10 025E                   MOV.L       @(R0,R5),R2
    00002F12 2322                   MOV.L       R2,@R3
    00002F14              L1438:                            
    00002F14 53E9                   MOV.L       @(36,R14),R3
    00002F16 3433                   CMP/GE      R3,R4
    00002F18 8BF2                   BF          L1439
    00002F1A 7C01                   ADD         #1,R12
    00002F1C              L1436:                            
    00002F1C 53E9                   MOV.L       @(36,R14),R3
    00002F1E 3C33                   CMP/GE      R3,R12
    00002F20 8BE0                   BF          L1437
      simplexC.c  1644            }
      simplexC.c  1645            
      simplexC.c  1646        }
      simplexC.c  1647        it->idBasicVariables=calloc(ex.nVariables,sizeof(int));
    00002F22 E504                   MOV         #4,R5
    00002F24 480B                   JSR         @R8
    00002F26 549B                   MOV.L       @(44,R9),R4
    00002F28 1E02                   MOV.L       R0,@(8,R14)
      simplexC.c  1648        it->idByRowOfBasicVarsInBInv=calloc(it->BinvSize,sizeof(int));
    00002F2A E504                   MOV         #4,R5
    00002F2C 480B                   JSR         @R8
    00002F2E 54E9                   MOV.L       @(36,R14),R4
    00002F30 1E03                   MOV.L       R0,@(12,R14)
      simplexC.c  1649        for(i=0;i<it->BinvSize;i++)
    00002F32 A008                   BRA         L1440




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  138


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002F34 64A3                   MOV         R10,R4
    00002F36              L1441:                            
      simplexC.c  1650        {
      simplexC.c  1651            it->idByRowOfBasicVarsInBInv[i]=originalIt->idByRowOfBasicVarsInBInv[i];
    00002F36 6543                   MOV         R4,R5
    00002F38 53E3                   MOV.L       @(12,R14),R3
    00002F3A 4508                   SHLL2       R5
    00002F3C 50D3                   MOV.L       @(12,R13),R0
    00002F3E 7401                   ADD         #1,R4
    00002F40 025E                   MOV.L       @(R0,R5),R2
    00002F42 335C                   ADD         R5,R3
    00002F44 2322                   MOV.L       R2,@R3
    00002F46              L1440:                            
    00002F46 52E9                   MOV.L       @(36,R14),R2
    00002F48 3423                   CMP/GE      R2,R4
    00002F4A 8BF4                   BF          L1441
      simplexC.c  1652        }
      simplexC.c  1653        for(i=0;i<ex.nVariables;i++)
    00002F4C A028                   BRA         L1442
    00002F4E 64A3                   MOV         R10,R4
    00002F50              L1502:                            
    00002F50 <00000000>             .DATA.L     _malloc
    00002F54 <00000000>             .DATA.L     _calloc
    00002F58 40400000               .DATA.L     H'40400000
    00002F5C 40A00000               .DATA.L     H'40A00000
    00002F60 3F800000               .DATA.L     H'3F800000
    00002F64 40000000               .DATA.L     H'40000000
    00002F68 40800000               .DATA.L     H'40800000
    00002F6C 41400000               .DATA.L     H'41400000
    00002F70 41900000               .DATA.L     H'41900000
    00002F74 C0800000               .DATA.L     H'C0800000
    00002F78 C0C00000               .DATA.L     H'C0C00000
    00002F7C BF800000               .DATA.L     H'BF800000
    00002F80 41300000               .DATA.L     H'41300000
    00002F84 41D80000               .DATA.L     H'41D80000
    00002F88 42B40000               .DATA.L     H'42B40000
    00002F8C <00000000>             .DATA.L     _ex
    00002F90              L1443:                            
      simplexC.c  1654        {
      simplexC.c  1655            it->idBasicVariables[i]=originalIt->idBasicVariables[i];
    00002F90 52E2                   MOV.L       @(8,R14),R2
    00002F92 6543                   MOV         R4,R5
    00002F94 50D2                   MOV.L       @(8,R13),R0
    00002F96 4508                   SHLL2       R5
    00002F98 035E                   MOV.L       @(R0,R5),R3
    00002F9A 7401                   ADD         #1,R4
    00002F9C 325C                   ADD         R5,R2
    00002F9E 2232                   MOV.L       R3,@R2
    00002FA0              L1442:                            
    00002FA0 539B                   MOV.L       @(44,R9),R3
    00002FA2 3433                   CMP/GE      R3,R4
    00002FA4 8BF4                   BF          L1443
      simplexC.c  1656        }
      simplexC.c  1657        return it;
    00002FA6 60E3                   MOV         R14,R0
      simplexC.c  1658    }
    00002FA8 4F26                   LDS.L       @R15+,PR




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  139


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002FAA 68F6                   MOV.L       @R15+,R8
    00002FAC 69F6                   MOV.L       @R15+,R9
    00002FAE 6AF6                   MOV.L       @R15+,R10
    00002FB0 6CF6                   MOV.L       @R15+,R12
    00002FB2 6DF6                   MOV.L       @R15+,R13
    00002FB4 000B                   RTS
    00002FB6 6EF6                   MOV.L       @R15+,R14
      simplexC.c  1659    
      simplexC.c  1660    int solveSimplexLPOneFase(int nodeId, int firsItId)
    00002FB8              _solveSimplexLPOneFase:          ; function: solveSimplexLPOneFase
                                                           ; frame size=20
    00002FB8 2FE6                   MOV.L       R14,@-R15
      simplexC.c  1661    {
      simplexC.c  1662        int itId, nId;
      simplexC.c  1663        float zSol;
      simplexC.c  1664        itId=firsItId;
      simplexC.c  1665        ex.nodes.its[itId]->numIteration=itId;
    00002FBA 6353                   MOV         R5,R3
    00002FBC 2FD6                   MOV.L       R13,@-R15
    00002FBE 4308                   SHLL2       R3
    00002FC0 DE3C                   MOV.L       L1503+4,R14; _ex
    00002FC2 6D53                   MOV         R5,R13
    00002FC4 2FC6                   MOV.L       R12,@-R15
    00002FC6 2FB6                   MOV.L       R11,@-R15
    00002FC8 4F22                   STS.L       PR,@-R15
    00002FCA 50E5                   MOV.L       @(20,R14),R0
    00002FCC 023E                   MOV.L       @(R0,R3),R2
      simplexC.c  1666        while(ex.nodes.its[itId]->idVarIn!=-1 && ex.nodes.its[itId]->idVarOut!=-1)
    00002FCE A015                   BRA         L1445
    00002FD0 2252                   MOV.L       R5,@R2
    00002FD2              L1446:                            
      simplexC.c  1667        {
      simplexC.c  1668            calculateIteration(ex.nodes.its[itId]);
    00002FD2 6CD3                   MOV         R13,R12
    00002FD4 50E5                   MOV.L       @(20,R14),R0
    00002FD6 4C08                   SHLL2       R12
    00002FD8 D237                   MOV.L       L1503+8,R2 ; _calculateIteration
    00002FDA 420B                   JSR         @R2
    00002FDC 04CE                   MOV.L       @(R0,R12),R4
      simplexC.c  1669            if(ex.nodes.its[itId]->idVarIn!=-1 && ex.nodes.its[itId]->idVarOut!=-1){
    00002FDE 50E5                   MOV.L       @(20,R14),R0
    00002FE0 04CE                   MOV.L       @(R0,R12),R4
    00002FE2 5045                   MOV.L       @(20,R4),R0
    00002FE4 88FF                   CMP/EQ      #-1,R0
    00002FE6 8909                   BT          L1445
    00002FE8 5046                   MOV.L       @(24,R4),R0
    00002FEA 88FF                   CMP/EQ      #-1,R0
    00002FEC 8906                   BT          L1445
      simplexC.c  1670                ex.nodes.its[itId+1]=createNewIteration(ex.nodes.its[itId]);
    00002FEE 5BE5                   MOV.L       @(20,R14),R11
    00002FF0 D332                   MOV.L       L1503+12,R3; _createNewIteration
    00002FF2 3BCC                   ADD         R12,R11
    00002FF4 430B                   JSR         @R3
    00002FF6 64B2                   MOV.L       @R11,R4
    00002FF8 1B01                   MOV.L       R0,@(4,R11)
      simplexC.c  1671                zSol= ex.nodes.its[itId]->zSol;
      simplexC.c  1672                    itId++;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  140


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00002FFA 7D01                   ADD         #1,R13
    00002FFC              L1445:                            
    00002FFC 50E5                   MOV.L       @(20,R14),R0
    00002FFE 64D3                   MOV         R13,R4
    00003000 4408                   SHLL2       R4
    00003002 044E                   MOV.L       @(R0,R4),R4
    00003004 5045                   MOV.L       @(20,R4),R0
    00003006 88FF                   CMP/EQ      #-1,R0
    00003008 8902                   BT          L1448
    0000300A 5046                   MOV.L       @(24,R4),R0
    0000300C 88FF                   CMP/EQ      #-1,R0
    0000300E 8BE0                   BF          L1446
    00003010              L1448:                            
      simplexC.c  1673            }
      simplexC.c  1674                
      simplexC.c  1675        }
      simplexC.c  1676        return itId;
      simplexC.c  1677    }
    00003010 4F26                   LDS.L       @R15+,PR
    00003012 60D3                   MOV         R13,R0
    00003014 6BF6                   MOV.L       @R15+,R11
    00003016 6CF6                   MOV.L       @R15+,R12
    00003018 6DF6                   MOV.L       @R15+,R13
    0000301A 000B                   RTS
    0000301C 6EF6                   MOV.L       @R15+,R14
      simplexC.c  1678    
      simplexC.c  1679    int solveSimplexLP(int nodeId)
    0000301E              _solveSimplexLP:                 ; function: solveSimplexLP
                                                           ; frame size=148
    0000301E 2FE6                   MOV.L       R14,@-R15
    00003020 2FD6                   MOV.L       R13,@-R15
    00003022 2FC6                   MOV.L       R12,@-R15
    00003024 2F86                   MOV.L       R8,@-R15
    00003026 4F22                   STS.L       PR,@-R15
      simplexC.c  1680    {
      simplexC.c  1681        int itId,lastItId;
      simplexC.c  1682        char strSol[128];
      simplexC.c  1683        ex.nodes.id=nodeId;
    00003028 DE22                   MOV.L       L1503+4,R14; _ex
    0000302A 7F80                   ADD         #-128,R15
    0000302C 1E43                   MOV.L       R4,@(12,R14)
      simplexC.c  1684        
      simplexC.c  1685        if(ex.mode==MODE_FULL_EXECUTION)
    0000302E 63E2                   MOV.L       @R14,R3
    00003030 2338                   TST         R3,R3
    00003032 8F05                   BF/S        L1450
    00003034 6D43                   MOV         R4,R13
      simplexC.c  1686        {
      simplexC.c  1687            ex.nodes.its[0]=modelToIteration(ex.canonicalStatement);
    00003036 58E5                   MOV.L       @(20,R14),R8
    00003038 D221                   MOV.L       L1503+16,R2; _modelToIteration
    0000303A 420B                   JSR         @R2
    0000303C 54E2                   MOV.L       @(8,R14),R4
    0000303E 2802                   MOV.L       R0,@R8
    00003040              L1450:                            
      simplexC.c  1688        }
      simplexC.c  1689        if(ex.canonicalStatement->is2fasesActive)




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  141


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003040 53E2                   MOV.L       @(8,R14),R3
    00003042 5233                   MOV.L       @(12,R3),R2
    00003044 2228                   TST         R2,R2
    00003046 8917                   BT          L1451
      simplexC.c  1690        {
      simplexC.c  1691            lastItId=solveSimplexLPOneFase(nodeId, 0);
    00003048 E500                   MOV         #0,R5
    0000304A BFB5                   BSR         _solveSimplexLPOneFase
    0000304C 64D3                   MOV         R13,R4
    0000304E 6C03                   MOV         R0,R12
      simplexC.c  1692            ex.currentFuncObjectivePurpose=ex.canonicalStatement->funcObjectivePurpose;//CAMBIAR
    00003050 52E2                   MOV.L       @(8,R14),R2
    00003052 E044                   MOV         #68,R0
    00003054 032E                   MOV.L       @(R0,R2),R3
      simplexC.c  1693            //NO SE SI HACE FALTA MAS
      simplexC.c  1694            ex.canonicalStatement->is2fasesActive=0;
      simplexC.c  1695            ex.nodes.its[lastItId+1]=convertToSecondPhase(nodeId, lastItId);
    00003056 65C3                   MOV         R12,R5
    00003058 1E3A                   MOV.L       R3,@(40,R14)
    0000305A E300                   MOV         #0,R3
    0000305C 52E2                   MOV.L       @(8,R14),R2
    0000305E 1233                   MOV.L       R3,@(12,R2)
    00003060 53E5                   MOV.L       @(20,R14),R3
    00003062 62C3                   MOV         R12,R2
    00003064 4208                   SHLL2       R2
    00003066 323C                   ADD         R3,R2
    00003068 6823                   MOV         R2,R8
    0000306A 7804                   ADD         #4,R8
    0000306C BF20                   BSR         _convertToSecondPhase
    0000306E 64D3                   MOV         R13,R4
    00003070 2802                   MOV.L       R0,@R8
      simplexC.c  1696            lastItId=solveSimplexLPOneFase(nodeId, lastItId+1);
    00003072 65C3                   MOV         R12,R5
    00003074 A001                   BRA         L1468
    00003076 7501                   ADD         #1,R5
    00003078              L1451:                            
      simplexC.c  1697        }else
      simplexC.c  1698        {
      simplexC.c  1699            lastItId=solveSimplexLPOneFase(nodeId, 0);
    00003078 E500                   MOV         #0,R5
    0000307A              L1468:                            
    0000307A BF9D                   BSR         _solveSimplexLPOneFase
    0000307C 64D3                   MOV         R13,R4
    0000307E 6403                   MOV         R0,R4
      simplexC.c  1700        }
      simplexC.c  1701        ex.nodes.nIterations=lastItId;
    00003080 1E04                   MOV.L       R0,@(16,R14)
      simplexC.c  1702    
      simplexC.c  1703        return 0;
    00003082 E000                   MOV         #0,R0
      simplexC.c  1704    }
    00003084 9114                   MOV.W       L1503,R1   ; H'0080
    00003086 3F1C                   ADD         R1,R15
    00003088 4F26                   LDS.L       @R15+,PR
    0000308A 68F6                   MOV.L       @R15+,R8
    0000308C 6CF6                   MOV.L       @R15+,R12
    0000308E 6DF6                   MOV.L       @R15+,R13




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  142


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003090 000B                   RTS
    00003092 6EF6                   MOV.L       @R15+,R14
      simplexC.c  1705    
      simplexC.c  1706    
      simplexC.c  1707    int initializeExecution()
    00003094              _initializeExecution:            ; function: initializeExecution
                                                           ; frame size=0
      simplexC.c  1708    {
      simplexC.c  1709        ex.bVectorValues=ex.canonicalStatement->rightValues;
    00003094 D407                   MOV.L       L1503+4,R4 ; _ex
    00003096 5342                   MOV.L       @(8,R4),R3
    00003098 5235                   MOV.L       @(20,R3),R2
    0000309A 1426                   MOV.L       R2,@(24,R4)
    0000309C 5542                   MOV.L       @(8,R4),R5
    0000309E 6353                   MOV         R5,R3
    000030A0 5232                   MOV.L       @(8,R3),R2
    000030A2 2228                   TST         R2,R2
    000030A4 890E                   BT          L1454
      simplexC.c  1710        if(ex.canonicalStatement->is2fasesNeeded)
      simplexC.c  1711        {
      simplexC.c  1712            ex.canonicalStatement->is2fasesActive=1;
    000030A6 E201                   MOV         #1,R2
    000030A8 1523                   MOV.L       R2,@(12,R5)
      simplexC.c  1713            ex.currentFuncObjectivePurpose=FUNC_MINIMIZE;
    000030AA E300                   MOV         #0,R3
    000030AC A00D                   BRA         L1455
    000030AE 143A                   MOV.L       R3,@(40,R4)
    000030B0              L1503:                            
    000030B0 0080                   .DATA.W     H'0080
    000030B2 0000                   .DATA.W     0
    000030B4 <00000000>             .DATA.L     _ex
    000030B8 <00000000>             .DATA.L     _calculateIteration
    000030BC <00000000>             .DATA.L     _createNewIteration
    000030C0 <00000000>             .DATA.L     _modelToIteration
    000030C4              L1454:                            
      simplexC.c  1714        }else
      simplexC.c  1715        {
      simplexC.c  1716            ex.currentFuncObjectivePurpose=ex.canonicalStatement->funcObjectivePurpose;
    000030C4 E044                   MOV         #68,R0
    000030C6 015E                   MOV.L       @(R0,R5),R1
    000030C8 141A                   MOV.L       R1,@(40,R4)
    000030CA              L1455:                            
      simplexC.c  1717        }
      simplexC.c  1718        ex.inputCvectorValues=ex.canonicalStatement->funcObjtValues;
    000030CA E048                   MOV         #72,R0
    000030CC 5342                   MOV.L       @(8,R4),R3
    000030CE 023E                   MOV.L       @(R0,R3),R2
    000030D0 1427                   MOV.L       R2,@(28,R4)
      simplexC.c  1719        ex.fases2CvectorValues=ex.canonicalStatement->funcObjtValues2Fases;
    000030D2 E04C                   MOV         #76,R0
    000030D4 5342                   MOV.L       @(8,R4),R3
    000030D6 023E                   MOV.L       @(R0,R3),R2
    000030D8 1428                   MOV.L       R2,@(32,R4)
      simplexC.c  1720        return 0;
      simplexC.c  1721    }
    000030DA 000B                   RTS
    000030DC E000                   MOV         #0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  143


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

      simplexC.c  1722    
      simplexC.c  1723    int AddIn_main(int isAppli, unsigned short OptionNum)
    000030DE              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=196
                                                           ; used runtime library name:
                                                           ; __quick_evn_mvn
    000030DE 2FE6                   MOV.L       R14,@-R15
    000030E0 2F86                   MOV.L       R8,@-R15
    000030E2 4F22                   STS.L       PR,@-R15
    000030E4 DE26                   MOV.L       L1504+4,R14; _ex
    000030E6 7F80                   ADD         #-128,R15
      simplexC.c  1724    {
      simplexC.c  1725        char str[128];
      simplexC.c  1726        selectExecutionMode();
    000030E8 BBF6                   BSR         _selectExecutionMode
    000030EA 0009                   NOP
    000030EC 64E2                   MOV.L       @R14,R4
    000030EE 2448                   TST         R4,R4
    000030F0 8B18                   BF          L1457
      simplexC.c  1727        if(ex.mode==MODE_FULL_EXECUTION)
      simplexC.c  1728        {
      simplexC.c  1729            // sprintf(str,"nSlope %d, N2F %d",ex.initialProblemStatement->nVariablesSlope,ex.initialProblemSt
                         +atement->nVariables2fases);
      simplexC.c  1730            // PrintMini(0, 0, (unsigned char *)str, MINI_OVER);    
      simplexC.c  1731            // Bdisp_PutDisp_DD();
      simplexC.c  1732            // Sleep(3000);
      simplexC.c  1733            Bdisp_AllClr_DDVRAM();
    000030F2 D324                   MOV.L       L1504+8,R3 ; _Bdisp_AllClr_DDVRAM
    000030F4 430B                   JSR         @R3
    000030F6 0009                   NOP
      simplexC.c  1734            ex.initialProblemStatement=createProblemStatementToDebug2Fases();
    000030F8 BDCF                   BSR         _createProblemStatementToDebug2Fases
    000030FA 0009                   NOP
    000030FC 1E01                   MOV.L       R0,@(4,R14)
      simplexC.c  1735            // ex.initialProblemStatement=getProblemInputs();
      simplexC.c  1736            printStatementMenu(ex.initialProblemStatement);
    000030FE D322                   MOV.L       L1504+12,R3; _printStatementMenu
    00003100 430B                   JSR         @R3
    00003102 6403                   MOV         R0,R4
      simplexC.c  1737            convertModel(ex);
    00003104 D321                   MOV.L       L1504+16,R3; __quick_evn_mvn
    00003106 62E3                   MOV         R14,R2
    00003108 E038                   MOV         #56,R0
    0000310A 3F08                   SUB         R0,R15
    0000310C 430B                   JSR         @R3
    0000310E 61F3                   MOV         R15,R1
    00003110 BC0D                   BSR         _convertModel
    00003112 0009                   NOP
      simplexC.c  1738            printStatementMenu(ex.canonicalStatement);
    00003114 D31C                   MOV.L       L1504+12,R3; _printStatementMenu
    00003116 7F38                   ADD         #56,R15
    00003118 430B                   JSR         @R3
    0000311A 54E2                   MOV.L       @(8,R14),R4
      simplexC.c  1739            initializeExecution();
    0000311C BFBA                   BSR         _initializeExecution
    0000311E 0009                   NOP
    00003120 A006                   BRA         L1025




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  144


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00003122 0009                   NOP
    00003124              L1457:                            
      simplexC.c  1740            solveSimplexLP(0);
      simplexC.c  1741            printSolMenu();
      simplexC.c  1742    
      simplexC.c  1743        }else if(ex.mode==MODE_INPUT_TABLE)
    00003124 6043                   MOV         R4,R0
    00003126 8801                   CMP/EQ      #1,R0
    00003128 8B09                   BF          L1459
      simplexC.c  1744        {
      simplexC.c  1745            ex.nodes.its[0]=getProblemFromTableau();
    0000312A B9A5                   BSR         _getProblemFromTableau
    0000312C 58E5                   MOV.L       @(20,R14),R8
    0000312E 2802                   MOV.L       R0,@R8
    00003130              L1025:
      simplexC.c  1746            solveSimplexLP(0);
    00003130 BF75                   BSR         _solveSimplexLP
    00003132 E400                   MOV         #0,R4
      simplexC.c  1747            printSolMenu();
    00003134 D216                   MOV.L       L1504+20,R2; _printSolMenu
    00003136 420B                   JSR         @R2
    00003138 0009                   NOP
    0000313A A010                   BRA         L1458
    0000313C 0009                   NOP
    0000313E              L1459:                            
      simplexC.c  1748        }else
      simplexC.c  1749        {
      simplexC.c  1750            Bdisp_AllClr_DDVRAM();
    0000313E D211                   MOV.L       L1504+8,R2 ; _Bdisp_AllClr_DDVRAM
    00003140 420B                   JSR         @R2
    00003142 0009                   NOP
      simplexC.c  1751            PrintMini(0, 0, (unsigned char *)"ERROR", MINI_OVER);
    00003144 D613                   MOV.L       L1504+24,R6; L558
    00003146 E500                   MOV         #0,R5
    00003148 D313                   MOV.L       L1504+28,R3; _PrintMini
    0000314A E710                   MOV         #16,R7
    0000314C 430B                   JSR         @R3
    0000314E 6453                   MOV         R5,R4
      simplexC.c  1752            Bdisp_PutDisp_DD();
    00003150 D212                   MOV.L       L1504+32,R2; _Bdisp_PutDisp_DD
    00003152 420B                   JSR         @R2
    00003154 0009                   NOP
      simplexC.c  1753            Sleep(3000);
    00003156 9411                   MOV.W       L1504,R4   ; H'0BB8
    00003158 D311                   MOV.L       L1504+36,R3; _Sleep
    0000315A 430B                   JSR         @R3
    0000315C 0009                   NOP
    0000315E              L1458:                            
      simplexC.c  1754        }
      simplexC.c  1755        freeMemoryExecution(ex);
    0000315E 62E3                   MOV         R14,R2
    00003160 D30A                   MOV.L       L1504+16,R3; __quick_evn_mvn
    00003162 E038                   MOV         #56,R0
    00003164 3F08                   SUB         R0,R15
    00003166 430B                   JSR         @R3
    00003168 61F3                   MOV         R15,R1
    0000316A D20E                   MOV.L       L1504+40,R2; _freeMemoryExecution




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  145


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000316C 420B                   JSR         @R2
    0000316E 0009                   NOP
      simplexC.c  1756        
      simplexC.c  1757    }
    00003170 9105                   MOV.W       L1504+2,R1 ; H'00B8
    00003172 3F1C                   ADD         R1,R15
    00003174 4F26                   LDS.L       @R15+,PR
    00003176 68F6                   MOV.L       @R15+,R8
    00003178 000B                   RTS
    0000317A 6EF6                   MOV.L       @R15+,R14
    0000317C              L1504:                            
    0000317C 0BB8                   .DATA.W     H'0BB8
    0000317E 00B8                   .DATA.W     H'00B8
    00003180 <00000000>             .DATA.L     _ex
    00003184 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00003188 <00000000>             .DATA.L     _printStatementMenu
    0000318C <00000000>             .DATA.L     __quick_evn_mvn
    00003190 <00000000>             .DATA.L     _printSolMenu
    00003194 <00000000>             .DATA.L     L558
    00003198 <00000000>             .DATA.L     _PrintMini
    0000319C <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    000031A0 <00000000>             .DATA.L     _Sleep
    000031A4 <00000000>             .DATA.L     _freeMemoryExecution
      simplexC.c  1758    
      simplexC.c  1759    #pragma section _BR_Size
      simplexC.c  1760    unsigned long BR_Size;
      simplexC.c  1761    #pragma section
      simplexC.c  1762    
      simplexC.c  1763    #pragma section _TOP
      simplexC.c  1764    
      simplexC.c  1765    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
      simplexC.c  1766    {
      simplexC.c  1767        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L1505+2,R3 ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L1505:                            
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
      simplexC.c  1768    }
      simplexC.c  1769    
      simplexC.c  1770    #pragma section
C   00000000              L555:
    00000000 3D                     .SDATA      "="
    00000001 00                     .DATA.B     H'00
    00000002 00000002               .RES.W      1
    00000004              L556:
    00000004 3C3D                   .SDATA      "<="
    00000006 00                     .DATA.B     H'00
    00000007 00000001               .RES.B      1
    00000008              L557:
    00000008 3E3D                   .SDATA      ">="
    0000000A 00                     .DATA.B     H'00
    0000000B 00000001               .RES.B      1
    0000000C              L558:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  146


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000000C 4552524F52             .SDATA      "ERROR"
    00000011 00                     .DATA.B     H'00
    00000012 00000002               .RES.W      1
    00000014              L564:
    00000014 4D494E                 .SDATA      "MIN"
    00000017 00                     .DATA.B     H'00
    00000018              L565:
    00000018 4D4158                 .SDATA      "MAX"
    0000001B 00                     .DATA.B     H'00
    0000001C              L577:
    0000001C 50726F626C             .SDATA      "Problem statement %s, OBJ. Exit %d"
             656D207374   
             6174656D65   
             6E74202573   
             2C204F424A   
             2E20457869   
             74202564     
    0000003E 00                     .DATA.B     H'00
    0000003F 00000001               .RES.B      1
    00000040              L578:
    00000040 494E505554             .SDATA      "INPUT"
    00000045 00                     .DATA.B     H'00
    00000046 00000002               .RES.W      1
    00000048              L579:
    00000048 534F4C5645             .SDATA      "SOLVE"
    0000004D 00                     .DATA.B     H'00
    0000004E 00000002               .RES.W      1
    00000050              L580:
    00000050 4E436F6E73             .SDATA      "NConstraints: %d, NVariables: %d"
             747261696E   
             74733A2025   
             642C204E56   
             6172696162   
             6C65733A20   
             2564         
    00000070 00                     .DATA.B     H'00
    00000071 00000001               .RES.B      1
    00000072 00000002               .RES.W      1
    00000074              L582:
    00000074 4F424A2025             .SDATA      "OBJ %s"
             73           
    0000007A 00                     .DATA.B     H'00
    0000007B 00000001               .RES.B      1
    0000007C              L583:
    0000007C 496E642074             .SDATA      "Ind term: %.2f. Sel var"
             65726D3A20   
             252E32662E   
             2053656C20   
             766172       
    00000093 00                     .DATA.B     H'00
    00000094              L585:
    00000094 4F424A204D             .SDATA      "OBJ MIN"
             494E         
    0000009B 00                     .DATA.B     H'00
    0000009C              L589:
    0000009C 4F626A2076             .SDATA      "Obj val x%d: %.2f"
             616C207825   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  147


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             643A20252E   
             3266         
    000000AD 00                     .DATA.B     H'00
    000000AE 00000002               .RES.W      1
    000000B0              L591:
    000000B0 5072657373             .SDATA      "Press any key to continue"
             20616E7920   
             6B65792074   
             6F20636F6E   
             74696E7565   
    000000C9 00                     .DATA.B     H'00
    000000CA 00000002               .RES.W      1
    000000CC              L599:
    000000CC 417825642E             .SDATA      "Ax%d. nConstraints: %d, Exit %d"
             206E436F6E   
             7374726169   
             6E74733A20   
             25642C2045   
             7869742025   
             64           
    000000EB 00                     .DATA.B     H'00
    000000EC              L602:
    000000EC 417825642E             .SDATA      "Ax%d. %.2f Pos %d"
             20252E3266   
             20506F7320   
             2564         
    000000FD 00                     .DATA.B     H'00
    000000FE 00000002               .RES.W      1
    00000100              L609:
    00000100 41786A2070             .SDATA      "Axj pMenu Vars %d.  %d exit"
             4D656E7520   
             5661727320   
             25642E2020   
             2564206578   
             6974         
    0000011B 00                     .DATA.B     H'00
    0000011C              L621:
    0000011C 436F6E7374             .SDATA      "Constraint %d. Vars: %d, Exit %d"
             7261696E74   
             2025642E20   
             566172733A   
             2025642C20   
             4578697420   
             2564         
    0000013C 00                     .DATA.B     H'00
    0000013D 00000001               .RES.B      1
    0000013E 00000002               .RES.W      1
    00000140              L623:
    00000140 436F6E7374             .SDATA      "Const %d. %.2f x%d"
             2025642E20   
             252E326620   
             782564       
    00000152 00                     .DATA.B     H'00
    00000153 00000001               .RES.B      1
    00000154              L625:
    00000154 20536C6F70             .SDATA      " Slope"
             65           




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  148


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000015A 00                     .DATA.B     H'00
    0000015B 00000001               .RES.B      1
    0000015C              L627:
    0000015C 204475616C             .SDATA      " Dual"
    00000161 00                     .DATA.B     H'00
    00000162 00000002               .RES.W      1
    00000164              L629:
    00000164 20496E74               .SDATA      " Int"
    00000168 00                     .DATA.B     H'00
    00000169 00000001               .RES.B      1
    0000016A 00000002               .RES.W      1
    0000016C              L636:
    0000016C 436F6E7374             .SDATA      "Constraint %d. Ine: %s"
             7261696E74   
             2025642E20   
             496E653A20   
             2573         
    00000182 00                     .DATA.B     H'00
    00000183 00000001               .RES.B      1
    00000184              L643:
    00000184 436F6E7374             .SDATA      "Constraint %d. Rval: %.2f"
             7261696E74   
             2025642E20   
             5276616C3A   
             20252E3266   
    0000019D 00                     .DATA.B     H'00
    0000019E 00000002               .RES.W      1
    000001A0              L651:
    000001A0 436F6E7374             .SDATA      "Constraint %d printMenu. %d exit"
             7261696E74   
             2025642070   
             72696E744D   
             656E752E20   
             2564206578   
             6974         
    000001C0 00                     .DATA.B     H'00
    000001C1 00000001               .RES.B      1
    000001C2 00000002               .RES.W      1
    000001C4              L652:
    000001C4 312050696E             .SDATA      "1 Pinfo var"
             666F207661   
             72           
    000001CF 00                     .DATA.B     H'00
    000001D0              L653:
    000001D0 322050696E             .SDATA      "2 Pinfo ine"
             666F20696E   
             65           
    000001DB 00                     .DATA.B     H'00
    000001DC              L654:
    000001DC 332050696E             .SDATA      "3 Pinfo RVal"
             666F205256   
             616C         
    000001E8 00                     .DATA.B     H'00
    000001E9 00000001               .RES.B      1
    000001EA 00000002               .RES.W      1
    000001EC              L663:
    000001EC 704D656E75             .SDATA      "pMenu Consts %d.  %d exit"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  149


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             20436F6E73   
             7473202564   
             2E20202564   
             2065786974   
    00000205 00                     .DATA.B     H'00
    00000206 00000002               .RES.W      1
    00000208              L672:
    00000208 50726F626C             .SDATA      "Problem statement %s, printMenu. Exit %d"
             656D207374   
             6174656D65   
             6E74202573   
             2C20707269   
             6E744D656E   
             752E204578   
             6974202564   
    00000230 00                     .DATA.B     H'00
    00000231 00000001               .RES.B      1
    00000232 00000002               .RES.W      1
    00000234              L674:
    00000234 322050696E             .SDATA      "2 Pinfo obj func. 3 Pinfo 2fases"
             666F206F62   
             6A2066756E   
             632E203320   
             50696E666F   
             2032666173   
             6573         
    00000254 00                     .DATA.B     H'00
    00000255 00000001               .RES.B      1
    00000256 00000002               .RES.W      1
    00000258              L676:
    00000258 322050696E             .SDATA      "2 Pinfo obj func."
             666F206F62   
             6A2066756E   
             632E         
    00000269 00                     .DATA.B     H'00
    0000026A 00000002               .RES.W      1
    0000026C              L678:
    0000026C 312050696E             .SDATA      "1 Pinfo constraint"
             666F20636F   
             6E73747261   
             696E74       
    0000027E 00                     .DATA.B     H'00
    0000027F 00000001               .RES.B      1
    00000280              L680:
    00000280 342050696E             .SDATA      "4 Pinfo aj vec"
             666F20616A   
             20766563     
    0000028E 00                     .DATA.B     H'00
    0000028F 00000001               .RES.B      1
    00000290              L692:
    00000290 4374206974             .SDATA      "Ct itId %d. S: %d.  %d exit"
             4964202564   
             2E20533A20   
             25642E2020   
             2564206578   
             6974         
    000002AB 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  150


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002AC              L694:
    000002AC 506F732025             .SDATA      "Pos %d: %.2f"
             643A20252E   
             3266         
    000002B8 00                     .DATA.B     H'00
    000002B9 00000001               .RES.B      1
    000002BA 00000002               .RES.W      1
    000002BC              L703:
    000002BC 5862206974             .SDATA      "Xb itId %d. S: %d.  %d exit"
             4964202564   
             2E20533A20   
             25642E2020   
             2564206578   
             6974         
    000002D7 00                     .DATA.B     H'00
    000002D8              L714:
    000002D8 5920262078             .SDATA      "Y & xb/y itId %d. S: %d.  %d exit"
             622F792069   
             7449642025   
             642E20533A   
             2025642E20   
             2025642065   
             786974       
    000002F9 00                     .DATA.B     H'00
    000002FA 00000002               .RES.W      1
    000002FC              L716:
    000002FC 4E6F205661             .SDATA      "No VarIn and VarOut"
             72496E2061   
             6E64205661   
             724F7574     
    0000030F 00                     .DATA.B     H'00
    00000310              L718:
    00000310 4964566172             .SDATA      "IdVarIn: %d, IdVarOut %d"
             496E3A2025   
             642C204964   
             5661724F75   
             74202564     
    00000328 00                     .DATA.B     H'00
    00000329 00000001               .RES.B      1
    0000032A 00000002               .RES.W      1
    0000032C              L720:
    0000032C 5661723A               .SDATA      "Var:"
    00000330 00                     .DATA.B     H'00
    00000331 00000001               .RES.B      1
    00000332 00000002               .RES.W      1
    00000334              L721:
    00000334 506F733A               .SDATA      "Pos:"
    00000338 00                     .DATA.B     H'00
    00000339 00000001               .RES.B      1
    0000033A 00000002               .RES.W      1
    0000033C              L724:
    0000033C 5661723A25             .SDATA      "Var:%d.Pos:%d:Y:%.2f xb/y:%.2f"
             642E506F73   
             3A25643A59   
             3A252E3266   
             2078622F79   
             3A252E3266   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  151


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000035A 00                     .DATA.B     H'00
    0000035B 00000001               .RES.B      1
    0000035C              L726:
    0000035C 5661723A25             .SDATA      "Var:%d.Pos %d:Y:%.2f xb/y: NDisp"
             642E506F73   
             2025643A59   
             3A252E3266   
             2078622F79   
             3A204E4469   
             7370         
    0000037C 00                     .DATA.B     H'00
    0000037D 00000001               .RES.B      1
    0000037E 00000002               .RES.W      1
    00000380              L735:
    00000380 437442696E             .SDATA      "CtBinv itId %d. S: %d.  %d exit"
             7620697449   
             642025642E   
             20533A2025   
             642E202025   
             6420657869   
             74           
    0000039F 00                     .DATA.B     H'00
    000003A0              L745:
    000003A0 4256617273             .SDATA      "BVars itId %d. S: %d.  %d exit"
             2069744964   
             2025642E20   
             533A202564   
             2E20202564   
             2065786974   
    000003BE 00                     .DATA.B     H'00
    000003BF 00000001               .RES.B      1
    000003C0              L747:
    000003C0 506F732025             .SDATA      "Pos %d: %d"
             643A202564   
    000003CA 00                     .DATA.B     H'00
    000003CB 00000001               .RES.B      1
    000003CC              L758:
    000003CC 5661722072             .SDATA      "Var res, printMenu. Exit %d"
             65732C2070   
             72696E744D   
             656E752E20   
             4578697420   
             2564         
    000003E7 00                     .DATA.B     H'00
    000003E8              L759:
    000003E8 4E76617273             .SDATA      "Nvars: %d, NVB: %d"
             3A2025642C   
             204E56423A   
             202564       
    000003FA 00                     .DATA.B     H'00
    000003FB 00000001               .RES.B      1
    000003FC              L760:
    000003FC 53656C6563             .SDATA      "Select a var:"
             7420612076   
             61723A       
    00000409 00                     .DATA.B     H'00
    0000040A 00000002               .RES.W      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  152


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000040C              L766:
    0000040C 7825643A20             .SDATA      "x%d: %.2f"
             252E3266     
    00000415 00                     .DATA.B     H'00
    00000416 00000002               .RES.W      1
    00000418              L769:
    00000418 4E6F207661             .SDATA      "No var found"
             7220666F75   
             6E64         
    00000424 00                     .DATA.B     H'00
    00000425 00000001               .RES.B      1
    00000426 00000002               .RES.W      1
    00000428              L778:
    00000428 4376616C73             .SDATA      "Cvals itId %d. Vars: %d.  %d exit"
             2069744964   
             2025642E20   
             566172733A   
             2025642E20   
             2025642065   
             786974       
    00000449 00                     .DATA.B     H'00
    0000044A 00000002               .RES.W      1
    0000044C              L788:
    0000044C 42696E7620             .SDATA      "Binv itId %d. S: %d.  %d exit"
             6974496420   
             25642E2053   
             3A2025642E   
             2020256420   
             65786974     
    00000469 00                     .DATA.B     H'00
    0000046A 00000002               .RES.W      1
    0000046C              L790:
    0000046C 526F773A20             .SDATA      "Row: "
    00000471 00                     .DATA.B     H'00
    00000472 00000002               .RES.W      1
    00000474              L791:
    00000474 436F6C756D             .SDATA      "Column: "
             6E3A20       
    0000047C 00                     .DATA.B     H'00
    0000047D 00000001               .RES.B      1
    0000047E 00000002               .RES.W      1
    00000480              L793:
    00000480 425B25645D             .SDATA      "B[%d][%d]: %.2f"
             5B25645D3A   
             20252E3266   
    0000048F 00                     .DATA.B     H'00
    00000490              L805:
    00000490 5A6A202620             .SDATA      "Zj & cj-zj itId %d. S: %d.  %d exit"
             636A2D7A6A   
             2069744964   
             2025642E20   
             533A202564   
             2E20202564   
             2065786974   
    000004B3 00                     .DATA.B     H'00
    000004B4              L809:
    000004B4 5A6A25643A             .SDATA      "Zj%d: %.2f. Cj-Zj: %.2f"




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  153


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             20252E3266   
             2E20436A2D   
             5A6A3A2025   
             2E3266       
    000004CB 00                     .DATA.B     H'00
    000004CC              L811:
    000004CC 7825643A20             .SDATA      "x%d: is a basic var"
             6973206120   
             6261736963   
             20766172     
    000004DF 00                     .DATA.B     H'00
    000004E0              L818:
    000004E0 4974202564             .SDATA      "It %d.ZSol: %.2f Exit %d"
             2E5A536F6C   
             3A20252E32   
             6620457869   
             74202564     
    000004F8 00                     .DATA.B     H'00
    000004F9 00000001               .RES.B      1
    000004FA 00000002               .RES.W      1
    000004FC              L819:
    000004FC 566172496E             .SDATA      "VarIn: %d, VarOut: %d. %s"
             3A2025642C   
             205661724F   
             75743A2025   
             642E202573   
    00000515 00                     .DATA.B     H'00
    00000516 00000002               .RES.W      1
    00000518              L820:
    00000518 3266617365             .SDATA      "2fases"
             73           
    0000051E 00                     .DATA.B     H'00
    0000051F 00000001               .RES.B      1
    00000520              L821:
    00000520 00                     .DATA.B     H'00
    00000521 00000001               .RES.B      1
    00000522 00000002               .RES.W      1
    00000524              L823:
    00000524 312042696E             .SDATA      "1 Binv. 2 xb. 3 ct"
             762E203220   
             78622E2033   
             206374       
    00000536 00                     .DATA.B     H'00
    00000537 00000001               .RES.B      1
    00000538              L824:
    00000538 3420437442             .SDATA      "4 CtBinv"
             696E76       
    00000540 00                     .DATA.B     H'00
    00000541 00000001               .RES.B      1
    00000542 00000002               .RES.W      1
    00000544              L825:
    00000544 35207A6A20             .SDATA      "5 zj and cj-zj"
             616E642063   
             6A2D7A6A     
    00000552 00                     .DATA.B     H'00
    00000553 00000001               .RES.B      1
    00000554              L826:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  154


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000554 3620796A20             .SDATA      "6 yj & xb/yj"
             262078622F   
             796A         
    00000560 00                     .DATA.B     H'00
    00000561 00000001               .RES.B      1
    00000562 00000002               .RES.W      1
    00000564              L827:
    00000564 3720616A2E             .SDATA      "7 aj. 8 Cv"
             2038204376   
    0000056E 00                     .DATA.B     H'00
    0000056F 00000001               .RES.B      1
    00000570              L828:
    00000570 3920626173             .SDATA      "9 basic vars B"
             6963207661   
             72732042     
    0000057E 00                     .DATA.B     H'00
    0000057F 00000001               .RES.B      1
    00000580              L836:
    00000580 4974732073             .SDATA      "Its sel. Nits: %d. Exit %d"
             656C2E204E   
             6974733A20   
             25642E2045   
             7869742025   
             64           
    0000059A 00                     .DATA.B     H'00
    0000059B 00000001               .RES.B      1
    0000059C              L845:
    0000059C 50726F626C             .SDATA      "Problem solution, printMenu. Exit %d"
             656D20736F   
             6C7574696F   
             6E2C207072   
             696E744D65   
             6E752E2045   
             7869742025   
             64           
    000005C0 00                     .DATA.B     H'00
    000005C1 00000001               .RES.B      1
    000005C2 00000002               .RES.W      1
    000005C4              L846:
    000005C4 4E6974733A             .SDATA      "Nits: %d, ZSol: %.2f"
             2025642C20   
             5A536F6C3A   
             20252E3266   
    000005D8 00                     .DATA.B     H'00
    000005D9 00000001               .RES.B      1
    000005DA 00000002               .RES.W      1
    000005DC              L848:
    000005DC 312050696E             .SDATA      "1 Pinfo res vars"
             666F207265   
             7320766172   
             73           
    000005EC 00                     .DATA.B     H'00
    000005ED 00000001               .RES.B      1
    000005EE 00000002               .RES.W      1
    000005F0              L849:
    000005F0 322050696E             .SDATA      "2 Pinfo its"
             666F206974   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  155


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             73           
    000005FB 00                     .DATA.B     H'00
    000005FC              L858:
    000005FC 436F6E7374             .SDATA      "Constraint: %d, Choose Inequality"
             7261696E74   
             3A2025642C   
             2043686F6F   
             736520496E   
             657175616C   
             697479       
    0000061D 00                     .DATA.B     H'00
    0000061E 00000002               .RES.W      1
    00000620              L859:
    00000620 5072657373             .SDATA      "Press E: %d, LET %d,  GET %d"
             20453A2025   
             642C204C45   
             542025642C   
             2020474554   
             202564       
    0000063C 00                     .DATA.B     H'00
    0000063D 00000001               .RES.B      1
    0000063E 00000002               .RES.W      1
    00000640              L866:
    00000640 436F6E7374             .SDATA      "Constraint: %d, Right Value"
             7261696E74   
             3A2025642C   
             2052696768   
             742056616C   
             7565         
    0000065B 00                     .DATA.B     H'00
    0000065C              L879:
    0000065C 436F6E7374             .SDATA      "Constraint: %d, variable: %d"
             7261696E74   
             3A2025642C   
             2076617269   
             61626C653A   
             202564       
    00000678 00                     .DATA.B     H'00
    00000679 00000001               .RES.B      1
    0000067A 00000002               .RES.W      1
    0000067C              L896:
    0000067C 4E436F6E73             .SDATA      "NConstraints?"
             747261696E   
             74733F       
    00000689 00                     .DATA.B     H'00
    0000068A 00000002               .RES.W      1
    0000068C              L897:
    0000068C 4E56617269             .SDATA      "NVariables?"
             61626C6573   
             3F           
    00000697 00                     .DATA.B     H'00
    00000698              L900:
    00000698 5661726961             .SDATA      "Variable x%d"
             626C652078   
             2564         
    000006A4 00                     .DATA.B     H'00
    000006A5 00000001               .RES.B      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  156


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000006A6 00000002               .RES.W      1
    000006A8              L901:
    000006A8 5072657373             .SDATA      "Press 1 if Int var, 0 no"
             2031206966   
             20496E7420   
             7661722C20   
             30206E6F     
    000006C0 00                     .DATA.B     H'00
    000006C1 00000001               .RES.B      1
    000006C2 00000002               .RES.W      1
    000006C4              L904:
    000006C4 4F424A2E20             .SDATA      "OBJ. Min: %d, Max %d"
             4D696E3A20   
             25642C204D   
             6178202564   
    000006D8 00                     .DATA.B     H'00
    000006D9 00000001               .RES.B      1
    000006DA 00000002               .RES.W      1
    000006DC              L906:
    000006DC 4F626A2076             .SDATA      "Obj value var x%d"
             616C756520   
             7661722078   
             2564         
    000006ED 00                     .DATA.B     H'00
    000006EE 00000002               .RES.W      1
    000006F0              L907:
    000006F0 4F626A2076             .SDATA      "Obj value Independent"
             616C756520   
             496E646570   
             656E64656E   
             74           
    00000705 00                     .DATA.B     H'00
    00000706 00000002               .RES.W      1
    00000708              L918:
    00000708 4E526F7773             .SDATA      "NRows?"
             3F           
    0000070E 00                     .DATA.B     H'00
    0000070F 00000001               .RES.B      1
    00000710              L920:
    00000710 6964204261             .SDATA      "id Basic var Row %d"
             7369632076   
             617220526F   
             77202564     
    00000723 00                     .DATA.B     H'00
    00000724              L923:
    00000724 56616C7565             .SDATA      "Value var Row %d Col %d"
             2076617220   
             526F772025   
             6420436F6C   
             202564       
    0000073B 00                     .DATA.B     H'00
    0000073C              L925:
    0000073C 56616C7565             .SDATA      "Value xb Row %d"
             2078622052   
             6F77202564   
    0000074B 00                     .DATA.B     H'00
    0000074C              L927:




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE  157


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000074C 56616C7565             .SDATA      "Value Cj-Zj x%d"
             20436A2D5A   
             6A20782564   
    0000075B 00                     .DATA.B     H'00
    0000075C              L928:
    0000075C 5A2076616C             .SDATA      "Z val"
    00000761 00                     .DATA.B     H'00
    00000762 00000002               .RES.W      1
    00000764              L935:
    00000764 4D6F64652E             .SDATA      "Mode. Full %d, Table %d"
             2046756C6C   
             2025642C20   
             5461626C65   
             202564       
    0000077B 00                     .DATA.B     H'00
B   00000000              _ex:                             ; static: ex
    00000000 00000038               .RES.L      14
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1










































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 10-Jan-2021 20:18:48  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        67




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:     1770



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000031A8 Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               0000077C Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000000 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00000038 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 0000396C Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           24
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          56
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           463






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\pillo\AppData\Local\Temp\hmk5843.tmp 

